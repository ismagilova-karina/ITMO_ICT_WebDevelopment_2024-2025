{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u044b\u0435 \u0438 \u043f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u043a\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u043f\u043e \u043a\u0443\u0440\u0441\u0443 WEB-\u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435","title":"Home"},{"location":"#web-","text":"","title":"\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u044b\u0435 \u0438 \u043f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u043a\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u043f\u043e \u043a\u0443\u0440\u0441\u0443 WEB-\u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435"},{"location":"lab-1/ex-1/","text":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 \u2116 1: \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0443\u044e \u0438 \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u0443\u044e \u0447\u0430\u0441\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u041a\u043b\u0438\u0435\u043d\u0442 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0443 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u00abHello, server\u00bb, \u0438 \u043e\u043d\u043e \u0434\u043e\u043b\u0436\u043d\u043e \u043e\u0442\u043e\u0431\u0440\u0430\u0437\u0438\u0442\u044c\u0441\u044f \u043d\u0430 \u0441\u0442\u043e\u0440\u043e\u043d\u0435 \u0441\u0435\u0440\u0432\u0435\u0440\u0430. \u0412 \u043e\u0442\u0432\u0435\u0442 \u0441\u0435\u0440\u0432\u0435\u0440 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0443 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u00abHello, client\u00bb, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0434\u043e\u043b\u0436\u043d\u043e \u043e\u0442\u043e\u0431\u0440\u0430\u0437\u0438\u0442\u044c\u0441\u044f \u0443 \u043a\u043b\u0438\u0435\u043d\u0442\u0430. \u0422\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f: \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 socket. \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u0430 UDP. \u0421\u0442\u044d\u043a \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438: \u042f\u0437\u044b\u043a - Python \u0411\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 - socket \u041f\u0440\u043e\u0442\u043e\u043a\u043e\u043b - UDP \u0417\u0430\u043f\u0443\u0441\u043a \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c: \u0421\u0435\u0440\u0432\u0435\u0440: python server.py \u041a\u043b\u0438\u0435\u043d\u0442: python client.py \u041b\u0438\u0441\u0442\u0438\u043d\u0433 \u043a\u043e\u0434\u0430: \u0421\u0435\u0440\u0432\u0435\u0440: import socket server_socket = socket.socket(socket.AF_INET, socket.SOCK_DGRAM) server_socket.bind(('localhost', 8080)) print(\"\u0421\u0435\u0440\u0432\u0435\u0440 \u0437\u0430\u043f\u0443\u0449\u0435\u043d\") while True: request, client_address = server_socket.recvfrom(1024) print(f'\u0417\u0430\u043f\u0440\u043e\u0441 \u043e\u0442 {client_address}: {request.decode()}') response = 'Hello, Client!' server_socket.sendto(response.encode(), client_address) # request.close() \u041a\u043b\u0438\u0435\u043d\u0442: import socket client_socket = socket.socket(socket.AF_INET, socket.SOCK_DGRAM) client_socket.sendto(b'Hello, server!', ('localhost', 8080)) response, server_address = client_socket.recvfrom(1024) print(f'\u041e\u0442\u0432\u0435\u0442 \u043e\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430: {response.decode()}') client_socket.close()","title":"ex-1"},{"location":"lab-1/ex-1/#no-1","text":"\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0443\u044e \u0438 \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u0443\u044e \u0447\u0430\u0441\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u041a\u043b\u0438\u0435\u043d\u0442 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0443 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u00abHello, server\u00bb, \u0438 \u043e\u043d\u043e \u0434\u043e\u043b\u0436\u043d\u043e \u043e\u0442\u043e\u0431\u0440\u0430\u0437\u0438\u0442\u044c\u0441\u044f \u043d\u0430 \u0441\u0442\u043e\u0440\u043e\u043d\u0435 \u0441\u0435\u0440\u0432\u0435\u0440\u0430. \u0412 \u043e\u0442\u0432\u0435\u0442 \u0441\u0435\u0440\u0432\u0435\u0440 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0443 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u00abHello, client\u00bb, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0434\u043e\u043b\u0436\u043d\u043e \u043e\u0442\u043e\u0431\u0440\u0430\u0437\u0438\u0442\u044c\u0441\u044f \u0443 \u043a\u043b\u0438\u0435\u043d\u0442\u0430. \u0422\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f: \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 socket. \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u0430 UDP.","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 \u2116 1:"},{"location":"lab-1/ex-1/#_1","text":"\u042f\u0437\u044b\u043a - Python \u0411\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 - socket \u041f\u0440\u043e\u0442\u043e\u043a\u043e\u043b - UDP","title":"\u0421\u0442\u044d\u043a \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438:"},{"location":"lab-1/ex-1/#_2","text":"\u0421\u0435\u0440\u0432\u0435\u0440: python server.py \u041a\u043b\u0438\u0435\u043d\u0442: python client.py","title":"\u0417\u0430\u043f\u0443\u0441\u043a \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c:"},{"location":"lab-1/ex-1/#_3","text":"\u0421\u0435\u0440\u0432\u0435\u0440: import socket server_socket = socket.socket(socket.AF_INET, socket.SOCK_DGRAM) server_socket.bind(('localhost', 8080)) print(\"\u0421\u0435\u0440\u0432\u0435\u0440 \u0437\u0430\u043f\u0443\u0449\u0435\u043d\") while True: request, client_address = server_socket.recvfrom(1024) print(f'\u0417\u0430\u043f\u0440\u043e\u0441 \u043e\u0442 {client_address}: {request.decode()}') response = 'Hello, Client!' server_socket.sendto(response.encode(), client_address) # request.close() \u041a\u043b\u0438\u0435\u043d\u0442: import socket client_socket = socket.socket(socket.AF_INET, socket.SOCK_DGRAM) client_socket.sendto(b'Hello, server!', ('localhost', 8080)) response, server_address = client_socket.recvfrom(1024) print(f'\u041e\u0442\u0432\u0435\u0442 \u043e\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430: {response.decode()}') client_socket.close()","title":"\u041b\u0438\u0441\u0442\u0438\u043d\u0433 \u043a\u043e\u0434\u0430:"},{"location":"lab-1/ex-2/","text":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 \u2116 2: \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0443\u044e \u0438 \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u0443\u044e \u0447\u0430\u0441\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u041a\u043b\u0438\u0435\u043d\u0442 \u0437\u0430\u043f\u0440\u0430\u0448\u0438\u0432\u0430\u0435\u0442 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u043c\u0430\u0442\u0435\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438, \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u0432\u0432\u043e\u0434\u044f\u0442\u0441\u044f \u0441 \u043a\u043b\u0430\u0432\u0438\u0430\u0442\u0443\u0440\u044b. \u0421\u0435\u0440\u0432\u0435\u0440 \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0443. \u041c\u043e\u0451 \u0437\u0430\u0434\u0430\u043d\u0438\u0435 \u043f\u043e \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u0443 - \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0442\u0435\u043e\u0440\u0435\u043c\u0443 \u041f\u0438\u0444\u0430\u0433\u043e\u0440\u0430 \u0421\u0442\u044d\u043a \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438: \u042f\u0437\u044b\u043a - Python \u0411\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 - socket, math \u041f\u0440\u043e\u0442\u043e\u043a\u043e\u043b - TCP \u0417\u0430\u043f\u0443\u0441\u043a \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c: \u0421\u0435\u0440\u0432\u0435\u0440: python server.py \u041a\u043b\u0438\u0435\u043d\u0442: python client.py \u041b\u0438\u0441\u0442\u0438\u043d\u0433 \u043a\u043e\u0434\u0430: \u0421\u0435\u0440\u0432\u0435\u0440: import socket import math server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM) server_socket.bind(('localhost', 8080)) server_socket.listen(1) print(\"\u0421\u0435\u0440\u0432\u0435\u0440 \u0437\u0430\u043f\u0443\u0449\u0435\u043d\") def hypotenuse_calc(a, b): return math.sqrt(a**2 + b**2) while True: client_connection, client_address = server_socket.accept() print(f'\u041f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u043e\u0442 {client_address}') triangle = client_connection.recv(1024).decode() a, b = map(float, triangle.split()) hypotenuse = hypotenuse_calc(a, b) response = f\"\u0413\u0438\u043f\u043e\u0442\u0435\u043d\u0443\u0437\u0430: {hypotenuse:.2f}\" client_connection.send(response.encode()) # client_connection.close() \u041a\u043b\u0438\u0435\u043d\u0442: import socket client_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM) client_socket.connect(('localhost', 8080)) a = input(\"\u0414\u043b\u0438\u043d\u0430 \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u043a\u0430\u0442\u0435\u0442\u0430: \") b = input(\"\u0414\u043b\u0438\u043d\u0430 \u0432\u0442\u043e\u0440\u043e\u0433\u043e \u043a\u0430\u0442\u0435\u0442\u0430: \") client_socket.send(f\"{a} {b}\".encode()) response = client_socket.recv(1024) print(f'\u041e\u0442\u0432\u0435\u0442: {response.decode()}') client_socket.close()","title":"ex-2"},{"location":"lab-1/ex-2/#no-2","text":"\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0443\u044e \u0438 \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u0443\u044e \u0447\u0430\u0441\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u041a\u043b\u0438\u0435\u043d\u0442 \u0437\u0430\u043f\u0440\u0430\u0448\u0438\u0432\u0430\u0435\u0442 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u043c\u0430\u0442\u0435\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438, \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u0432\u0432\u043e\u0434\u044f\u0442\u0441\u044f \u0441 \u043a\u043b\u0430\u0432\u0438\u0430\u0442\u0443\u0440\u044b. \u0421\u0435\u0440\u0432\u0435\u0440 \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0443. \u041c\u043e\u0451 \u0437\u0430\u0434\u0430\u043d\u0438\u0435 \u043f\u043e \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u0443 - \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0442\u0435\u043e\u0440\u0435\u043c\u0443 \u041f\u0438\u0444\u0430\u0433\u043e\u0440\u0430","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 \u2116 2:"},{"location":"lab-1/ex-2/#_1","text":"\u042f\u0437\u044b\u043a - Python \u0411\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 - socket, math \u041f\u0440\u043e\u0442\u043e\u043a\u043e\u043b - TCP","title":"\u0421\u0442\u044d\u043a \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438:"},{"location":"lab-1/ex-2/#_2","text":"\u0421\u0435\u0440\u0432\u0435\u0440: python server.py \u041a\u043b\u0438\u0435\u043d\u0442: python client.py","title":"\u0417\u0430\u043f\u0443\u0441\u043a \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c:"},{"location":"lab-1/ex-2/#_3","text":"\u0421\u0435\u0440\u0432\u0435\u0440: import socket import math server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM) server_socket.bind(('localhost', 8080)) server_socket.listen(1) print(\"\u0421\u0435\u0440\u0432\u0435\u0440 \u0437\u0430\u043f\u0443\u0449\u0435\u043d\") def hypotenuse_calc(a, b): return math.sqrt(a**2 + b**2) while True: client_connection, client_address = server_socket.accept() print(f'\u041f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u043e\u0442 {client_address}') triangle = client_connection.recv(1024).decode() a, b = map(float, triangle.split()) hypotenuse = hypotenuse_calc(a, b) response = f\"\u0413\u0438\u043f\u043e\u0442\u0435\u043d\u0443\u0437\u0430: {hypotenuse:.2f}\" client_connection.send(response.encode()) # client_connection.close() \u041a\u043b\u0438\u0435\u043d\u0442: import socket client_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM) client_socket.connect(('localhost', 8080)) a = input(\"\u0414\u043b\u0438\u043d\u0430 \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u043a\u0430\u0442\u0435\u0442\u0430: \") b = input(\"\u0414\u043b\u0438\u043d\u0430 \u0432\u0442\u043e\u0440\u043e\u0433\u043e \u043a\u0430\u0442\u0435\u0442\u0430: \") client_socket.send(f\"{a} {b}\".encode()) response = client_socket.recv(1024) print(f'\u041e\u0442\u0432\u0435\u0442: {response.decode()}') client_socket.close()","title":"\u041b\u0438\u0441\u0442\u0438\u043d\u0433 \u043a\u043e\u0434\u0430:"},{"location":"lab-1/ex-3/","text":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 3: \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u0443\u044e \u0447\u0430\u0441\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u041a\u043b\u0438\u0435\u043d\u0442 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0435\u0442\u0441\u044f \u043a \u0441\u0435\u0440\u0432\u0435\u0440\u0443, \u0438 \u0432 \u043e\u0442\u0432\u0435\u0442 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 HTTP-\u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0435\u0435 HTML-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0441\u0435\u0440\u0432\u0435\u0440 \u043f\u043e\u0434\u0433\u0440\u0443\u0436\u0430\u0435\u0442 \u0438\u0437 \u0444\u0430\u0439\u043b\u0430 index.html. \u0421\u0442\u044d\u043a \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438: \u042f\u0437\u044b\u043a - Python \u0411\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 - socket \u041f\u0440\u043e\u0442\u043e\u043a\u043e\u043b - TCP \u0417\u0430\u043f\u0443\u0441\u043a \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c: \u0421\u0435\u0440\u0432\u0435\u0440: python server.py \u041a\u043b\u0438\u0435\u043d\u0442: python client.py \u041b\u0438\u0441\u0442\u0438\u043d\u0433 \u043a\u043e\u0434\u0430: \u0421\u0435\u0440\u0432\u0435\u0440: import socket HOST = 'localhost' PORT = 8080 server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM) server_socket.bind((HOST, PORT)) server_socket.listen(5) print(f\"HTTP \u0441\u0435\u0440\u0432\u0435\u0440 \u0437\u0430\u043f\u0443\u0449\u0435\u043d \u043d\u0430 {HOST}:{PORT}...\") while True: client_connection, client_address = server_socket.accept() print(f'\u041f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u043e\u0442 {client_address}') request = client_connection.recv(1024).decode() print(f'\u0417\u0430\u043f\u0440\u043e\u0441 \u043a\u043b\u0438\u0435\u043d\u0442\u0430:\\n{request}') with open('index.html', 'r', encoding='utf-8') as file: html_content = file.read() http_response = ( \"HTTP/1.1 200 OK\\r\\n\" \"Content-Type: text/html; charset=UTF-8\\r\\n\" f\"Content-Length: {len(html_content.encode('utf-8'))}\\r\\n\" \"Connection: close\\r\\n\" \"\\r\\n\" + html_content ) client_connection.sendall(http_response.encode()) client_connection.close() \u041b\u0438\u0441\u0442\u0438\u043d\u0433 html \u0444\u0430\u0439\u043b\u0430 index.html: <!DOCTYPE html> <html lang=\"ru\"> <head> <meta charset=\"UTF-8\"> <title>\u041f\u0440\u043e\u0441\u0442\u043e\u0439 \u0441\u0435\u0440\u0432\u0435\u0440.</title> </head> <body> <h1>\u041f\u0440\u0438\u0432\u0435\u0442! \u042d\u0442\u043e \u043f\u0440\u043e\u0441\u0442\u0430\u044f HTML-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430.</h1> </body> </html> \u041a\u043b\u0438\u0435\u043d\u0442: import socket server_host = 'localhost' server_port = 8080 client_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM) client_socket.connect((server_host, server_port)) http_request = \"GET / HTTP/1.1\\r\\nHost: localhost\\r\\nConnection: close\\r\\n\\r\\n\" client_socket.sendall(http_request.encode()) response = b\"\" while True: data = client_socket.recv(1024) if not data: break response += data client_socket.close() http_response = response.decode('utf-8') print(\"\u041e\u0442\u0432\u0435\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430:\") print(http_response) html_start = http_response.find(\"\\r\\n\\r\\n\") + 4 html_content = http_response[html_start:] client_socket.close()","title":"ex-3"},{"location":"lab-1/ex-3/#3","text":"\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u0443\u044e \u0447\u0430\u0441\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u041a\u043b\u0438\u0435\u043d\u0442 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0435\u0442\u0441\u044f \u043a \u0441\u0435\u0440\u0432\u0435\u0440\u0443, \u0438 \u0432 \u043e\u0442\u0432\u0435\u0442 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 HTTP-\u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0435\u0435 HTML-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0441\u0435\u0440\u0432\u0435\u0440 \u043f\u043e\u0434\u0433\u0440\u0443\u0436\u0430\u0435\u0442 \u0438\u0437 \u0444\u0430\u0439\u043b\u0430 index.html.","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 3:"},{"location":"lab-1/ex-3/#_1","text":"\u042f\u0437\u044b\u043a - Python \u0411\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 - socket \u041f\u0440\u043e\u0442\u043e\u043a\u043e\u043b - TCP","title":"\u0421\u0442\u044d\u043a \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438:"},{"location":"lab-1/ex-3/#_2","text":"\u0421\u0435\u0440\u0432\u0435\u0440: python server.py \u041a\u043b\u0438\u0435\u043d\u0442: python client.py","title":"\u0417\u0430\u043f\u0443\u0441\u043a \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c:"},{"location":"lab-1/ex-3/#_3","text":"\u0421\u0435\u0440\u0432\u0435\u0440: import socket HOST = 'localhost' PORT = 8080 server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM) server_socket.bind((HOST, PORT)) server_socket.listen(5) print(f\"HTTP \u0441\u0435\u0440\u0432\u0435\u0440 \u0437\u0430\u043f\u0443\u0449\u0435\u043d \u043d\u0430 {HOST}:{PORT}...\") while True: client_connection, client_address = server_socket.accept() print(f'\u041f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u043e\u0442 {client_address}') request = client_connection.recv(1024).decode() print(f'\u0417\u0430\u043f\u0440\u043e\u0441 \u043a\u043b\u0438\u0435\u043d\u0442\u0430:\\n{request}') with open('index.html', 'r', encoding='utf-8') as file: html_content = file.read() http_response = ( \"HTTP/1.1 200 OK\\r\\n\" \"Content-Type: text/html; charset=UTF-8\\r\\n\" f\"Content-Length: {len(html_content.encode('utf-8'))}\\r\\n\" \"Connection: close\\r\\n\" \"\\r\\n\" + html_content ) client_connection.sendall(http_response.encode()) client_connection.close() \u041b\u0438\u0441\u0442\u0438\u043d\u0433 html \u0444\u0430\u0439\u043b\u0430 index.html: <!DOCTYPE html> <html lang=\"ru\"> <head> <meta charset=\"UTF-8\"> <title>\u041f\u0440\u043e\u0441\u0442\u043e\u0439 \u0441\u0435\u0440\u0432\u0435\u0440.</title> </head> <body> <h1>\u041f\u0440\u0438\u0432\u0435\u0442! \u042d\u0442\u043e \u043f\u0440\u043e\u0441\u0442\u0430\u044f HTML-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430.</h1> </body> </html> \u041a\u043b\u0438\u0435\u043d\u0442: import socket server_host = 'localhost' server_port = 8080 client_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM) client_socket.connect((server_host, server_port)) http_request = \"GET / HTTP/1.1\\r\\nHost: localhost\\r\\nConnection: close\\r\\n\\r\\n\" client_socket.sendall(http_request.encode()) response = b\"\" while True: data = client_socket.recv(1024) if not data: break response += data client_socket.close() http_response = response.decode('utf-8') print(\"\u041e\u0442\u0432\u0435\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430:\") print(http_response) html_start = http_response.find(\"\\r\\n\\r\\n\") + 4 html_content = http_response[html_start:] client_socket.close()","title":"\u041b\u0438\u0441\u0442\u0438\u043d\u0433 \u043a\u043e\u0434\u0430:"},{"location":"lab-1/ex-4/","text":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 4: \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0434\u0432\u0443\u0445\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u0438\u043b\u0438 \u043c\u043d\u043e\u0433\u043e\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u0447\u0430\u0442. \u0414\u043b\u044f \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u0431\u0430\u043b\u043b\u043e\u0432 \u0440\u0435\u0430\u043b\u0438\u0437\u0443\u0439\u0442\u0435 \u043c\u043d\u043e\u0433\u043e\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u0447\u0430\u0442. \u0421\u0442\u044d\u043a \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438: \u042f\u0437\u044b\u043a - Python \u0411\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 - socket, threading \u041f\u0440\u043e\u0442\u043e\u043a\u043e\u043b - TCP \u0417\u0430\u043f\u0443\u0441\u043a \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c: \u0421\u0435\u0440\u0432\u0435\u0440: python server.py \u041a\u043b\u0438\u0435\u043d\u0442: python client.py \u041b\u0438\u0441\u0442\u0438\u043d\u0433 \u043a\u043e\u0434\u0430: \u0421\u0435\u0440\u0432\u0435\u0440: import socket import threading HOST = 'localhost' PORT = 8080 clients = {} def broadcast(message, sender_socket): for client_socket in clients.keys(): if client_socket != sender_socket: try: client_socket.send(message) except Exception as e: print(f\"\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f: {e}\") disconnect_client(client_socket) def disconnect_client(client_socket): client_name = clients.pop(client_socket, \"\u0410\u0433\u0435\u043d\u0442 \u043f\u043e\u0434 \u043f\u0440\u0438\u043a\u0440\u044b\u0442\u0438\u0435\u043c\") client_socket.close() print(f\"{client_name} \u043e\u0442\u043a\u043b\u044e\u0447\u0438\u043b\u0441\u044f.\") broadcast(f\"{client_name} \u0432\u044b\u0448\u0435\u043b \u0438\u0437 \u0447\u0430\u0442\u0430 :(\".encode('utf-8'), client_socket) def handle_client(client_socket, client_address): print(f\"[{client_address}] \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0438\u043b\u0441\u044f.\") client_socket.send(\"\u0412\u0430\u0448\u0435 \u0438\u043c\u044f: \".encode('utf-8')) client_name = client_socket.recv(1024).decode('utf-8').strip() or \"\u0410\u0433\u0435\u043d\u0442 \u043f\u043e\u0434 \u043f\u0440\u0438\u043a\u0440\u044b\u0442\u0438\u0435\u043c\" clients[client_socket] = client_name welcome_message = f\"{client_name} \u0442\u0435\u043f\u0435\u0440\u044c \u0432 \u0447\u0430\u0442\u0435!\".encode('utf-8') broadcast(welcome_message, client_socket) while True: try: message = client_socket.recv(1024) if message: full_message = f\"{client_name}: {message.decode('utf-8')}\".encode('utf-8') broadcast(full_message, client_socket) else: disconnect_client(client_socket) break except Exception as e: disconnect_client(client_socket) break def start_server(): server = socket.socket(socket.AF_INET, socket.SOCK_STREAM) server.bind((HOST, PORT)) server.listen() print(\"\u0421\u0435\u0440\u0432\u0435\u0440 \u0437\u0430\u043f\u0443\u0449\u0435\u043d\") try: while True: client_socket, client_address = server.accept() thread = threading.Thread(target=handle_client, args=(client_socket, client_address)) thread.start() except KeyboardInterrupt: print(\"\\n\u0421\u0435\u0440\u0432\u0435\u0440 \u0437\u0430\u0432\u0435\u0440\u0448\u0430\u0435\u0442 \u0440\u0430\u0431\u043e\u0442\u0443.\") finally: for client in clients: client.close() server.close() if __name__ == \"__main__\": start_server() \u041a\u043b\u0438\u0435\u043d\u0442: import socket import threading HOST = 'localhost' PORT = 8080 def receive_messages(client_socket): try: while True: message = client_socket.recv(1024).decode('utf-8') print(message) except OSError: pass finally: client_socket.close() def send_messages(client_socket): try: while True: message = input('') if message.lower() == 'exit': client_socket.shutdown(socket.SHUT_RDWR) client_socket.close() break client_socket.send(message.encode('utf-8')) except OSError: pass def start_client(): client_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM) client_socket.connect((HOST, PORT)) receive_thread = threading.Thread(target=receive_messages, args=(client_socket,)) send_thread = threading.Thread(target=send_messages, args=(client_socket,)) receive_thread.start() send_thread.start() receive_thread.join() send_thread.join() if __name__ == \"__main__\": start_client()","title":"ex-4"},{"location":"lab-1/ex-4/#4","text":"\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0434\u0432\u0443\u0445\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u0438\u043b\u0438 \u043c\u043d\u043e\u0433\u043e\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u0447\u0430\u0442. \u0414\u043b\u044f \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u0431\u0430\u043b\u043b\u043e\u0432 \u0440\u0435\u0430\u043b\u0438\u0437\u0443\u0439\u0442\u0435 \u043c\u043d\u043e\u0433\u043e\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u0447\u0430\u0442.","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 4:"},{"location":"lab-1/ex-4/#_1","text":"\u042f\u0437\u044b\u043a - Python \u0411\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 - socket, threading \u041f\u0440\u043e\u0442\u043e\u043a\u043e\u043b - TCP","title":"\u0421\u0442\u044d\u043a \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438:"},{"location":"lab-1/ex-4/#_2","text":"\u0421\u0435\u0440\u0432\u0435\u0440: python server.py \u041a\u043b\u0438\u0435\u043d\u0442: python client.py","title":"\u0417\u0430\u043f\u0443\u0441\u043a \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c:"},{"location":"lab-1/ex-4/#_3","text":"\u0421\u0435\u0440\u0432\u0435\u0440: import socket import threading HOST = 'localhost' PORT = 8080 clients = {} def broadcast(message, sender_socket): for client_socket in clients.keys(): if client_socket != sender_socket: try: client_socket.send(message) except Exception as e: print(f\"\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f: {e}\") disconnect_client(client_socket) def disconnect_client(client_socket): client_name = clients.pop(client_socket, \"\u0410\u0433\u0435\u043d\u0442 \u043f\u043e\u0434 \u043f\u0440\u0438\u043a\u0440\u044b\u0442\u0438\u0435\u043c\") client_socket.close() print(f\"{client_name} \u043e\u0442\u043a\u043b\u044e\u0447\u0438\u043b\u0441\u044f.\") broadcast(f\"{client_name} \u0432\u044b\u0448\u0435\u043b \u0438\u0437 \u0447\u0430\u0442\u0430 :(\".encode('utf-8'), client_socket) def handle_client(client_socket, client_address): print(f\"[{client_address}] \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0438\u043b\u0441\u044f.\") client_socket.send(\"\u0412\u0430\u0448\u0435 \u0438\u043c\u044f: \".encode('utf-8')) client_name = client_socket.recv(1024).decode('utf-8').strip() or \"\u0410\u0433\u0435\u043d\u0442 \u043f\u043e\u0434 \u043f\u0440\u0438\u043a\u0440\u044b\u0442\u0438\u0435\u043c\" clients[client_socket] = client_name welcome_message = f\"{client_name} \u0442\u0435\u043f\u0435\u0440\u044c \u0432 \u0447\u0430\u0442\u0435!\".encode('utf-8') broadcast(welcome_message, client_socket) while True: try: message = client_socket.recv(1024) if message: full_message = f\"{client_name}: {message.decode('utf-8')}\".encode('utf-8') broadcast(full_message, client_socket) else: disconnect_client(client_socket) break except Exception as e: disconnect_client(client_socket) break def start_server(): server = socket.socket(socket.AF_INET, socket.SOCK_STREAM) server.bind((HOST, PORT)) server.listen() print(\"\u0421\u0435\u0440\u0432\u0435\u0440 \u0437\u0430\u043f\u0443\u0449\u0435\u043d\") try: while True: client_socket, client_address = server.accept() thread = threading.Thread(target=handle_client, args=(client_socket, client_address)) thread.start() except KeyboardInterrupt: print(\"\\n\u0421\u0435\u0440\u0432\u0435\u0440 \u0437\u0430\u0432\u0435\u0440\u0448\u0430\u0435\u0442 \u0440\u0430\u0431\u043e\u0442\u0443.\") finally: for client in clients: client.close() server.close() if __name__ == \"__main__\": start_server() \u041a\u043b\u0438\u0435\u043d\u0442: import socket import threading HOST = 'localhost' PORT = 8080 def receive_messages(client_socket): try: while True: message = client_socket.recv(1024).decode('utf-8') print(message) except OSError: pass finally: client_socket.close() def send_messages(client_socket): try: while True: message = input('') if message.lower() == 'exit': client_socket.shutdown(socket.SHUT_RDWR) client_socket.close() break client_socket.send(message.encode('utf-8')) except OSError: pass def start_client(): client_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM) client_socket.connect((HOST, PORT)) receive_thread = threading.Thread(target=receive_messages, args=(client_socket,)) send_thread = threading.Thread(target=send_messages, args=(client_socket,)) receive_thread.start() send_thread.start() receive_thread.join() send_thread.join() if __name__ == \"__main__\": start_client()","title":"\u041b\u0438\u0441\u0442\u0438\u043d\u0433 \u043a\u043e\u0434\u0430:"},{"location":"lab-1/ex-5/","text":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 5: \u041d\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u043f\u0440\u043e\u0441\u0442\u043e\u0439 \u0432\u0435\u0431-\u0441\u0435\u0440\u0432\u0435\u0440 \u0434\u043b\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 GET \u0438 POST HTTP-\u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 socket \u0432 Python. \u0421\u0435\u0440\u0432\u0435\u0440 \u0434\u043e\u043b\u0436\u0435\u043d: \u041f\u0440\u0438\u043d\u044f\u0442\u044c \u0438 \u0437\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0435 \u0438 \u043e\u0446\u0435\u043d\u043a\u0435 \u043f\u043e \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0435. \u041e\u0442\u0434\u0430\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e\u0431\u043e \u0432\u0441\u0435\u0445 \u043e\u0446\u0435\u043d\u043a\u0430\u0445 \u043f\u043e \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0430\u043c \u0432 \u0432\u0438\u0434\u0435 HTML-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b. \u0421\u0442\u044d\u043a \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438: \u042f\u0437\u044b\u043a - Python \u0411\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 - socket, threading \u041f\u0440\u043e\u0442\u043e\u043a\u043e\u043b - TCP \u0417\u0430\u043f\u0443\u0441\u043a \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c: \u0421\u0435\u0440\u0432\u0435\u0440: python server.py \u041b\u0438\u0441\u0442\u0438\u043d\u0433 \u043a\u043e\u0434\u0430: \u0421\u0435\u0440\u0432\u0435\u0440: import socket from collections import defaultdict import urllib.parse class MyHTTPServer: df = defaultdict(list) def __init__(self, host: str, port: int): self.host = host self.port = port def serve_forever(self): serv_sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM, proto=0) print(\"\u0421\u0435\u0440\u0432\u0435\u0440 \u0437\u0430\u043f\u0443\u0449\u0435\u043d\") try: serv_sock.bind((self.host, self.port)) serv_sock.listen() while True: conn, _ = serv_sock.accept() try: self.serve_client(conn) except Exception as e: print('Client serving failed', e) finally: serv_sock.close() def serve_client(self, connection): try: req = self.parse_request(connection) resp = self.handle_request(req) self.send_response(connection, resp) except ConnectionResetError: connection = None except Exception as e: self.send_error(connection, e) finally: if connection: connection.close() def parse_request(self, connection): reader = connection.makefile('r') request_line = reader.readline().strip() method, url, version = request_line.split() headers = self.parse_headers(reader) body = None if method == 'POST': content_length = int(headers.get('Content-Length', 0)) body = reader.read(content_length) return { \"method\": method, \"path\": url, \"headers\": headers, \"body\": body } def parse_headers(self, reader): headers = {} while True: line = reader.readline().strip() if not line: break key, value = line.split(\":\", 1) headers[key.strip()] = value.strip() return headers def handle_request(self, req): if req[\"method\"] == \"GET\" and req[\"path\"] == \"/\": return self.serve_index_html() elif req[\"method\"] == \"POST\" and req[\"path\"] == \"/\": return self.handle_post(req) else: return self.http_response(404, \"Not Found\", \"\u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u0430\") def serve_index_html(self): grades_html = self.generate_grades_table() try: with open('index.html', 'r', encoding='utf-8') as f: content = f.read() # \u0412\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u043c \u0442\u0430\u0431\u043b\u0438\u0446\u0443 \u0441 \u043e\u0446\u0435\u043d\u043a\u0430\u043c\u0438 \u0432 HTML content = content.replace(\"{{ grades }}\", grades_html) return self.http_response(200, \"OK\", content) except FileNotFoundError: return self.http_response(404, \"Not Found\", \"\u0424\u0430\u0439\u043b index.html \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\") def generate_grades_table(self): grades_html = \"<table border='1'><tr><th>\u0414\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0430</th><th>\u041e\u0446\u0435\u043d\u043a\u0438</th></tr>\" for subject, grades in self.df.items(): grades_html += f\"<tr><td>{subject}</td><td>{', '.join(grades)}</td></tr>\" grades_html += \"</table>\" return grades_html def handle_post(self, req): try: body = req[\"body\"] params = self.parse_post_params(body) discipline = params.get(\"discipline\") grade = params.get(\"grade\") if discipline and grade: self.df[urllib.parse.unquote(discipline)].append(str(grade)) print(f\"\u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u043e: {discipline} - {grade}\") # \u0412\u044b\u0432\u043e\u0434 \u0432 \u0442\u0435\u0440\u043c\u0438\u043d\u0430\u043b return self.http_response(200, \"OK\", self.serve_index_html()) else: return self.http_response(400, \"Bad Request\", \"\u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0443\u043a\u0430\u0437\u0430\u0442\u044c \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0443 \u0438 \u043e\u0446\u0435\u043d\u043a\u0443\") except Exception as e: return self.http_response(400, \"Bad Request\", f\"\u041e\u0448\u0438\u0431\u043a\u0430: {str(e)}\") def parse_post_params(self, body): params = {} for pair in body.split(\"&\"): key, value = pair.split(\"=\") params[key] = urllib.parse.unquote(value) return params def send_response(self, connection, response): connection.sendall(response.encode('utf-8')) def send_error(self, connection, error): response = self.http_response(500, \"Internal Server Error\", str(error)) self.send_response(connection, response) def http_response(self, status_code, reason, content=\"\"): response_line = f\"HTTP/1.1 {status_code} {reason}\\r\\n\" headers = \"Content-Type: text/html; charset=utf-8\\r\\n\" headers += f\"Content-Length: {len(content.encode('utf-8'))}\\r\\n\" headers += \"\\r\\n\" return response_line + headers + content def clear_data(self): self.df.clear() print(\"\u0414\u0430\u043d\u043d\u044b\u0435 \u043e\u0447\u0438\u0449\u0435\u043d\u044b.\") if __name__ == '__main__': host = 'localhost' port = 8080 server = MyHTTPServer(host, port) try: server.serve_forever() except KeyboardInterrupt: print(\"\u0421\u0435\u0440\u0432\u0435\u0440 \u043e\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\") server.clear_data() \u041b\u0438\u0441\u0442\u0438\u043d\u0433 html \u0444\u0430\u0439\u043b\u0430 index.html: <!DOCTYPE html> <html lang=\"ru\"> <head> <meta charset=\"UTF-8\"> <title>\u0416\u0443\u0440\u043d\u0430\u043b \u043e\u0446\u0435\u043d\u043e\u043a</title> </head> <body> <h1>\u0416\u0443\u0440\u043d\u0430\u043b \u043e\u0446\u0435\u043d\u043e\u043a</h1> <form method=\"POST\" action=\"/\"> <input type=\"text\" name=\"discipline\" placeholder=\"\u0414\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0430\" required> <input type=\"text\" name=\"grade\" placeholder=\"\u041e\u0446\u0435\u043d\u043a\u0430\" required> <button type=\"submit\">\u041e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u044c</button> </form> <div id=\"gradesTable\"> {{ grades }} </div> </body> </html>","title":"ex-5"},{"location":"lab-1/ex-5/#5","text":"\u041d\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u043f\u0440\u043e\u0441\u0442\u043e\u0439 \u0432\u0435\u0431-\u0441\u0435\u0440\u0432\u0435\u0440 \u0434\u043b\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 GET \u0438 POST HTTP-\u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 socket \u0432 Python. \u0421\u0435\u0440\u0432\u0435\u0440 \u0434\u043e\u043b\u0436\u0435\u043d: \u041f\u0440\u0438\u043d\u044f\u0442\u044c \u0438 \u0437\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0435 \u0438 \u043e\u0446\u0435\u043d\u043a\u0435 \u043f\u043e \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0435. \u041e\u0442\u0434\u0430\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e\u0431\u043e \u0432\u0441\u0435\u0445 \u043e\u0446\u0435\u043d\u043a\u0430\u0445 \u043f\u043e \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0430\u043c \u0432 \u0432\u0438\u0434\u0435 HTML-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b.","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 5:"},{"location":"lab-1/ex-5/#_1","text":"\u042f\u0437\u044b\u043a - Python \u0411\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 - socket, threading \u041f\u0440\u043e\u0442\u043e\u043a\u043e\u043b - TCP","title":"\u0421\u0442\u044d\u043a \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438:"},{"location":"lab-1/ex-5/#_2","text":"\u0421\u0435\u0440\u0432\u0435\u0440: python server.py","title":"\u0417\u0430\u043f\u0443\u0441\u043a \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c:"},{"location":"lab-1/ex-5/#_3","text":"\u0421\u0435\u0440\u0432\u0435\u0440: import socket from collections import defaultdict import urllib.parse class MyHTTPServer: df = defaultdict(list) def __init__(self, host: str, port: int): self.host = host self.port = port def serve_forever(self): serv_sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM, proto=0) print(\"\u0421\u0435\u0440\u0432\u0435\u0440 \u0437\u0430\u043f\u0443\u0449\u0435\u043d\") try: serv_sock.bind((self.host, self.port)) serv_sock.listen() while True: conn, _ = serv_sock.accept() try: self.serve_client(conn) except Exception as e: print('Client serving failed', e) finally: serv_sock.close() def serve_client(self, connection): try: req = self.parse_request(connection) resp = self.handle_request(req) self.send_response(connection, resp) except ConnectionResetError: connection = None except Exception as e: self.send_error(connection, e) finally: if connection: connection.close() def parse_request(self, connection): reader = connection.makefile('r') request_line = reader.readline().strip() method, url, version = request_line.split() headers = self.parse_headers(reader) body = None if method == 'POST': content_length = int(headers.get('Content-Length', 0)) body = reader.read(content_length) return { \"method\": method, \"path\": url, \"headers\": headers, \"body\": body } def parse_headers(self, reader): headers = {} while True: line = reader.readline().strip() if not line: break key, value = line.split(\":\", 1) headers[key.strip()] = value.strip() return headers def handle_request(self, req): if req[\"method\"] == \"GET\" and req[\"path\"] == \"/\": return self.serve_index_html() elif req[\"method\"] == \"POST\" and req[\"path\"] == \"/\": return self.handle_post(req) else: return self.http_response(404, \"Not Found\", \"\u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u0430\") def serve_index_html(self): grades_html = self.generate_grades_table() try: with open('index.html', 'r', encoding='utf-8') as f: content = f.read() # \u0412\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u043c \u0442\u0430\u0431\u043b\u0438\u0446\u0443 \u0441 \u043e\u0446\u0435\u043d\u043a\u0430\u043c\u0438 \u0432 HTML content = content.replace(\"{{ grades }}\", grades_html) return self.http_response(200, \"OK\", content) except FileNotFoundError: return self.http_response(404, \"Not Found\", \"\u0424\u0430\u0439\u043b index.html \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\") def generate_grades_table(self): grades_html = \"<table border='1'><tr><th>\u0414\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0430</th><th>\u041e\u0446\u0435\u043d\u043a\u0438</th></tr>\" for subject, grades in self.df.items(): grades_html += f\"<tr><td>{subject}</td><td>{', '.join(grades)}</td></tr>\" grades_html += \"</table>\" return grades_html def handle_post(self, req): try: body = req[\"body\"] params = self.parse_post_params(body) discipline = params.get(\"discipline\") grade = params.get(\"grade\") if discipline and grade: self.df[urllib.parse.unquote(discipline)].append(str(grade)) print(f\"\u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u043e: {discipline} - {grade}\") # \u0412\u044b\u0432\u043e\u0434 \u0432 \u0442\u0435\u0440\u043c\u0438\u043d\u0430\u043b return self.http_response(200, \"OK\", self.serve_index_html()) else: return self.http_response(400, \"Bad Request\", \"\u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0443\u043a\u0430\u0437\u0430\u0442\u044c \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0443 \u0438 \u043e\u0446\u0435\u043d\u043a\u0443\") except Exception as e: return self.http_response(400, \"Bad Request\", f\"\u041e\u0448\u0438\u0431\u043a\u0430: {str(e)}\") def parse_post_params(self, body): params = {} for pair in body.split(\"&\"): key, value = pair.split(\"=\") params[key] = urllib.parse.unquote(value) return params def send_response(self, connection, response): connection.sendall(response.encode('utf-8')) def send_error(self, connection, error): response = self.http_response(500, \"Internal Server Error\", str(error)) self.send_response(connection, response) def http_response(self, status_code, reason, content=\"\"): response_line = f\"HTTP/1.1 {status_code} {reason}\\r\\n\" headers = \"Content-Type: text/html; charset=utf-8\\r\\n\" headers += f\"Content-Length: {len(content.encode('utf-8'))}\\r\\n\" headers += \"\\r\\n\" return response_line + headers + content def clear_data(self): self.df.clear() print(\"\u0414\u0430\u043d\u043d\u044b\u0435 \u043e\u0447\u0438\u0449\u0435\u043d\u044b.\") if __name__ == '__main__': host = 'localhost' port = 8080 server = MyHTTPServer(host, port) try: server.serve_forever() except KeyboardInterrupt: print(\"\u0421\u0435\u0440\u0432\u0435\u0440 \u043e\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\") server.clear_data() \u041b\u0438\u0441\u0442\u0438\u043d\u0433 html \u0444\u0430\u0439\u043b\u0430 index.html: <!DOCTYPE html> <html lang=\"ru\"> <head> <meta charset=\"UTF-8\"> <title>\u0416\u0443\u0440\u043d\u0430\u043b \u043e\u0446\u0435\u043d\u043e\u043a</title> </head> <body> <h1>\u0416\u0443\u0440\u043d\u0430\u043b \u043e\u0446\u0435\u043d\u043e\u043a</h1> <form method=\"POST\" action=\"/\"> <input type=\"text\" name=\"discipline\" placeholder=\"\u0414\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0430\" required> <input type=\"text\" name=\"grade\" placeholder=\"\u041e\u0446\u0435\u043d\u043a\u0430\" required> <button type=\"submit\">\u041e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u044c</button> </form> <div id=\"gradesTable\"> {{ grades }} </div> </body> </html>","title":"\u041b\u0438\u0441\u0442\u0438\u043d\u0433 \u043a\u043e\u0434\u0430:"},{"location":"lab-2/","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Welcome to MkDocs"},{"location":"lab-2/#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"lab-2/#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"lab-2/#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"lab-2/custom/","text":"\u041a\u0430\u0441\u0442\u043e\u043c\u0438\u0437\u0430\u0446\u0438\u044f, \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 navbar \u0438 \u043f\u0430\u0433\u0438\u043d\u0430\u0446\u0438\u0438 \u0412 \u0440\u0430\u043c\u043a\u0430\u0445 \u0434\u0430\u043d\u043d\u043e\u0433\u043e \u044d\u0442\u0430\u043f\u0430 \u0440\u0430\u0431\u043e\u0442\u044b \u0431\u044b\u043b\u0438 \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u044b \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u043a\u043b\u044e\u0447\u0435\u0432\u044b\u0435 \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u044b \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0430: \u042f \u0441\u043e\u0437\u0434\u0430\u043b\u0430 \u043e\u0431\u0449\u0438\u0439 \u0448\u0430\u0431\u043b\u043e\u043d\u0430 design.html \u0414\u043b\u044f \u0443\u043d\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438 \u0441\u0442\u0438\u043b\u0435\u0439 \u0438 \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u044b \u0441\u0442\u0440\u0430\u043d\u0438\u0446. design.html <!DOCTYPE html> <html lang=\"ru\"> <head> <meta charset=\"UTF-8\"> <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"> <title>{% block title %}\u0413\u043b\u0430\u0432\u043d\u0430\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430{% endblock %}</title> <link href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\" rel=\"stylesheet\"> {% load static %} <link href=\"{% static 'style.css' %}\" rel=\"stylesheet\"> </head> <body> <nav class=\"navbar navbar-expand-lg navbar-light\" style=\"background-color: #e6e7e8;\"> <div class=\"container d-flex align-items-center\"> <a class=\"navbar-brand d-flex align-items-center\" href=\"{% url 'main' %}\"> <img src=\"{% static 'logo.png' %}\" alt=\"\u041b\u043e\u0433\u043e\u0442\u0438\u043f\" class=\"logo\"> \u041d\u0430\u0443\u0447\u043d\u044b\u0435 \u043a\u043e\u043d\u0444\u0435\u0440\u0435\u043d\u0446\u0438\u0438 </a> <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\"> <span class=\"navbar-toggler-icon\"></span> </button> <div class=\"collapse navbar-collapse justify-content-end\" id=\"navbarNav\"> <ul class=\"navbar-nav align-items-center\" style=\"font-size: 1em;\"> {% if user.is_authenticated %} <li class=\"nav-item mr-3\"> <span class=\"navbar-text\">\u041f\u0440\u0438\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u043c, {{ user.username }}!</span> </li> {% endif %} <li class=\"nav-item mr-3\"> <a class=\"nav-link\" href=\"{% url 'main' %}\">\u0413\u043b\u0430\u0432\u043d\u0430\u044f</a> </li> <li class=\"nav-item mr-3\"> <a class=\"nav-link\" href=\"{% url 'conference_list' %}\">\u041a\u043e\u043d\u0444\u0435\u0440\u0435\u043d\u0446\u0438\u0438</a> </li> <li class=\"nav-item mr-3\"> <a class=\"nav-link\" href=\"{% url 'all_participants_list' %}\">\u0423\u0447\u0430\u0441\u0442\u043d\u0438\u043a\u0438</a> </li> {% if user.is_authenticated %} {% if user.is_staff %} <li class=\"nav-item mr-3\"> <a class=\"nav-link\" href=\"{% url 'user_dashboard' %}\">\u041c\u043e\u0438 \u043a\u043e\u043d\u0444\u0435\u0440\u0435\u043d\u0446\u0438\u0438</a> </li> <li class=\"nav-item mr-3\"> <a class=\"nav-link\" href=\"/admin/\">\u0420\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043a\u043e\u043d\u0444\u0435\u0440\u0435\u043d\u0446\u0438\u0438</a> </li> {% else %} <li class=\"nav-item mr-3\"> <a class=\"nav-link\" href=\"{% url 'user_dashboard' %}\">\u041c\u043e\u0438 \u043a\u043e\u043d\u0444\u0435\u0440\u0435\u043d\u0446\u0438\u0438</a> </li> {% endif %} <li class=\"nav-item mr-3\"> <form method=\"post\" action=\"{% url 'logout' %}\" class=\"m-0 p-0\"> {% csrf_token %} <button type=\"submit\" class=\"btn btn-link nav-link\" style=\"font-size: 1em;\">\u0412\u044b\u0439\u0442\u0438</button> </form> </li> {% else %} <li class=\"nav-item mr-3\"> <a class=\"nav-link\" href=\"{% url 'register' %}\">\u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f</a> </li> <li class=\"nav-item\"> <a class=\"nav-link\" href=\"{% url 'login' %}\">\u0412\u043e\u0439\u0442\u0438</a> </li> {% endif %} </ul> </div> </div> </nav> <div class=\"container my-4\"> {% block content %}{% endblock %} </div> <footer class=\"footer\"> <div class=\"container text-center\"> <span>&copy; 2024 \u041d\u0430\u0443\u0447\u043d\u044b\u0435 \u043a\u043e\u043d\u0444\u0435\u0440\u0435\u043d\u0446\u0438\u0438. \u0412\u0441\u0435 \u043f\u0440\u0430\u0432\u0430 \u0437\u0430\u0449\u0438\u0449\u0435\u043d\u044b.</span> </div> </footer> </body> </html> \u0421 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c Bootstrap 4.5.2 \u044f \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043b\u0430 \u043c\u0435\u043d\u044e \u043d\u0430\u0432\u0438\u0433\u0430\u0446\u0438\u0438. \u0422\u0430\u043a\u0436\u0435 \u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0435 \u0441\u043f\u0438\u0441\u043a\u0430 \u043a\u043e\u043d\u0444\u0435\u0440\u0435\u043d\u0446\u0438\u0439, \u044f \u0434\u043e\u0431\u0430\u0432\u0438\u043b\u0430 \u043f\u0430\u0433\u0438\u043d\u0430\u0446\u0438\u044e \u0438 \u043f\u043e\u0438\u0441\u043a. conference_list.html: <{% extends \"design.html\" %} {% block title %}\u0421\u043f\u0438\u0441\u043e\u043a \u043a\u043e\u043d\u0444\u0435\u0440\u0435\u043d\u0446\u0438\u0439{% endblock %} {% block content %} <div class=\"container my-4\"> <h1 class=\"text-center mb-4\">\u0421\u043f\u0438\u0441\u043e\u043a \u043a\u043e\u043d\u0444\u0435\u0440\u0435\u043d\u0446\u0438\u0439</h1> {% if messages %} <div class=\"alert alert-success\"> {% for message in messages %} {{ message }} {% endfor %} </div> {% endif %} <form method=\"get\" action=\"{% url 'conference_list' %}\" class=\"form-inline justify-content-center mb-3\"> <input type=\"text\" name=\"q\" class=\"form-control mr-2\" placeholder=\"\u041f\u043e\u0438\u0441\u043a \u043a\u043e\u043d\u0444\u0435\u0440\u0435\u043d\u0446\u0438\u0439\" value=\"{{ request.GET.q }}\"> <button type=\"submit\" class=\"btn btn-outline-primary search\">\u041f\u043e\u0438\u0441\u043a</button> </form> <div class=\"row justify-content-center\"> {% for conference in conferences %} <div class=\"col-md-6 mb-4\"> <div class=\"card conference-card\"> <div class=\"card-body\"> <h5 class=\"card-title\">{{ conference.title }}</h5> <p class=\"card-text\"><strong>\u0422\u0435\u043c\u044b:</strong> {{ conference.themes }}</p> <p class=\"card-text\"><strong>\u041c\u0435\u0441\u0442\u043e \u043f\u0440\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u044f:</strong> {{ conference.location }}</p> <p class=\"card-text\"><strong>\u041f\u0435\u0440\u0438\u043e\u0434:</strong> {{ conference.start_date }} - {{ conference.end_date }}</p> <p class=\"card-text\">{{ 307080conference.description|truncatewords:20 }}</p> <a href=\"{% url 'conference_detail' conference.pk %}\" class=\"btn btn-info\">\u041f\u043e\u0434\u0440\u043e\u0431\u043d\u0435\u0435</a> </div> </div> </div> {% empty %} <p>\u041a\u043e\u043d\u0444\u0435\u0440\u0435\u043d\u0446\u0438\u0438 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u044b.</p> {% endfor %} </div> <div class=\"custom-pagination d-flex justify-content-center mt-4\"> <nav aria-label=\"Page navigation\"> <ul class=\"pagination d-flex\"> {% if page_obj.has_previous %} <li class=\"page-item mx-2\"> <a class=\"page-link custom-page-link\" href=\"?page=1{% if query %}&q={{ query }}{% endif %}\"> \u041f\u0435\u0440\u0432\u0430\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 </a> </li> <li class=\"page-item mx-2\"> <a class=\"page-link custom-page-link\" href=\"?page={{ page_obj.previous_page_number }}{% if query %}&q={{ query }}{% endif %}\"> \u041f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0430\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 </a> </li> {% endif %} {% if page_obj.has_next %} <li class=\"page-item mx-2\"> <a class=\"page-link custom-page-link\" href=\"?page={{ page_obj.next_page_number }}{% if query %}&q={{ query }}{% endif %}\"> \u0421\u043b\u0435\u0434\u0443\u044e\u0449\u0430\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 </a> </li> <li class=\"page-item mx-2\"> <a class=\"page-link custom-page-link\" href=\"?page={{ paginator.num_pages }}{% if query %}&q={{ query }}{% endif %}\"> \u041f\u043e\u0441\u043b\u0435\u0434\u043d\u044f\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 </a> </li> {% endif %} </ul> </nav> </div> </div> {% endblock %} \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u043d\u044b\u0435 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b: \u0422\u0430\u043a\u0436\u0435, \u0435\u0441\u043b\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0430\u0434\u043c\u0438\u043d\u043e\u043c, \u0442\u043e \u0435\u0433\u043e \u043c\u0435\u043d\u044e \u0432\u044b\u0433\u043b\u044f\u0434\u0438\u0442 \u0442\u0430\u043a: \u0417\u0434\u0435\u0441\u044c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u043c\u043e\u0436\u0435\u0442 \u043f\u0435\u0440\u0435\u0439\u0442\u0438 \u0432 \u043f\u0430\u043d\u0435\u043b\u044c django-administration, \u0438, \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0435\u043d\u043d\u043e \u0432\u043d\u043e\u0441\u0438\u0442\u044c \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b\u0435 \u043f\u0440\u0430\u0432\u043a\u0438 \u0438\u043b\u0438 \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0430\u0442\u044c (\u0440\u0435\u043a\u043e\u043c\u043c\u0435\u043d\u0434\u043e\u0432\u0430\u0442\u044c) \u0430\u0432\u0442\u043e\u0440\u0430.","title":"\u041a\u0430\u0441\u0442\u043e\u043c\u0438\u0437\u0430\u0446\u0438\u044f, \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 navbar \u0438 \u043f\u0430\u0433\u0438\u043d\u0430\u0446\u0438\u0438"},{"location":"lab-2/custom/#navbar","text":"\u0412 \u0440\u0430\u043c\u043a\u0430\u0445 \u0434\u0430\u043d\u043d\u043e\u0433\u043e \u044d\u0442\u0430\u043f\u0430 \u0440\u0430\u0431\u043e\u0442\u044b \u0431\u044b\u043b\u0438 \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u044b \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u043a\u043b\u044e\u0447\u0435\u0432\u044b\u0435 \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u044b \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0430: \u042f \u0441\u043e\u0437\u0434\u0430\u043b\u0430 \u043e\u0431\u0449\u0438\u0439 \u0448\u0430\u0431\u043b\u043e\u043d\u0430 design.html \u0414\u043b\u044f \u0443\u043d\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438 \u0441\u0442\u0438\u043b\u0435\u0439 \u0438 \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u044b \u0441\u0442\u0440\u0430\u043d\u0438\u0446. design.html <!DOCTYPE html> <html lang=\"ru\"> <head> <meta charset=\"UTF-8\"> <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"> <title>{% block title %}\u0413\u043b\u0430\u0432\u043d\u0430\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430{% endblock %}</title> <link href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\" rel=\"stylesheet\"> {% load static %} <link href=\"{% static 'style.css' %}\" rel=\"stylesheet\"> </head> <body> <nav class=\"navbar navbar-expand-lg navbar-light\" style=\"background-color: #e6e7e8;\"> <div class=\"container d-flex align-items-center\"> <a class=\"navbar-brand d-flex align-items-center\" href=\"{% url 'main' %}\"> <img src=\"{% static 'logo.png' %}\" alt=\"\u041b\u043e\u0433\u043e\u0442\u0438\u043f\" class=\"logo\"> \u041d\u0430\u0443\u0447\u043d\u044b\u0435 \u043a\u043e\u043d\u0444\u0435\u0440\u0435\u043d\u0446\u0438\u0438 </a> <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\"> <span class=\"navbar-toggler-icon\"></span> </button> <div class=\"collapse navbar-collapse justify-content-end\" id=\"navbarNav\"> <ul class=\"navbar-nav align-items-center\" style=\"font-size: 1em;\"> {% if user.is_authenticated %} <li class=\"nav-item mr-3\"> <span class=\"navbar-text\">\u041f\u0440\u0438\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u043c, {{ user.username }}!</span> </li> {% endif %} <li class=\"nav-item mr-3\"> <a class=\"nav-link\" href=\"{% url 'main' %}\">\u0413\u043b\u0430\u0432\u043d\u0430\u044f</a> </li> <li class=\"nav-item mr-3\"> <a class=\"nav-link\" href=\"{% url 'conference_list' %}\">\u041a\u043e\u043d\u0444\u0435\u0440\u0435\u043d\u0446\u0438\u0438</a> </li> <li class=\"nav-item mr-3\"> <a class=\"nav-link\" href=\"{% url 'all_participants_list' %}\">\u0423\u0447\u0430\u0441\u0442\u043d\u0438\u043a\u0438</a> </li> {% if user.is_authenticated %} {% if user.is_staff %} <li class=\"nav-item mr-3\"> <a class=\"nav-link\" href=\"{% url 'user_dashboard' %}\">\u041c\u043e\u0438 \u043a\u043e\u043d\u0444\u0435\u0440\u0435\u043d\u0446\u0438\u0438</a> </li> <li class=\"nav-item mr-3\"> <a class=\"nav-link\" href=\"/admin/\">\u0420\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043a\u043e\u043d\u0444\u0435\u0440\u0435\u043d\u0446\u0438\u0438</a> </li> {% else %} <li class=\"nav-item mr-3\"> <a class=\"nav-link\" href=\"{% url 'user_dashboard' %}\">\u041c\u043e\u0438 \u043a\u043e\u043d\u0444\u0435\u0440\u0435\u043d\u0446\u0438\u0438</a> </li> {% endif %} <li class=\"nav-item mr-3\"> <form method=\"post\" action=\"{% url 'logout' %}\" class=\"m-0 p-0\"> {% csrf_token %} <button type=\"submit\" class=\"btn btn-link nav-link\" style=\"font-size: 1em;\">\u0412\u044b\u0439\u0442\u0438</button> </form> </li> {% else %} <li class=\"nav-item mr-3\"> <a class=\"nav-link\" href=\"{% url 'register' %}\">\u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f</a> </li> <li class=\"nav-item\"> <a class=\"nav-link\" href=\"{% url 'login' %}\">\u0412\u043e\u0439\u0442\u0438</a> </li> {% endif %} </ul> </div> </div> </nav> <div class=\"container my-4\"> {% block content %}{% endblock %} </div> <footer class=\"footer\"> <div class=\"container text-center\"> <span>&copy; 2024 \u041d\u0430\u0443\u0447\u043d\u044b\u0435 \u043a\u043e\u043d\u0444\u0435\u0440\u0435\u043d\u0446\u0438\u0438. \u0412\u0441\u0435 \u043f\u0440\u0430\u0432\u0430 \u0437\u0430\u0449\u0438\u0449\u0435\u043d\u044b.</span> </div> </footer> </body> </html> \u0421 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c Bootstrap 4.5.2 \u044f \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043b\u0430 \u043c\u0435\u043d\u044e \u043d\u0430\u0432\u0438\u0433\u0430\u0446\u0438\u0438. \u0422\u0430\u043a\u0436\u0435 \u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0435 \u0441\u043f\u0438\u0441\u043a\u0430 \u043a\u043e\u043d\u0444\u0435\u0440\u0435\u043d\u0446\u0438\u0439, \u044f \u0434\u043e\u0431\u0430\u0432\u0438\u043b\u0430 \u043f\u0430\u0433\u0438\u043d\u0430\u0446\u0438\u044e \u0438 \u043f\u043e\u0438\u0441\u043a. conference_list.html: <{% extends \"design.html\" %} {% block title %}\u0421\u043f\u0438\u0441\u043e\u043a \u043a\u043e\u043d\u0444\u0435\u0440\u0435\u043d\u0446\u0438\u0439{% endblock %} {% block content %} <div class=\"container my-4\"> <h1 class=\"text-center mb-4\">\u0421\u043f\u0438\u0441\u043e\u043a \u043a\u043e\u043d\u0444\u0435\u0440\u0435\u043d\u0446\u0438\u0439</h1> {% if messages %} <div class=\"alert alert-success\"> {% for message in messages %} {{ message }} {% endfor %} </div> {% endif %} <form method=\"get\" action=\"{% url 'conference_list' %}\" class=\"form-inline justify-content-center mb-3\"> <input type=\"text\" name=\"q\" class=\"form-control mr-2\" placeholder=\"\u041f\u043e\u0438\u0441\u043a \u043a\u043e\u043d\u0444\u0435\u0440\u0435\u043d\u0446\u0438\u0439\" value=\"{{ request.GET.q }}\"> <button type=\"submit\" class=\"btn btn-outline-primary search\">\u041f\u043e\u0438\u0441\u043a</button> </form> <div class=\"row justify-content-center\"> {% for conference in conferences %} <div class=\"col-md-6 mb-4\"> <div class=\"card conference-card\"> <div class=\"card-body\"> <h5 class=\"card-title\">{{ conference.title }}</h5> <p class=\"card-text\"><strong>\u0422\u0435\u043c\u044b:</strong> {{ conference.themes }}</p> <p class=\"card-text\"><strong>\u041c\u0435\u0441\u0442\u043e \u043f\u0440\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u044f:</strong> {{ conference.location }}</p> <p class=\"card-text\"><strong>\u041f\u0435\u0440\u0438\u043e\u0434:</strong> {{ conference.start_date }} - {{ conference.end_date }}</p> <p class=\"card-text\">{{ 307080conference.description|truncatewords:20 }}</p> <a href=\"{% url 'conference_detail' conference.pk %}\" class=\"btn btn-info\">\u041f\u043e\u0434\u0440\u043e\u0431\u043d\u0435\u0435</a> </div> </div> </div> {% empty %} <p>\u041a\u043e\u043d\u0444\u0435\u0440\u0435\u043d\u0446\u0438\u0438 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u044b.</p> {% endfor %} </div> <div class=\"custom-pagination d-flex justify-content-center mt-4\"> <nav aria-label=\"Page navigation\"> <ul class=\"pagination d-flex\"> {% if page_obj.has_previous %} <li class=\"page-item mx-2\"> <a class=\"page-link custom-page-link\" href=\"?page=1{% if query %}&q={{ query }}{% endif %}\"> \u041f\u0435\u0440\u0432\u0430\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 </a> </li> <li class=\"page-item mx-2\"> <a class=\"page-link custom-page-link\" href=\"?page={{ page_obj.previous_page_number }}{% if query %}&q={{ query }}{% endif %}\"> \u041f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0430\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 </a> </li> {% endif %} {% if page_obj.has_next %} <li class=\"page-item mx-2\"> <a class=\"page-link custom-page-link\" href=\"?page={{ page_obj.next_page_number }}{% if query %}&q={{ query }}{% endif %}\"> \u0421\u043b\u0435\u0434\u0443\u044e\u0449\u0430\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 </a> </li> <li class=\"page-item mx-2\"> <a class=\"page-link custom-page-link\" href=\"?page={{ paginator.num_pages }}{% if query %}&q={{ query }}{% endif %}\"> \u041f\u043e\u0441\u043b\u0435\u0434\u043d\u044f\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 </a> </li> {% endif %} </ul> </nav> </div> </div> {% endblock %}","title":"\u041a\u0430\u0441\u0442\u043e\u043c\u0438\u0437\u0430\u0446\u0438\u044f, \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 navbar \u0438 \u043f\u0430\u0433\u0438\u043d\u0430\u0446\u0438\u0438"},{"location":"lab-2/custom/#_1","text":"\u0422\u0430\u043a\u0436\u0435, \u0435\u0441\u043b\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0430\u0434\u043c\u0438\u043d\u043e\u043c, \u0442\u043e \u0435\u0433\u043e \u043c\u0435\u043d\u044e \u0432\u044b\u0433\u043b\u044f\u0434\u0438\u0442 \u0442\u0430\u043a: \u0417\u0434\u0435\u0441\u044c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u043c\u043e\u0436\u0435\u0442 \u043f\u0435\u0440\u0435\u0439\u0442\u0438 \u0432 \u043f\u0430\u043d\u0435\u043b\u044c django-administration, \u0438, \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0435\u043d\u043d\u043e \u0432\u043d\u043e\u0441\u0438\u0442\u044c \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b\u0435 \u043f\u0440\u0430\u0432\u043a\u0438 \u0438\u043b\u0438 \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0430\u0442\u044c (\u0440\u0435\u043a\u043e\u043c\u043c\u0435\u043d\u0434\u043e\u0432\u0430\u0442\u044c) \u0430\u0432\u0442\u043e\u0440\u0430.","title":"\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u043d\u044b\u0435 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b:"},{"location":"lab-2/models/","text":"\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0438 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u043c\u043e\u0434\u0435\u043b\u0435\u0439: \u041d\u0430 \u0434\u0430\u043d\u043d\u043e\u043c \u044d\u0442\u0430\u043f\u0435 \u0441\u043e\u0437\u0434\u0430\u044e \u0438 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u0443\u044e \u043c\u043e\u0434\u0435\u043b\u0438, \u0430 \u0442\u0430\u043a\u0436\u0435 \u0441\u043e\u0437\u0434\u0430\u044e superuser \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f. Models.py: from django.db import models from django.contrib.auth.models import AbstractUser class User(AbstractUser): birth_date = models.DateField(null=True, blank=True) age = models.CharField(max_length=3) groups = models.ManyToManyField('auth.Group', blank=True) user_permissions = models.ManyToManyField('auth.Permission', blank=True) class Conference(models.Model): title = models.CharField(max_length=300) themes = models.TextField(help_text=\"\u0421\u043f\u0438\u0441\u043e\u043a \u0442\u0435\u043c\u0430\u0442\u0438\u043a \u0447\u0435\u0440\u0435\u0437 \u0437\u0430\u043f\u044f\u0442\u0443\u044e\") location = models.CharField(max_length=255) start_date = models.DateField() end_date = models.DateField() description = models.TextField() location_description = models.TextField() class Review(models.Model): conference = models.ForeignKey(Conference, on_delete=models.CASCADE) user = models.ForeignKey(User, on_delete=models.CASCADE) comment = models.TextField() rating = models.IntegerField(choices=[(i, i) for i in range(1, 11)]) date_added = models.DateTimeField(auto_now_add=True) class Participant(models.Model): conference = models.ForeignKey(Conference, on_delete=models.CASCADE) user = models.ForeignKey(User, on_delete=models.CASCADE) is_author = models.BooleanField(default=False) class Results(models.Model): participant = models.ForeignKey(Participant, on_delete=models.CASCADE) accepted = models.BooleanField(default=False) Admin.py: from django.contrib import admin from .models import User, Conference, Review, Participant, Results admin.site.register(User) admin.site.register(Conference) admin.site.register(Review) admin.site.register(Participant) admin.site.register(Results) \u0414\u0430\u043b\u0435\u0435 \u044f \u0441\u043e\u0437\u0434\u0430\u044e \u043c\u0438\u0433\u0440\u0430\u0446\u0438\u0438 \u043a\u043e\u043c\u0430\u043d\u0434\u0430\u043c\u0438: python manage.py makemigrations python manage.py migrate \u0421\u043e\u0437\u0434\u0430\u044e \u0441\u0443\u043f\u0435\u0440\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f admin: python manage.py createsuperuser","title":"\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043c\u043e\u0434\u0435\u043b\u0435\u0439"},{"location":"lab-2/models/#_1","text":"\u041d\u0430 \u0434\u0430\u043d\u043d\u043e\u043c \u044d\u0442\u0430\u043f\u0435 \u0441\u043e\u0437\u0434\u0430\u044e \u0438 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u0443\u044e \u043c\u043e\u0434\u0435\u043b\u0438, \u0430 \u0442\u0430\u043a\u0436\u0435 \u0441\u043e\u0437\u0434\u0430\u044e superuser \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f. Models.py: from django.db import models from django.contrib.auth.models import AbstractUser class User(AbstractUser): birth_date = models.DateField(null=True, blank=True) age = models.CharField(max_length=3) groups = models.ManyToManyField('auth.Group', blank=True) user_permissions = models.ManyToManyField('auth.Permission', blank=True) class Conference(models.Model): title = models.CharField(max_length=300) themes = models.TextField(help_text=\"\u0421\u043f\u0438\u0441\u043e\u043a \u0442\u0435\u043c\u0430\u0442\u0438\u043a \u0447\u0435\u0440\u0435\u0437 \u0437\u0430\u043f\u044f\u0442\u0443\u044e\") location = models.CharField(max_length=255) start_date = models.DateField() end_date = models.DateField() description = models.TextField() location_description = models.TextField() class Review(models.Model): conference = models.ForeignKey(Conference, on_delete=models.CASCADE) user = models.ForeignKey(User, on_delete=models.CASCADE) comment = models.TextField() rating = models.IntegerField(choices=[(i, i) for i in range(1, 11)]) date_added = models.DateTimeField(auto_now_add=True) class Participant(models.Model): conference = models.ForeignKey(Conference, on_delete=models.CASCADE) user = models.ForeignKey(User, on_delete=models.CASCADE) is_author = models.BooleanField(default=False) class Results(models.Model): participant = models.ForeignKey(Participant, on_delete=models.CASCADE) accepted = models.BooleanField(default=False) Admin.py: from django.contrib import admin from .models import User, Conference, Review, Participant, Results admin.site.register(User) admin.site.register(Conference) admin.site.register(Review) admin.site.register(Participant) admin.site.register(Results) \u0414\u0430\u043b\u0435\u0435 \u044f \u0441\u043e\u0437\u0434\u0430\u044e \u043c\u0438\u0433\u0440\u0430\u0446\u0438\u0438 \u043a\u043e\u043c\u0430\u043d\u0434\u0430\u043c\u0438: python manage.py makemigrations python manage.py migrate \u0421\u043e\u0437\u0434\u0430\u044e \u0441\u0443\u043f\u0435\u0440\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f admin: python manage.py createsuperuser","title":"\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0438 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u043c\u043e\u0434\u0435\u043b\u0435\u0439:"},{"location":"lab-2/realisation/","text":"\u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f: \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0446\u0438\u044f \u0441\u0430\u0439\u0442\u0430, \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0438 \u0441 \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u043e\u043c \u0437\u0430\u0434\u0430\u043d\u0438\u044f \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u044b. \u0412\u0430\u0440\u0438\u0430\u043d\u0442 \u21165 \u0421\u043f\u0438\u0441\u043e\u043a \u043d\u0430\u0443\u0447\u043d\u044b\u0445 \u043a\u043e\u043d\u0444\u0435\u0440\u0435\u043d\u0446\u0438\u0439 \u0418\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441 \u043e\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u0442 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f \u043a\u043e\u043d\u0444\u0435\u0440\u0435\u043d\u0446\u0438\u0439, \u0441\u043f\u0438\u0441\u043e\u043a \u0442\u0435\u043c\u0430\u0442\u0438\u043a, \u043c\u0435\u0441\u0442\u043e \u043f\u0440\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u044f, \u043f\u0435\u0440\u0438\u043e\u0434 \u043f\u0440\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u044f, \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043a\u043e\u043d\u0444\u0435\u0440\u0435\u043d\u0446\u0438\u0439, \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043c\u0435\u0441\u0442\u043e \u043f\u0440\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u044f, \u0443\u0441\u043b\u043e\u0432\u0438\u044f \u0443\u0447\u0430\u0441\u0442\u0438\u044f. \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b: - \u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u043d\u043e\u0432\u044b\u0445 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439. - \u041f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u043a\u043e\u043d\u0444\u0435\u0440\u0435\u043d\u0446\u0438\u0439 \u0438 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044e \u0430\u0432\u0442\u043e\u0440\u043e\u0432 \u0434\u043b\u044f \u0432\u044b\u0441\u0442\u0443\u043f\u043b\u0435\u043d\u0438\u0439. \u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0434\u043e\u043b\u0436\u0435\u043d \u0438\u043c\u0435\u0442\u044c \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0438 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f \u0441\u0432\u043e\u0438\u0445 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0439. - \u041d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043e\u0442\u0437\u044b\u0432\u043e\u0432 \u043a \u043a\u043e\u043d\u0444\u0435\u0440\u0435\u043d\u0446\u0438\u044f\u043c. \u041f\u0440\u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0438 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0435\u0432, \u0434\u043e\u043b\u0436\u043d\u044b \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0442\u044c\u0441\u044f \u0434\u0430\u0442\u044b \u043a\u043e\u043d\u0444\u0435\u0440\u0435\u043d\u0446\u0438\u0438, \u0442\u0435\u043a\u0441\u0442 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u044f, \u0440\u0435\u0439\u0442\u0438\u043d\u0433 (1-10), \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0442\u043e\u0440\u0435. - \u0410\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440 \u0434\u043e\u043b\u0436\u0435\u043d \u0438\u043c\u0435\u0442\u044c \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0443\u043a\u0430\u0437\u0430\u043d\u0438\u044f \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u043e\u0432 \u0432\u044b\u0441\u0442\u0443\u043f\u043b\u0435\u043d\u0438\u044f (\u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u043e\u0432\u0430\u043d \u043a \u043f\u0443\u0431\u043b\u0438\u043a\u0430\u0446\u0438\u0438 \u0438\u043b\u0438 \u043d\u0435\u0442) \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Django- admin. - \u0412 \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u043e\u0439 \u0447\u0430\u0441\u0442\u0438 \u0434\u043e\u043b\u0436\u043d\u0430 \u0444\u043e\u0440\u043c\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0442\u0430\u0431\u043b\u0438\u0446\u0430, \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u044e\u0449\u0430\u044f \u0432\u0441\u0435\u0445 \u0443\u0447\u0430\u0441\u0442\u043d\u0438\u043a\u043e\u0432 \u043f\u043e \u043a\u043e\u043d\u0444\u0435\u0440\u0435\u043d\u0446\u0438\u044f\u043c. \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u043b\u0435\u0440\u043e\u0432: User = get_user_model() class UserRegistrationView(CreateView): form_class = NewUserForm template_name = 'registration.html' success_url = reverse_lazy('login') class LoginView(View): form_class = AuthentificationCustomForm template_name = 'login.html' success_url = reverse_lazy('login') class MainView(TemplateView): template_name = 'main.html' class ConferenceListView(ListView): model = Conference template_name = 'conference_list.html' context_object_name = 'conferences' paginate_by = 4 def get_queryset(self): query = self.request.GET.get('q') queryset = Conference.objects.all() if query: queryset = queryset.filter(Q(title__icontains=query) | Q(themes__icontains=query)) return queryset def get_context_data(self, **kwargs): context = super().get_context_data(**kwargs) query_params = self.request.GET.copy() query_params.pop('page', None) context['query'] = query_params.urlencode() return context class ConferenceDetailView(DetailView): model = Conference template_name = 'conference_detail.html' context_object_name = 'conference' def dispatch(self, request, *args, **kwargs): if not request.user.is_authenticated: messages.info(request, \"\u0417\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u0443\u0439\u0442\u0435\u0441\u044c \u0434\u043b\u044f \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440\u0430 \u0434\u0435\u0442\u0430\u043b\u0435\u0439 \u043a\u043e\u043d\u0444\u0435\u0440\u0435\u043d\u0446\u0438\u0438!\") return redirect(reverse('conference_list')) return super().dispatch(request, *args, **kwargs) def get_context_data(self, **kwargs): context = super().get_context_data(**kwargs) conference = self.get_object() context['reviews'] = conference.review_set.select_related('user').all() context['review_form'] = ReviewForm() context['is_author'] = self.request.user.is_staff return context def post(self, request): conference = self.get_object() review_form = ReviewForm(request.POST) if review_form.is_valid(): review = review_form.save(commit=False) review.user = request.user review.conference = conference review.date = conference.start_date review.save() messages.success(request, \"\u0412\u0430\u0448 \u043e\u0442\u0437\u044b\u0432 \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d!\") return redirect('conference_detail', pk=conference.pk) context = self.get_context_data() context['review_form'] = review_form return self.render_to_response(context) class ParticipantRegistrationView(View): def post(self, request, pk): conference = get_object_or_404(Conference, pk=pk) if Participant.objects.filter(user=request.user, conference=conference).exists(): messages.error(request, \"\u0412\u044b \u0443\u0436\u0435 \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u044b \u043d\u0430 \u0434\u0430\u043d\u043d\u0443\u044e \u043a\u043e\u043d\u0444\u0435\u0440\u0435\u043d\u0446\u0438\u044e \u043a\u0430\u043a \u0443\u0447\u0430\u0441\u0442\u043d\u0438\u043a.\") else: Participant.objects.create(user=request.user, conference=conference, is_author=False) request.session['is_author'] = False messages.success(request, \"\u0412\u044b \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u044b \u043a\u0430\u043a \u0443\u0447\u0430\u0441\u0442\u043d\u0438\u043a!\") return redirect('conference_list') class AuthorRegistrationView(View): def post(self, request, pk): conference = get_object_or_404(Conference, pk=pk) if Participant.objects.filter(user=request.user, conference=conference).exists(): messages.error(request, \"\u0412\u044b \u0443\u0436\u0435 \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u044b \u043d\u0430 \u0434\u0430\u043d\u043d\u0443\u044e \u043a\u043e\u043d\u0444\u0435\u0440\u0435\u043d\u0446\u0438\u044e \u043a\u0430\u043a \u0430\u0432\u0442\u043e\u0440.\") else: Participant.objects.create(user=request.user, conference=conference, is_author=True) request.session['is_author'] = True messages.success(request, \"\u0412\u044b \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u044b \u043a\u0430\u043a \u0430\u0432\u0442\u043e\u0440!\") return redirect('conference_list') class AllParticipantsListView(ListView): model = Conference template_name = 'all_participants_list.html' context_object_name = 'conferences' def get_context_data(self, **kwargs): context = super().get_context_data(**kwargs) participants = Participant.objects.select_related('user', 'conference').all() participant_data = [ { 'conference': participant.conference.title, 'date': participant.conference.start_date, 'first_name': participant.user.first_name, 'last_name': participant.user.last_name } for participant in participants ] context['participants'] = participant_data return context class UserDashboardView(LoginRequiredMixin, ListView): model = Participant template_name = 'user_cabinet.html' context_object_name = 'user_participants' def get_queryset(self): return Participant.objects.filter(user=self.request.user).select_related('conference') def post(self, request): participant_id = request.POST.get(\"participant_id\") participant = Participant.objects.filter(id=participant_id, user=request.user).first() if participant: participant.delete() messages.success(request, \"\u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0443\u0434\u0430\u043b\u0435\u043d\u0430.\") else: messages.error(request, \"\u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u0430 \u0438\u043b\u0438 \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u043f\u0440\u0430\u0432 \u0434\u043b\u044f \u0435\u0451 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f.\") return redirect('user_dashboard') \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0441\u0441\u044b\u043b\u043e\u043a: urlpatterns = [ path('/', MainView.as_view(), name='main'), path('register/', UserRegistrationView.as_view(), name='register'), path('login/', auth_views.LoginView.as_view(template_name='login.html'), name='login'), path('logout/', auth_views.LogoutView.as_view(next_page='/'), name='logout'), path('conferences/', ConferenceListView.as_view(), name='conference_list'), path('conferences/<int:pk>/', ConferenceDetailView.as_view(), name='conference_detail'), path('conference/<int:pk>/participant/register/', ParticipantRegistrationView.as_view(), name='participant_registration'), path('conference/<int:pk>/author/register/', AuthorRegistrationView.as_view(), name='author_registration'), path('participants/', AllParticipantsListView.as_view(), name='all_participants_list'), path('dashboard/', UserDashboardView.as_view(), name='user_dashboard'), ] \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0444\u043e\u0440\u043c: class ReviewForm(forms.ModelForm): class Meta: model = Review fields = ['comment', 'rating'] labels = { 'comment': '\u041a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0439', 'rating': '\u041e\u0446\u0435\u043d\u043a\u0430', } class ParticipantForm(forms.ModelForm): class Meta: model = Participant fields = [] def __init__(self, *args, **kwargs): super().__init__(*args, **kwargs) self.fields['user'] = forms.ModelChoiceField(queryset=User.objects.all(), required=True) class NewUserForm(UserCreationForm): class Meta: model = User fields = ['username', 'password1', 'password2', 'first_name', 'last_name', 'birth_date', 'age', 'email'] labels = { 'username': '\u041d\u0438\u043a\u043d\u0435\u0439\u043c', 'password1': '\u041f\u0430\u0440\u043e\u043b\u044c', 'password2': '\u041f\u043e\u0432\u0442\u043e\u0440\u0438\u0442\u0435 \u043f\u0430\u0440\u043e\u043b\u044c', 'first_name': '\u0418\u043c\u044f', 'last_name': '\u0424\u0430\u043c\u0438\u043b\u0438\u044f', 'birth_date': '\u0414\u0430\u0442\u0430 \u0440\u043e\u0436\u0434\u0435\u043d\u0438\u044f', 'age': '\u041f\u043e\u043b\u043d\u044b\u0445 \u043b\u0435\u0442', 'email': 'Email' } class AuthentificationCustomForm(AuthenticationForm): class Meta: model = User fields = ['username', 'password1'] class ResultsForm(forms.ModelForm): class Meta: model = Results fields = ['accepted']","title":"\u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f"},{"location":"lab-2/realisation/#_1","text":"\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0446\u0438\u044f \u0441\u0430\u0439\u0442\u0430, \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0438 \u0441 \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u043e\u043c \u0437\u0430\u0434\u0430\u043d\u0438\u044f \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u044b.","title":"\u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f:"},{"location":"lab-2/realisation/#no5","text":"\u0421\u043f\u0438\u0441\u043e\u043a \u043d\u0430\u0443\u0447\u043d\u044b\u0445 \u043a\u043e\u043d\u0444\u0435\u0440\u0435\u043d\u0446\u0438\u0439 \u0418\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441 \u043e\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u0442 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f \u043a\u043e\u043d\u0444\u0435\u0440\u0435\u043d\u0446\u0438\u0439, \u0441\u043f\u0438\u0441\u043e\u043a \u0442\u0435\u043c\u0430\u0442\u0438\u043a, \u043c\u0435\u0441\u0442\u043e \u043f\u0440\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u044f, \u043f\u0435\u0440\u0438\u043e\u0434 \u043f\u0440\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u044f, \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043a\u043e\u043d\u0444\u0435\u0440\u0435\u043d\u0446\u0438\u0439, \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043c\u0435\u0441\u0442\u043e \u043f\u0440\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u044f, \u0443\u0441\u043b\u043e\u0432\u0438\u044f \u0443\u0447\u0430\u0441\u0442\u0438\u044f. \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b: - \u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u043d\u043e\u0432\u044b\u0445 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439. - \u041f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u043a\u043e\u043d\u0444\u0435\u0440\u0435\u043d\u0446\u0438\u0439 \u0438 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044e \u0430\u0432\u0442\u043e\u0440\u043e\u0432 \u0434\u043b\u044f \u0432\u044b\u0441\u0442\u0443\u043f\u043b\u0435\u043d\u0438\u0439. \u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0434\u043e\u043b\u0436\u0435\u043d \u0438\u043c\u0435\u0442\u044c \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0438 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f \u0441\u0432\u043e\u0438\u0445 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0439. - \u041d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043e\u0442\u0437\u044b\u0432\u043e\u0432 \u043a \u043a\u043e\u043d\u0444\u0435\u0440\u0435\u043d\u0446\u0438\u044f\u043c. \u041f\u0440\u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0438 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0435\u0432, \u0434\u043e\u043b\u0436\u043d\u044b \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0442\u044c\u0441\u044f \u0434\u0430\u0442\u044b \u043a\u043e\u043d\u0444\u0435\u0440\u0435\u043d\u0446\u0438\u0438, \u0442\u0435\u043a\u0441\u0442 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u044f, \u0440\u0435\u0439\u0442\u0438\u043d\u0433 (1-10), \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0442\u043e\u0440\u0435. - \u0410\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440 \u0434\u043e\u043b\u0436\u0435\u043d \u0438\u043c\u0435\u0442\u044c \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0443\u043a\u0430\u0437\u0430\u043d\u0438\u044f \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u043e\u0432 \u0432\u044b\u0441\u0442\u0443\u043f\u043b\u0435\u043d\u0438\u044f (\u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u043e\u0432\u0430\u043d \u043a \u043f\u0443\u0431\u043b\u0438\u043a\u0430\u0446\u0438\u0438 \u0438\u043b\u0438 \u043d\u0435\u0442) \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Django- admin. - \u0412 \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u043e\u0439 \u0447\u0430\u0441\u0442\u0438 \u0434\u043e\u043b\u0436\u043d\u0430 \u0444\u043e\u0440\u043c\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0442\u0430\u0431\u043b\u0438\u0446\u0430, \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u044e\u0449\u0430\u044f \u0432\u0441\u0435\u0445 \u0443\u0447\u0430\u0441\u0442\u043d\u0438\u043a\u043e\u0432 \u043f\u043e \u043a\u043e\u043d\u0444\u0435\u0440\u0435\u043d\u0446\u0438\u044f\u043c.","title":"\u0412\u0430\u0440\u0438\u0430\u043d\u0442 \u21165"},{"location":"lab-2/realisation/#_2","text":"User = get_user_model() class UserRegistrationView(CreateView): form_class = NewUserForm template_name = 'registration.html' success_url = reverse_lazy('login') class LoginView(View): form_class = AuthentificationCustomForm template_name = 'login.html' success_url = reverse_lazy('login') class MainView(TemplateView): template_name = 'main.html' class ConferenceListView(ListView): model = Conference template_name = 'conference_list.html' context_object_name = 'conferences' paginate_by = 4 def get_queryset(self): query = self.request.GET.get('q') queryset = Conference.objects.all() if query: queryset = queryset.filter(Q(title__icontains=query) | Q(themes__icontains=query)) return queryset def get_context_data(self, **kwargs): context = super().get_context_data(**kwargs) query_params = self.request.GET.copy() query_params.pop('page', None) context['query'] = query_params.urlencode() return context class ConferenceDetailView(DetailView): model = Conference template_name = 'conference_detail.html' context_object_name = 'conference' def dispatch(self, request, *args, **kwargs): if not request.user.is_authenticated: messages.info(request, \"\u0417\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u0443\u0439\u0442\u0435\u0441\u044c \u0434\u043b\u044f \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440\u0430 \u0434\u0435\u0442\u0430\u043b\u0435\u0439 \u043a\u043e\u043d\u0444\u0435\u0440\u0435\u043d\u0446\u0438\u0438!\") return redirect(reverse('conference_list')) return super().dispatch(request, *args, **kwargs) def get_context_data(self, **kwargs): context = super().get_context_data(**kwargs) conference = self.get_object() context['reviews'] = conference.review_set.select_related('user').all() context['review_form'] = ReviewForm() context['is_author'] = self.request.user.is_staff return context def post(self, request): conference = self.get_object() review_form = ReviewForm(request.POST) if review_form.is_valid(): review = review_form.save(commit=False) review.user = request.user review.conference = conference review.date = conference.start_date review.save() messages.success(request, \"\u0412\u0430\u0448 \u043e\u0442\u0437\u044b\u0432 \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d!\") return redirect('conference_detail', pk=conference.pk) context = self.get_context_data() context['review_form'] = review_form return self.render_to_response(context) class ParticipantRegistrationView(View): def post(self, request, pk): conference = get_object_or_404(Conference, pk=pk) if Participant.objects.filter(user=request.user, conference=conference).exists(): messages.error(request, \"\u0412\u044b \u0443\u0436\u0435 \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u044b \u043d\u0430 \u0434\u0430\u043d\u043d\u0443\u044e \u043a\u043e\u043d\u0444\u0435\u0440\u0435\u043d\u0446\u0438\u044e \u043a\u0430\u043a \u0443\u0447\u0430\u0441\u0442\u043d\u0438\u043a.\") else: Participant.objects.create(user=request.user, conference=conference, is_author=False) request.session['is_author'] = False messages.success(request, \"\u0412\u044b \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u044b \u043a\u0430\u043a \u0443\u0447\u0430\u0441\u0442\u043d\u0438\u043a!\") return redirect('conference_list') class AuthorRegistrationView(View): def post(self, request, pk): conference = get_object_or_404(Conference, pk=pk) if Participant.objects.filter(user=request.user, conference=conference).exists(): messages.error(request, \"\u0412\u044b \u0443\u0436\u0435 \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u044b \u043d\u0430 \u0434\u0430\u043d\u043d\u0443\u044e \u043a\u043e\u043d\u0444\u0435\u0440\u0435\u043d\u0446\u0438\u044e \u043a\u0430\u043a \u0430\u0432\u0442\u043e\u0440.\") else: Participant.objects.create(user=request.user, conference=conference, is_author=True) request.session['is_author'] = True messages.success(request, \"\u0412\u044b \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u044b \u043a\u0430\u043a \u0430\u0432\u0442\u043e\u0440!\") return redirect('conference_list') class AllParticipantsListView(ListView): model = Conference template_name = 'all_participants_list.html' context_object_name = 'conferences' def get_context_data(self, **kwargs): context = super().get_context_data(**kwargs) participants = Participant.objects.select_related('user', 'conference').all() participant_data = [ { 'conference': participant.conference.title, 'date': participant.conference.start_date, 'first_name': participant.user.first_name, 'last_name': participant.user.last_name } for participant in participants ] context['participants'] = participant_data return context class UserDashboardView(LoginRequiredMixin, ListView): model = Participant template_name = 'user_cabinet.html' context_object_name = 'user_participants' def get_queryset(self): return Participant.objects.filter(user=self.request.user).select_related('conference') def post(self, request): participant_id = request.POST.get(\"participant_id\") participant = Participant.objects.filter(id=participant_id, user=request.user).first() if participant: participant.delete() messages.success(request, \"\u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0443\u0434\u0430\u043b\u0435\u043d\u0430.\") else: messages.error(request, \"\u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u0430 \u0438\u043b\u0438 \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u043f\u0440\u0430\u0432 \u0434\u043b\u044f \u0435\u0451 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f.\") return redirect('user_dashboard')","title":"\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u043b\u0435\u0440\u043e\u0432:"},{"location":"lab-2/realisation/#_3","text":"urlpatterns = [ path('/', MainView.as_view(), name='main'), path('register/', UserRegistrationView.as_view(), name='register'), path('login/', auth_views.LoginView.as_view(template_name='login.html'), name='login'), path('logout/', auth_views.LogoutView.as_view(next_page='/'), name='logout'), path('conferences/', ConferenceListView.as_view(), name='conference_list'), path('conferences/<int:pk>/', ConferenceDetailView.as_view(), name='conference_detail'), path('conference/<int:pk>/participant/register/', ParticipantRegistrationView.as_view(), name='participant_registration'), path('conference/<int:pk>/author/register/', AuthorRegistrationView.as_view(), name='author_registration'), path('participants/', AllParticipantsListView.as_view(), name='all_participants_list'), path('dashboard/', UserDashboardView.as_view(), name='user_dashboard'), ]","title":"\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0441\u0441\u044b\u043b\u043e\u043a:"},{"location":"lab-2/realisation/#_4","text":"class ReviewForm(forms.ModelForm): class Meta: model = Review fields = ['comment', 'rating'] labels = { 'comment': '\u041a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0439', 'rating': '\u041e\u0446\u0435\u043d\u043a\u0430', } class ParticipantForm(forms.ModelForm): class Meta: model = Participant fields = [] def __init__(self, *args, **kwargs): super().__init__(*args, **kwargs) self.fields['user'] = forms.ModelChoiceField(queryset=User.objects.all(), required=True) class NewUserForm(UserCreationForm): class Meta: model = User fields = ['username', 'password1', 'password2', 'first_name', 'last_name', 'birth_date', 'age', 'email'] labels = { 'username': '\u041d\u0438\u043a\u043d\u0435\u0439\u043c', 'password1': '\u041f\u0430\u0440\u043e\u043b\u044c', 'password2': '\u041f\u043e\u0432\u0442\u043e\u0440\u0438\u0442\u0435 \u043f\u0430\u0440\u043e\u043b\u044c', 'first_name': '\u0418\u043c\u044f', 'last_name': '\u0424\u0430\u043c\u0438\u043b\u0438\u044f', 'birth_date': '\u0414\u0430\u0442\u0430 \u0440\u043e\u0436\u0434\u0435\u043d\u0438\u044f', 'age': '\u041f\u043e\u043b\u043d\u044b\u0445 \u043b\u0435\u0442', 'email': 'Email' } class AuthentificationCustomForm(AuthenticationForm): class Meta: model = User fields = ['username', 'password1'] class ResultsForm(forms.ModelForm): class Meta: model = Results fields = ['accepted']","title":"\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0444\u043e\u0440\u043c:"},{"location":"lab-3/laboratory_work_3/","text":"\u0420\u0415\u0410\u041b\u0418\u0417\u0410\u0426\u0418\u042f \u0421\u0415\u0420\u0412\u0415\u0420\u041d\u041e\u0419 \u0427\u0410\u0421\u0422\u0418 \u041f\u0420\u0418\u041b\u041e\u0416\u0415\u041d\u0418\u042f \u0421\u0420\u0415\u0414\u0421\u0422\u0412\u0410\u041c\u0418 DJANGO \u0418 DJANGORESTFRAMEWORK \u0411\u0430\u0437\u0430 \u0434\u0430\u043d\u043d\u044b\u0445: \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u044c \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 DjangoORM: from django.core.validators import MaxValueValidator, MinValueValidator from django.db import models class Student(models.Model): GENDER_CHOICES = [ ('\u041c', '\u041c\u0443\u0436\u0441\u043a\u043e\u0439'), ('\u0416', '\u0416\u0435\u043d\u0441\u043a\u0438\u0439'), ] id_student = models.AutoField(primary_key=True) surname = models.CharField(max_length=20) name = models.CharField(max_length=20) gender = models.CharField(max_length=1, choices=GENDER_CHOICES) class_name = models.CharField(max_length=3) def __str__(self): return f\"{self.surname} {self.name} ({self.class_name})\" class Grade(models.Model): id_grade = models.AutoField(primary_key=True) student = models.ForeignKey(Student, on_delete=models.CASCADE) subject = models.CharField(max_length=30) grade = models.PositiveSmallIntegerField(validators=[MinValueValidator(1), MaxValueValidator(5)]) quarter = models.PositiveSmallIntegerField(validators=[MinValueValidator(1), MaxValueValidator(4)]) def __str__(self): return f\"{self.student} | {self.subject}: {self.grade} (Quarter {self.quarter})\" class StudentSchedule(models.Model): id_schedule = models.AutoField(primary_key=True) student = models.ForeignKey(Student, on_delete=models.CASCADE) lessons = models.ManyToManyField('Lesson') def __str__(self): lessons_list = ', '.join(lesson.subject for lesson in self.lessons.all()) return f\"Schedule for {self.student}: {lessons_list}\" class Teacher(models.Model): id_teacher = models.AutoField(primary_key=True) surname = models.CharField(max_length=20) name = models.CharField(max_length=20) room_assigned = models.ForeignKey( 'Room', null=True, on_delete=models.SET_NULL, related_name='assigned_teachers' ) lessons = models.ManyToManyField('Lesson', related_name='taught_by', blank=True) def __str__(self): room_info = f\"Room: {self.room_assigned}\" if self.room_assigned else \"No assigned room\" return f\"{self.surname} {self.name} ({room_info})\" class Room(models.Model): ROOM_STATUS_CHOICES = [ ('\u041e\u0431\u043e\u0440\u0443\u0434\u043e\u0432\u0430\u043d\u043d\u0430\u044f', '\u041e\u0431\u043e\u0440\u0443\u0434\u043e\u0432\u0430\u043d\u043d\u0430\u044f'), ('\u0411\u0430\u0437\u043e\u0432\u0430\u044f', '\u0411\u0430\u0437\u043e\u0432\u0430\u044f'), ] id_room = models.AutoField(primary_key=True) number = models.CharField(max_length=20) status = models.CharField(max_length=15, choices=ROOM_STATUS_CHOICES) teacher = models.ManyToManyField(Teacher, blank=True, related_name='rooms') def __str__(self): return f\"{self.number} ({self.get_status_display()})\" class Lesson(models.Model): DAY_CHOICES = [ ('\u041f\u043e\u043d\u0435\u0434\u0435\u043b\u044c\u043d\u0438\u043a', '\u041f\u043e\u043d\u0435\u0434\u0435\u043b\u044c\u043d\u0438\u043a'), ('\u0412\u0442\u043e\u0440\u043d\u0438\u043a', '\u0412\u0442\u043e\u0440\u043d\u0438\u043a'), ('\u0421\u0440\u0435\u0434\u0430', '\u0421\u0440\u0435\u0434\u0430'), ('\u0427\u0435\u0442\u0432\u0435\u0440\u0433', '\u0427\u0435\u0442\u0432\u0435\u0440\u0433'), ('\u041f\u044f\u0442\u043d\u0438\u0446\u0430', '\u041f\u044f\u0442\u043d\u0438\u0446\u0430'), ('\u0421\u0443\u0431\u0431\u043e\u0442\u0430', '\u0421\u0443\u0431\u0431\u043e\u0442\u0430'), ] NUM_LESSON = [ ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ] id_lesson = models.AutoField(primary_key=True) day = models.CharField(max_length=20, choices=DAY_CHOICES) lesson_number = models.CharField(max_length=2, choices=NUM_LESSON) subject = models.CharField(max_length=20) class_label = models.CharField(max_length=3) teacher = models.ForeignKey(Teacher, on_delete=models.CASCADE, related_name='teaches') room = models.ForeignKey(Room, on_delete=models.CASCADE, related_name='lessons') def __str__(self): return f\"{self.subject} ({self.class_label}) | {self.day} Lesson {self.lesson_number}\" \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043b\u043e\u0433\u0438\u043a\u0443 \u0440\u0430\u0431\u043e\u0442\u0443 API \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Django REST Framework: serializers.py: from rest_framework import serializers from .models import Student, Teacher, Grade, Lesson, Room, StudentSchedule class StudentSerializer(serializers.ModelSerializer): class Meta: model = Student fields = '__all__' class TeacherSerializer(serializers.ModelSerializer): lessons = serializers.PrimaryKeyRelatedField( queryset=Lesson.objects.all(), many=True, required=False, allow_null=True ) class Meta: model = Teacher fields = '__all__' class GradeSerializer(serializers.ModelSerializer): class Meta: model = Grade fields = '__all__' class LessonSerializer(serializers.ModelSerializer): class Meta: model = Lesson fields = '__all__' class RoomSerializer(serializers.ModelSerializer): teacher = serializers.PrimaryKeyRelatedField( queryset=Teacher.objects.all(), many=True, required=False, allow_null=True ) class Meta: model = Room fields = '__all__' class StudentScheduleSerializer(serializers.ModelSerializer): class Meta: model = StudentSchedule fields = '__all__' views.py: from django.db.models import Count from requests import Response from rest_framework.response import Response from rest_framework.generics import ListCreateAPIView, RetrieveUpdateDestroyAPIView from rest_framework.views import APIView from .serializers import * class StudentListCreateView(ListCreateAPIView): queryset = Student.objects.all() serializer_class = StudentSerializer class StudentDetailView(RetrieveUpdateDestroyAPIView): queryset = Student.objects.all() serializer_class = StudentSerializer class TeacherListCreateView(ListCreateAPIView): queryset = Teacher.objects.all() serializer_class = TeacherSerializer class TeacherDetailView(RetrieveUpdateDestroyAPIView): queryset = Teacher.objects.all() serializer_class = TeacherSerializer class GradeListCreateView(ListCreateAPIView): queryset = Grade.objects.all() serializer_class = GradeSerializer class LessonListCreateView(ListCreateAPIView): queryset = Lesson.objects.all() serializer_class = LessonSerializer class LessonDetailView(RetrieveUpdateDestroyAPIView): queryset = Lesson.objects.all() serializer_class = LessonSerializer class RoomListCreateView(ListCreateAPIView): queryset = Room.objects.all() serializer_class = RoomSerializer class RoomDetailView(RetrieveUpdateDestroyAPIView): queryset = Room.objects.all() serializer_class = RoomSerializer class StudentScheduleListCreateView(ListCreateAPIView): queryset = StudentSchedule.objects.all() serializer_class = StudentScheduleSerializer class StudentScheduleDetailView(RetrieveUpdateDestroyAPIView): queryset = StudentSchedule.objects.all() serializer_class = StudentScheduleSerializer class SubjectInRoomView(APIView): \"\u0421\u043f\u0438\u0441\u043e\u043a \u043f\u0440\u0435\u0434\u043c\u0435\u0442\u043e\u0432, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043f\u0440\u043e\u0432\u043e\u0434\u044f\u0442\u0441\u044f \u0432 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0439 \u043a\u043e\u043c\u043d\u0430\u0442\u0435 \u0432 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u0434\u0435\u043d\u044c \u043d\u0435\u0434\u0435\u043b\u0438.\" def get(self, request, room_number, day): lessons = Lesson.objects.filter(room__number=room_number, day=day) if lessons.exists(): data = [ { \"subject\": lesson.subject, \"class\": lesson.class_label, \"lesson_number\": lesson.lesson_number } for lesson in lessons ] return Response(data) else: return Response({\"error\": \"No lessons found for the specified room and day\"}, status=404) class TeachersPerSubjectView(APIView): \"\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0443\u0447\u0438\u0442\u0435\u043b\u0435\u0439, \u043f\u0440\u0435\u043f\u043e\u0434\u0430\u044e\u0449\u0438\u0445 \u043a\u0430\u0436\u0434\u044b\u0439 \u043f\u0440\u0435\u0434\u043c\u0435\u0442, \u0438\u043c\u0435\u043d\u0430 \u0438 \u0444\u0430\u043c\u0438\u043b\u0438\u0438.\" def get(self, request): subjects = Lesson.objects.values('subject').annotate(teacher_count=Count('teacher', distinct=True)) result = [] for subject in subjects: subject_name = subject['subject'] teachers = Lesson.objects.filter(subject=subject_name).values( 'teacher__name', 'teacher__surname' ).distinct() teacher_list = [ {\"name\": teacher['teacher__name'], \"surname\": teacher['teacher__surname']} for teacher in teachers ] result.append({ \"subject\": subject_name, \"teacher_count\": subject['teacher_count'], \"teachers\": teacher_list }) return Response(result) class GenderCountPerClassView(APIView): \"\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043c\u0430\u043b\u044c\u0447\u0438\u043a\u043e\u0432 \u0438 \u0434\u0435\u0432\u043e\u0447\u0435\u043a \u0432 \u043a\u0430\u0436\u0434\u043e\u043c \u043a\u043b\u0430\u0441\u0441\u0435.\" def get(self, request): gender_counts = ( Student.objects.values('class_name', 'gender') .annotate(count=Count('id_student')) ) result = {} for item in gender_counts: class_name = item['class_name'] if class_name not in result: result[class_name] = {\"boys\": 0, \"girls\": 0} if item['gender'] == '\u041c': result[class_name][\"boys\"] = item['count'] elif item['gender'] == '\u0416': result[class_name][\"girls\"] = item['count'] return Response(result) class RoomCountByStatusView(APIView): \"\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043a\u0430\u0431\u0438\u043d\u0435\u0442\u043e\u0432 \u0432 \u0448\u043a\u043e\u043b\u0435 \u043f\u043e \u043a\u043b\u0430\u0441\u0441\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438.\" def get(self, request): room_counts = ( Room.objects.values('status') .annotate(count=Count('id_room')) ) result = {item['status']: item['count'] for item in room_counts} return Response(result) class TeachersWithSameSubjectsView(APIView): \"\u0421\u043f\u0438\u0441\u043e\u043a \u0443\u0447\u0438\u0442\u0435\u043b\u0435\u0439, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043f\u0440\u0435\u043f\u043e\u0434\u0430\u044e\u0442 \u0442\u0435 \u0436\u0435 \u043f\u0440\u0435\u0434\u043c\u0435\u0442\u044b, \u0447\u0442\u043e \u0438 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u0443\u0447\u0438\u0442\u0435\u043b\u044c \u043f\u043e id.\" def get(self, request, teacher_id): teacher = Teacher.objects.get(id_teacher=teacher_id) subjects = teacher.lessons.values_list('subject', flat=True) teachers_with_same_subjects = Teacher.objects.filter(lessons__subject__in=subjects).exclude(id_teacher=teacher_id) teacher_list = [ {\"name\": t.surname + \" \" + t.name} for t in teachers_with_same_subjects ] return Response(teacher_list) class StudentScheduleView(APIView): \"\u0420\u0430\u0441\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0434\u043b\u044f \u0443\u0447\u0435\u043d\u0438\u043a\u0430 \u043f\u043e id.\" def get(self, request, student_id): try: student_schedule = StudentSchedule.objects.get(student_id=student_id) student = Student.objects.get(id_student=student_id) lessons = student_schedule.lessons.all() schedule_data = { \"student_name\": f\"{student.surname} {student.name}\", \"class_name\": student.class_name, \"lessons\": [{\"subject\": lesson.subject, \"day\": lesson.day, \"lesson_number\": lesson.lesson_number} for lesson in lessons] } return Response(schedule_data) except StudentSchedule.DoesNotExist: return Response({\"error\": \"Schedule not found for the given student\"}, status=404) except Student.DoesNotExist: return Response({\"error\": \"Student not found\"}, status=404) class GradeListView(APIView): \"\u041e\u0446\u0435\u043d\u043a\u0438 \u0434\u043b\u044f \u0443\u0447\u0435\u043d\u0438\u043a\u0430 \u043f\u043e id.\" def get(self, request, student_id): grades = Grade.objects.filter(student_id=student_id) student = Student.objects.get(id_student=student_id) if grades.exists(): grade_data = [ { \"student_name\": f\"{student.surname} {student.name}\", \"subject\": grade.subject, \"grade\": grade.grade, \"quarter\": grade.quarter } for grade in grades ] return Response(grade_data) else: return Response({\"error\": \"Grades not found for the given student\"}, status=404) \u041f\u043e\u0434\u043a\u043b\u044e\u0447\u0438\u0442\u044c \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044e / \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u044e \u043f\u043e \u0442\u043e\u043a\u0435\u043d\u0430\u043c / \u0432\u044b\u0432\u043e\u0434 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u0442\u0435\u043a\u0443\u0449\u0435\u043c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Djoser: REST_FRAMEWORK = { 'DEFAULT_AUTHENTICATION_CLASSES': ( 'rest_framework.authentication.TokenAuthentication', 'rest_framework.authentication.SessionAuthentication' ), 'DEFAULT_PERMISSION_CLASSES': ( 'rest_framework.permissions.IsAuthenticated', ), } DJOSER = { 'USER_CREATE_PASSWORD_RETYPE': True, 'LOGIN_FIELD': 'username', 'TOKEN_MODEL': 'rest_framework.authtoken.models.Token' } urls.py: path(\"auth/\", include(\"djoser.urls\")), path(\"auth/\", include(\"djoser.urls.authtoken\")), path(\"api-auth/\", include(\"rest_framework.urls\")), \u042d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u044b: \u0421\u043f\u0438\u0441\u043e\u043a \u043f\u0440\u0435\u0434\u043c\u0435\u0442\u043e\u0432, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043f\u0440\u043e\u0432\u043e\u0434\u044f\u0442\u0441\u044f \u0432 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0439 \u043a\u043e\u043c\u043d\u0430\u0442\u0435 \u0432 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u0434\u0435\u043d\u044c \u043d\u0435\u0434\u0435\u043b\u0438. \u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0443\u0447\u0438\u0442\u0435\u043b\u0435\u0439, \u043f\u0440\u0435\u043f\u043e\u0434\u0430\u044e\u0449\u0438\u0445 \u043a\u0430\u0436\u0434\u044b\u0439 \u043f\u0440\u0435\u0434\u043c\u0435\u0442, \u0438\u043c\u0435\u043d\u0430 \u0438 \u0444\u0430\u043c\u0438\u043b\u0438\u0438. \u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043c\u0430\u043b\u044c\u0447\u0438\u043a\u043e\u0432 \u0438 \u0434\u0435\u0432\u043e\u0447\u0435\u043a \u0432 \u043a\u0430\u0436\u0434\u043e\u043c \u043a\u043b\u0430\u0441\u0441\u0435. \u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043a\u0430\u0431\u0438\u043d\u0435\u0442\u043e\u0432 \u0432 \u0448\u043a\u043e\u043b\u0435 \u043f\u043e \u043a\u043b\u0430\u0441\u0441\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438. \u0421\u043f\u0438\u0441\u043e\u043a \u0443\u0447\u0438\u0442\u0435\u043b\u0435\u0439, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043f\u0440\u0435\u043f\u043e\u0434\u0430\u044e\u0442 \u0442\u0435 \u0436\u0435 \u043f\u0440\u0435\u0434\u043c\u0435\u0442\u044b, \u0447\u0442\u043e \u0438 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u0443\u0447\u0438\u0442\u0435\u043b\u044c \u043f\u043e id. \u0420\u0430\u0441\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0434\u043b\u044f \u0443\u0447\u0435\u043d\u0438\u043a\u0430 \u043f\u043e id. \u041e\u0446\u0435\u043d\u043a\u0438 \u0434\u043b\u044f \u0443\u0447\u0435\u043d\u0438\u043a\u0430 \u043f\u043e id.","title":"\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430"},{"location":"lab-3/laboratory_work_3/#django-djangorestframework","text":"","title":"\u0420\u0415\u0410\u041b\u0418\u0417\u0410\u0426\u0418\u042f \u0421\u0415\u0420\u0412\u0415\u0420\u041d\u041e\u0419 \u0427\u0410\u0421\u0422\u0418 \u041f\u0420\u0418\u041b\u041e\u0416\u0415\u041d\u0418\u042f \u0421\u0420\u0415\u0414\u0421\u0422\u0412\u0410\u041c\u0418 DJANGO \u0418 DJANGORESTFRAMEWORK"},{"location":"lab-3/laboratory_work_3/#_1","text":"","title":"\u0411\u0430\u0437\u0430 \u0434\u0430\u043d\u043d\u044b\u0445:"},{"location":"lab-3/laboratory_work_3/#djangoorm","text":"from django.core.validators import MaxValueValidator, MinValueValidator from django.db import models class Student(models.Model): GENDER_CHOICES = [ ('\u041c', '\u041c\u0443\u0436\u0441\u043a\u043e\u0439'), ('\u0416', '\u0416\u0435\u043d\u0441\u043a\u0438\u0439'), ] id_student = models.AutoField(primary_key=True) surname = models.CharField(max_length=20) name = models.CharField(max_length=20) gender = models.CharField(max_length=1, choices=GENDER_CHOICES) class_name = models.CharField(max_length=3) def __str__(self): return f\"{self.surname} {self.name} ({self.class_name})\" class Grade(models.Model): id_grade = models.AutoField(primary_key=True) student = models.ForeignKey(Student, on_delete=models.CASCADE) subject = models.CharField(max_length=30) grade = models.PositiveSmallIntegerField(validators=[MinValueValidator(1), MaxValueValidator(5)]) quarter = models.PositiveSmallIntegerField(validators=[MinValueValidator(1), MaxValueValidator(4)]) def __str__(self): return f\"{self.student} | {self.subject}: {self.grade} (Quarter {self.quarter})\" class StudentSchedule(models.Model): id_schedule = models.AutoField(primary_key=True) student = models.ForeignKey(Student, on_delete=models.CASCADE) lessons = models.ManyToManyField('Lesson') def __str__(self): lessons_list = ', '.join(lesson.subject for lesson in self.lessons.all()) return f\"Schedule for {self.student}: {lessons_list}\" class Teacher(models.Model): id_teacher = models.AutoField(primary_key=True) surname = models.CharField(max_length=20) name = models.CharField(max_length=20) room_assigned = models.ForeignKey( 'Room', null=True, on_delete=models.SET_NULL, related_name='assigned_teachers' ) lessons = models.ManyToManyField('Lesson', related_name='taught_by', blank=True) def __str__(self): room_info = f\"Room: {self.room_assigned}\" if self.room_assigned else \"No assigned room\" return f\"{self.surname} {self.name} ({room_info})\" class Room(models.Model): ROOM_STATUS_CHOICES = [ ('\u041e\u0431\u043e\u0440\u0443\u0434\u043e\u0432\u0430\u043d\u043d\u0430\u044f', '\u041e\u0431\u043e\u0440\u0443\u0434\u043e\u0432\u0430\u043d\u043d\u0430\u044f'), ('\u0411\u0430\u0437\u043e\u0432\u0430\u044f', '\u0411\u0430\u0437\u043e\u0432\u0430\u044f'), ] id_room = models.AutoField(primary_key=True) number = models.CharField(max_length=20) status = models.CharField(max_length=15, choices=ROOM_STATUS_CHOICES) teacher = models.ManyToManyField(Teacher, blank=True, related_name='rooms') def __str__(self): return f\"{self.number} ({self.get_status_display()})\" class Lesson(models.Model): DAY_CHOICES = [ ('\u041f\u043e\u043d\u0435\u0434\u0435\u043b\u044c\u043d\u0438\u043a', '\u041f\u043e\u043d\u0435\u0434\u0435\u043b\u044c\u043d\u0438\u043a'), ('\u0412\u0442\u043e\u0440\u043d\u0438\u043a', '\u0412\u0442\u043e\u0440\u043d\u0438\u043a'), ('\u0421\u0440\u0435\u0434\u0430', '\u0421\u0440\u0435\u0434\u0430'), ('\u0427\u0435\u0442\u0432\u0435\u0440\u0433', '\u0427\u0435\u0442\u0432\u0435\u0440\u0433'), ('\u041f\u044f\u0442\u043d\u0438\u0446\u0430', '\u041f\u044f\u0442\u043d\u0438\u0446\u0430'), ('\u0421\u0443\u0431\u0431\u043e\u0442\u0430', '\u0421\u0443\u0431\u0431\u043e\u0442\u0430'), ] NUM_LESSON = [ ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ] id_lesson = models.AutoField(primary_key=True) day = models.CharField(max_length=20, choices=DAY_CHOICES) lesson_number = models.CharField(max_length=2, choices=NUM_LESSON) subject = models.CharField(max_length=20) class_label = models.CharField(max_length=3) teacher = models.ForeignKey(Teacher, on_delete=models.CASCADE, related_name='teaches') room = models.ForeignKey(Room, on_delete=models.CASCADE, related_name='lessons') def __str__(self): return f\"{self.subject} ({self.class_label}) | {self.day} Lesson {self.lesson_number}\"","title":"\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u044c \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 DjangoORM:"},{"location":"lab-3/laboratory_work_3/#api-django-rest-framework","text":"serializers.py: from rest_framework import serializers from .models import Student, Teacher, Grade, Lesson, Room, StudentSchedule class StudentSerializer(serializers.ModelSerializer): class Meta: model = Student fields = '__all__' class TeacherSerializer(serializers.ModelSerializer): lessons = serializers.PrimaryKeyRelatedField( queryset=Lesson.objects.all(), many=True, required=False, allow_null=True ) class Meta: model = Teacher fields = '__all__' class GradeSerializer(serializers.ModelSerializer): class Meta: model = Grade fields = '__all__' class LessonSerializer(serializers.ModelSerializer): class Meta: model = Lesson fields = '__all__' class RoomSerializer(serializers.ModelSerializer): teacher = serializers.PrimaryKeyRelatedField( queryset=Teacher.objects.all(), many=True, required=False, allow_null=True ) class Meta: model = Room fields = '__all__' class StudentScheduleSerializer(serializers.ModelSerializer): class Meta: model = StudentSchedule fields = '__all__' views.py: from django.db.models import Count from requests import Response from rest_framework.response import Response from rest_framework.generics import ListCreateAPIView, RetrieveUpdateDestroyAPIView from rest_framework.views import APIView from .serializers import * class StudentListCreateView(ListCreateAPIView): queryset = Student.objects.all() serializer_class = StudentSerializer class StudentDetailView(RetrieveUpdateDestroyAPIView): queryset = Student.objects.all() serializer_class = StudentSerializer class TeacherListCreateView(ListCreateAPIView): queryset = Teacher.objects.all() serializer_class = TeacherSerializer class TeacherDetailView(RetrieveUpdateDestroyAPIView): queryset = Teacher.objects.all() serializer_class = TeacherSerializer class GradeListCreateView(ListCreateAPIView): queryset = Grade.objects.all() serializer_class = GradeSerializer class LessonListCreateView(ListCreateAPIView): queryset = Lesson.objects.all() serializer_class = LessonSerializer class LessonDetailView(RetrieveUpdateDestroyAPIView): queryset = Lesson.objects.all() serializer_class = LessonSerializer class RoomListCreateView(ListCreateAPIView): queryset = Room.objects.all() serializer_class = RoomSerializer class RoomDetailView(RetrieveUpdateDestroyAPIView): queryset = Room.objects.all() serializer_class = RoomSerializer class StudentScheduleListCreateView(ListCreateAPIView): queryset = StudentSchedule.objects.all() serializer_class = StudentScheduleSerializer class StudentScheduleDetailView(RetrieveUpdateDestroyAPIView): queryset = StudentSchedule.objects.all() serializer_class = StudentScheduleSerializer class SubjectInRoomView(APIView): \"\u0421\u043f\u0438\u0441\u043e\u043a \u043f\u0440\u0435\u0434\u043c\u0435\u0442\u043e\u0432, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043f\u0440\u043e\u0432\u043e\u0434\u044f\u0442\u0441\u044f \u0432 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0439 \u043a\u043e\u043c\u043d\u0430\u0442\u0435 \u0432 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u0434\u0435\u043d\u044c \u043d\u0435\u0434\u0435\u043b\u0438.\" def get(self, request, room_number, day): lessons = Lesson.objects.filter(room__number=room_number, day=day) if lessons.exists(): data = [ { \"subject\": lesson.subject, \"class\": lesson.class_label, \"lesson_number\": lesson.lesson_number } for lesson in lessons ] return Response(data) else: return Response({\"error\": \"No lessons found for the specified room and day\"}, status=404) class TeachersPerSubjectView(APIView): \"\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0443\u0447\u0438\u0442\u0435\u043b\u0435\u0439, \u043f\u0440\u0435\u043f\u043e\u0434\u0430\u044e\u0449\u0438\u0445 \u043a\u0430\u0436\u0434\u044b\u0439 \u043f\u0440\u0435\u0434\u043c\u0435\u0442, \u0438\u043c\u0435\u043d\u0430 \u0438 \u0444\u0430\u043c\u0438\u043b\u0438\u0438.\" def get(self, request): subjects = Lesson.objects.values('subject').annotate(teacher_count=Count('teacher', distinct=True)) result = [] for subject in subjects: subject_name = subject['subject'] teachers = Lesson.objects.filter(subject=subject_name).values( 'teacher__name', 'teacher__surname' ).distinct() teacher_list = [ {\"name\": teacher['teacher__name'], \"surname\": teacher['teacher__surname']} for teacher in teachers ] result.append({ \"subject\": subject_name, \"teacher_count\": subject['teacher_count'], \"teachers\": teacher_list }) return Response(result) class GenderCountPerClassView(APIView): \"\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043c\u0430\u043b\u044c\u0447\u0438\u043a\u043e\u0432 \u0438 \u0434\u0435\u0432\u043e\u0447\u0435\u043a \u0432 \u043a\u0430\u0436\u0434\u043e\u043c \u043a\u043b\u0430\u0441\u0441\u0435.\" def get(self, request): gender_counts = ( Student.objects.values('class_name', 'gender') .annotate(count=Count('id_student')) ) result = {} for item in gender_counts: class_name = item['class_name'] if class_name not in result: result[class_name] = {\"boys\": 0, \"girls\": 0} if item['gender'] == '\u041c': result[class_name][\"boys\"] = item['count'] elif item['gender'] == '\u0416': result[class_name][\"girls\"] = item['count'] return Response(result) class RoomCountByStatusView(APIView): \"\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043a\u0430\u0431\u0438\u043d\u0435\u0442\u043e\u0432 \u0432 \u0448\u043a\u043e\u043b\u0435 \u043f\u043e \u043a\u043b\u0430\u0441\u0441\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438.\" def get(self, request): room_counts = ( Room.objects.values('status') .annotate(count=Count('id_room')) ) result = {item['status']: item['count'] for item in room_counts} return Response(result) class TeachersWithSameSubjectsView(APIView): \"\u0421\u043f\u0438\u0441\u043e\u043a \u0443\u0447\u0438\u0442\u0435\u043b\u0435\u0439, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043f\u0440\u0435\u043f\u043e\u0434\u0430\u044e\u0442 \u0442\u0435 \u0436\u0435 \u043f\u0440\u0435\u0434\u043c\u0435\u0442\u044b, \u0447\u0442\u043e \u0438 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u0443\u0447\u0438\u0442\u0435\u043b\u044c \u043f\u043e id.\" def get(self, request, teacher_id): teacher = Teacher.objects.get(id_teacher=teacher_id) subjects = teacher.lessons.values_list('subject', flat=True) teachers_with_same_subjects = Teacher.objects.filter(lessons__subject__in=subjects).exclude(id_teacher=teacher_id) teacher_list = [ {\"name\": t.surname + \" \" + t.name} for t in teachers_with_same_subjects ] return Response(teacher_list) class StudentScheduleView(APIView): \"\u0420\u0430\u0441\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0434\u043b\u044f \u0443\u0447\u0435\u043d\u0438\u043a\u0430 \u043f\u043e id.\" def get(self, request, student_id): try: student_schedule = StudentSchedule.objects.get(student_id=student_id) student = Student.objects.get(id_student=student_id) lessons = student_schedule.lessons.all() schedule_data = { \"student_name\": f\"{student.surname} {student.name}\", \"class_name\": student.class_name, \"lessons\": [{\"subject\": lesson.subject, \"day\": lesson.day, \"lesson_number\": lesson.lesson_number} for lesson in lessons] } return Response(schedule_data) except StudentSchedule.DoesNotExist: return Response({\"error\": \"Schedule not found for the given student\"}, status=404) except Student.DoesNotExist: return Response({\"error\": \"Student not found\"}, status=404) class GradeListView(APIView): \"\u041e\u0446\u0435\u043d\u043a\u0438 \u0434\u043b\u044f \u0443\u0447\u0435\u043d\u0438\u043a\u0430 \u043f\u043e id.\" def get(self, request, student_id): grades = Grade.objects.filter(student_id=student_id) student = Student.objects.get(id_student=student_id) if grades.exists(): grade_data = [ { \"student_name\": f\"{student.surname} {student.name}\", \"subject\": grade.subject, \"grade\": grade.grade, \"quarter\": grade.quarter } for grade in grades ] return Response(grade_data) else: return Response({\"error\": \"Grades not found for the given student\"}, status=404)","title":"\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043b\u043e\u0433\u0438\u043a\u0443 \u0440\u0430\u0431\u043e\u0442\u0443 API \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Django REST Framework:"},{"location":"lab-3/laboratory_work_3/#djoser","text":"REST_FRAMEWORK = { 'DEFAULT_AUTHENTICATION_CLASSES': ( 'rest_framework.authentication.TokenAuthentication', 'rest_framework.authentication.SessionAuthentication' ), 'DEFAULT_PERMISSION_CLASSES': ( 'rest_framework.permissions.IsAuthenticated', ), } DJOSER = { 'USER_CREATE_PASSWORD_RETYPE': True, 'LOGIN_FIELD': 'username', 'TOKEN_MODEL': 'rest_framework.authtoken.models.Token' } urls.py: path(\"auth/\", include(\"djoser.urls\")), path(\"auth/\", include(\"djoser.urls.authtoken\")), path(\"api-auth/\", include(\"rest_framework.urls\")),","title":"\u041f\u043e\u0434\u043a\u043b\u044e\u0447\u0438\u0442\u044c \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044e / \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u044e \u043f\u043e \u0442\u043e\u043a\u0435\u043d\u0430\u043c / \u0432\u044b\u0432\u043e\u0434 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u0442\u0435\u043a\u0443\u0449\u0435\u043c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Djoser:"},{"location":"lab-3/laboratory_work_3/#_2","text":"\u0421\u043f\u0438\u0441\u043e\u043a \u043f\u0440\u0435\u0434\u043c\u0435\u0442\u043e\u0432, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043f\u0440\u043e\u0432\u043e\u0434\u044f\u0442\u0441\u044f \u0432 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0439 \u043a\u043e\u043c\u043d\u0430\u0442\u0435 \u0432 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u0434\u0435\u043d\u044c \u043d\u0435\u0434\u0435\u043b\u0438. \u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0443\u0447\u0438\u0442\u0435\u043b\u0435\u0439, \u043f\u0440\u0435\u043f\u043e\u0434\u0430\u044e\u0449\u0438\u0445 \u043a\u0430\u0436\u0434\u044b\u0439 \u043f\u0440\u0435\u0434\u043c\u0435\u0442, \u0438\u043c\u0435\u043d\u0430 \u0438 \u0444\u0430\u043c\u0438\u043b\u0438\u0438. \u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043c\u0430\u043b\u044c\u0447\u0438\u043a\u043e\u0432 \u0438 \u0434\u0435\u0432\u043e\u0447\u0435\u043a \u0432 \u043a\u0430\u0436\u0434\u043e\u043c \u043a\u043b\u0430\u0441\u0441\u0435. \u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043a\u0430\u0431\u0438\u043d\u0435\u0442\u043e\u0432 \u0432 \u0448\u043a\u043e\u043b\u0435 \u043f\u043e \u043a\u043b\u0430\u0441\u0441\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438. \u0421\u043f\u0438\u0441\u043e\u043a \u0443\u0447\u0438\u0442\u0435\u043b\u0435\u0439, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043f\u0440\u0435\u043f\u043e\u0434\u0430\u044e\u0442 \u0442\u0435 \u0436\u0435 \u043f\u0440\u0435\u0434\u043c\u0435\u0442\u044b, \u0447\u0442\u043e \u0438 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u0443\u0447\u0438\u0442\u0435\u043b\u044c \u043f\u043e id. \u0420\u0430\u0441\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0434\u043b\u044f \u0443\u0447\u0435\u043d\u0438\u043a\u0430 \u043f\u043e id. \u041e\u0446\u0435\u043d\u043a\u0438 \u0434\u043b\u044f \u0443\u0447\u0435\u043d\u0438\u043a\u0430 \u043f\u043e id.","title":"\u042d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u044b:"},{"location":"lab-3/practice_work/","text":"\u041f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 \u21163.1 \u041f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u0437\u0430\u0434\u0430\u043d\u0438\u0435 1 \u0412\u043e\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435\u0441\u044c \u043f\u0440\u043e\u0435\u043a\u0442\u043e\u043c \u0438\u0437 \u043f\u0440\u0430\u043a\u0442\u0438\u043a\u0438 2.1: \u041d\u0430\u043f\u0438\u0448\u0438\u0442\u0435 \u0437\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 6-7 \u043d\u043e\u0432\u044b\u0445 \u0430\u0432\u0442\u043e\u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432 \u0438 5-6 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0435\u0439, \u043a\u0430\u0436\u0434\u043e\u043c\u0443 \u0430\u0432\u0442\u043e\u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0443 \u043d\u0430\u0437\u043d\u0430\u0447\u044c\u0442\u0435 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u0435 \u0438 \u043e\u0442 1 \u0434\u043e 3 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0435\u0439. \u0417\u0430\u0434\u0430\u043d\u0438\u0435 \u043c\u043e\u0436\u0435\u0442\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u043b\u0438\u0431\u043e \u0432 \u0438\u043d\u0442\u0435\u0440\u0430\u043a\u0442\u0438\u0432\u043d\u043e\u043c \u0440\u0435\u0436\u0438\u043c\u0435 \u0438\u043d\u0442\u0435\u0440\u043f\u0440\u0435\u0442\u0430\u0442\u043e\u0440\u0430, \u043b\u0438\u0431\u043e \u0432 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u043e\u043c python-\u0444\u0430\u0439\u043b\u0435. \u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u043e\u043c \u0434\u043e\u043b\u0436\u043d\u044b \u0441\u0442\u0430\u0442\u044c \u0437\u0430\u043f\u0440\u043e\u0441\u044b \u0438 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u044b\u0445 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432. >>> from project_first_app.models import * >>> Owner.objects.all() <QuerySet []> >>> License.objects.all() <QuerySet []> >>> Car.objects.all() <QuerySet []> >>> Ownership.objects.all() <QuerySet []> \u041f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u0437\u0430\u0434\u0430\u043d\u0438\u0435 2 1) \u0412\u044b\u0432\u0435\u0434\u0435\u0442\u0435 \u0432\u0441\u0435 \u043c\u0430\u0448\u0438\u043d\u044b \u043c\u0430\u0440\u043a\u0438 \u201cToyota\u201d 2) \u0412\u0441\u0435 \u0432\u043e\u0434\u0438\u0442\u0435\u043b\u0438 \u043f\u043e \u0438\u043c\u0435\u043d\u0438 Bob 3) \u0412\u0437\u044f\u0432 \u043b\u044e\u0431\u043e\u0433\u043e \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u043e\u0433\u043e \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0430 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0435\u0433\u043e id, \u0438 \u043f\u043e \u044d\u0442\u043e\u043c\u0443 id \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u044f \u0432 \u0432\u0438\u0434\u0435 \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u043c\u043e\u0434\u0435\u043b\u0438 (\u043c\u043e\u0436\u043d\u043e \u0432 2 \u0437\u0430\u043f\u0440\u043e\u0441\u0430) 4) \u0412\u044b\u0432\u0435\u0441\u0442\u0438 \u0432\u0441\u0435\u0445 \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432 \u043a\u0440\u0430\u0441\u043d\u044b\u0445 \u043c\u0430\u0448\u0438\u043d (\u0438\u043b\u0438 \u043b\u044e\u0431\u043e\u0433\u043e \u0434\u0440\u0443\u0433\u043e\u0433\u043e \u0446\u0432\u0435\u0442\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0443 \u0432\u0430\u0441 \u043f\u0440\u0438\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442) 5) \u041d\u0430\u0439\u0442\u0438 \u0432\u0441\u0435\u0445 \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432, \u0447\u0435\u0439 \u0433\u043e\u0434 \u0432\u043b\u0430\u0434\u0435\u043d\u0438\u044f \u043c\u0430\u0448\u0438\u043d\u043e\u0439 \u043d\u0430\u0447\u0438\u043d\u0430\u0435\u0442\u0441\u044f \u0441 2010 (\u0438\u043b\u0438 \u043b\u044e\u0431\u043e\u0439 \u0434\u0440\u0443\u0433\u043e\u0439 \u0433\u043e\u0434, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u0440\u0438\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u0443 \u0432\u0430\u0441 \u0432 \u0431\u0430\u0437\u0435) \u041f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u0437\u0430\u0434\u0430\u043d\u0438\u0435 3 1) \u0412\u044b\u0432\u043e\u0434 \u0434\u0430\u0442\u044b \u0432\u044b\u0434\u0430\u0447\u0438 \u0441\u0430\u043c\u043e\u0433\u043e \u0441\u0442\u0430\u0440\u0448\u0435\u0433\u043e \u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0433\u043e \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u044f 2) \u0423\u043a\u0430\u0436\u0438\u0442\u0435 \u0441\u0430\u043c\u0443\u044e \u043f\u043e\u0437\u0434\u043d\u044e\u044e \u0434\u0430\u0442\u0443 \u0432\u043b\u0430\u0434\u0435\u043d\u0438\u044f \u043c\u0430\u0448\u0438\u043d\u043e\u0439, \u0438\u043c\u0435\u044e\u0449\u0443\u044e \u043a\u0430\u043a\u0443\u044e-\u0442\u043e \u0438\u0437 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0445 \u043c\u043e\u0434\u0435\u043b\u0435\u0439 \u0432 \u0432\u0430\u0448\u0435\u0439 \u0431\u0430\u0437\u0435 3) \u0412\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043c\u0430\u0448\u0438\u043d \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044f 4) \u041f\u043e\u0434\u0441\u0447\u0438\u0442\u0430\u0439\u0442\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043c\u0430\u0448\u0438\u043d \u043a\u0430\u0436\u0434\u043e\u0439 \u043c\u0430\u0440\u043a\u0438 5) \u041e\u0442\u0441\u043e\u0440\u0442\u0438\u0440\u0443\u0439\u0442\u0435 \u0432\u0441\u0435\u0445 \u0430\u0432\u0442\u043e\u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432 \u043f\u043e \u0434\u0430\u0442\u0435 \u0432\u044b\u0434\u0430\u0447\u0438 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u044f","title":"\u041f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430"},{"location":"lab-3/practice_work/#no31","text":"","title":"\u041f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 \u21163.1"},{"location":"lab-3/practice_work/#1","text":"\u0412\u043e\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435\u0441\u044c \u043f\u0440\u043e\u0435\u043a\u0442\u043e\u043c \u0438\u0437 \u043f\u0440\u0430\u043a\u0442\u0438\u043a\u0438 2.1: \u041d\u0430\u043f\u0438\u0448\u0438\u0442\u0435 \u0437\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 6-7 \u043d\u043e\u0432\u044b\u0445 \u0430\u0432\u0442\u043e\u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432 \u0438 5-6 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0435\u0439, \u043a\u0430\u0436\u0434\u043e\u043c\u0443 \u0430\u0432\u0442\u043e\u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0443 \u043d\u0430\u0437\u043d\u0430\u0447\u044c\u0442\u0435 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u0435 \u0438 \u043e\u0442 1 \u0434\u043e 3 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0435\u0439. \u0417\u0430\u0434\u0430\u043d\u0438\u0435 \u043c\u043e\u0436\u0435\u0442\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u043b\u0438\u0431\u043e \u0432 \u0438\u043d\u0442\u0435\u0440\u0430\u043a\u0442\u0438\u0432\u043d\u043e\u043c \u0440\u0435\u0436\u0438\u043c\u0435 \u0438\u043d\u0442\u0435\u0440\u043f\u0440\u0435\u0442\u0430\u0442\u043e\u0440\u0430, \u043b\u0438\u0431\u043e \u0432 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u043e\u043c python-\u0444\u0430\u0439\u043b\u0435. \u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u043e\u043c \u0434\u043e\u043b\u0436\u043d\u044b \u0441\u0442\u0430\u0442\u044c \u0437\u0430\u043f\u0440\u043e\u0441\u044b \u0438 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u044b\u0445 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432. >>> from project_first_app.models import * >>> Owner.objects.all() <QuerySet []> >>> License.objects.all() <QuerySet []> >>> Car.objects.all() <QuerySet []> >>> Ownership.objects.all() <QuerySet []>","title":"\u041f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u0437\u0430\u0434\u0430\u043d\u0438\u0435 1"},{"location":"lab-3/practice_work/#2","text":"1) \u0412\u044b\u0432\u0435\u0434\u0435\u0442\u0435 \u0432\u0441\u0435 \u043c\u0430\u0448\u0438\u043d\u044b \u043c\u0430\u0440\u043a\u0438 \u201cToyota\u201d 2) \u0412\u0441\u0435 \u0432\u043e\u0434\u0438\u0442\u0435\u043b\u0438 \u043f\u043e \u0438\u043c\u0435\u043d\u0438 Bob 3) \u0412\u0437\u044f\u0432 \u043b\u044e\u0431\u043e\u0433\u043e \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u043e\u0433\u043e \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0430 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0435\u0433\u043e id, \u0438 \u043f\u043e \u044d\u0442\u043e\u043c\u0443 id \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u044f \u0432 \u0432\u0438\u0434\u0435 \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u043c\u043e\u0434\u0435\u043b\u0438 (\u043c\u043e\u0436\u043d\u043e \u0432 2 \u0437\u0430\u043f\u0440\u043e\u0441\u0430) 4) \u0412\u044b\u0432\u0435\u0441\u0442\u0438 \u0432\u0441\u0435\u0445 \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432 \u043a\u0440\u0430\u0441\u043d\u044b\u0445 \u043c\u0430\u0448\u0438\u043d (\u0438\u043b\u0438 \u043b\u044e\u0431\u043e\u0433\u043e \u0434\u0440\u0443\u0433\u043e\u0433\u043e \u0446\u0432\u0435\u0442\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0443 \u0432\u0430\u0441 \u043f\u0440\u0438\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442) 5) \u041d\u0430\u0439\u0442\u0438 \u0432\u0441\u0435\u0445 \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432, \u0447\u0435\u0439 \u0433\u043e\u0434 \u0432\u043b\u0430\u0434\u0435\u043d\u0438\u044f \u043c\u0430\u0448\u0438\u043d\u043e\u0439 \u043d\u0430\u0447\u0438\u043d\u0430\u0435\u0442\u0441\u044f \u0441 2010 (\u0438\u043b\u0438 \u043b\u044e\u0431\u043e\u0439 \u0434\u0440\u0443\u0433\u043e\u0439 \u0433\u043e\u0434, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u0440\u0438\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u0443 \u0432\u0430\u0441 \u0432 \u0431\u0430\u0437\u0435)","title":"\u041f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u0437\u0430\u0434\u0430\u043d\u0438\u0435 2"},{"location":"lab-3/practice_work/#3","text":"1) \u0412\u044b\u0432\u043e\u0434 \u0434\u0430\u0442\u044b \u0432\u044b\u0434\u0430\u0447\u0438 \u0441\u0430\u043c\u043e\u0433\u043e \u0441\u0442\u0430\u0440\u0448\u0435\u0433\u043e \u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0433\u043e \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u044f 2) \u0423\u043a\u0430\u0436\u0438\u0442\u0435 \u0441\u0430\u043c\u0443\u044e \u043f\u043e\u0437\u0434\u043d\u044e\u044e \u0434\u0430\u0442\u0443 \u0432\u043b\u0430\u0434\u0435\u043d\u0438\u044f \u043c\u0430\u0448\u0438\u043d\u043e\u0439, \u0438\u043c\u0435\u044e\u0449\u0443\u044e \u043a\u0430\u043a\u0443\u044e-\u0442\u043e \u0438\u0437 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0445 \u043c\u043e\u0434\u0435\u043b\u0435\u0439 \u0432 \u0432\u0430\u0448\u0435\u0439 \u0431\u0430\u0437\u0435 3) \u0412\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043c\u0430\u0448\u0438\u043d \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044f 4) \u041f\u043e\u0434\u0441\u0447\u0438\u0442\u0430\u0439\u0442\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043c\u0430\u0448\u0438\u043d \u043a\u0430\u0436\u0434\u043e\u0439 \u043c\u0430\u0440\u043a\u0438 5) \u041e\u0442\u0441\u043e\u0440\u0442\u0438\u0440\u0443\u0439\u0442\u0435 \u0432\u0441\u0435\u0445 \u0430\u0432\u0442\u043e\u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432 \u043f\u043e \u0434\u0430\u0442\u0435 \u0432\u044b\u0434\u0430\u0447\u0438 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u044f","title":"\u041f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u0437\u0430\u0434\u0430\u043d\u0438\u0435 3"},{"location":"lab-4/laboratory_work_4/","text":"\u0418\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u044b \u0412\u0430\u0440\u0438\u0430\u043d\u0442: \u0421\u0438\u0441\u0442\u0435\u043c\u0430 \u0434\u043b\u044f \u0437\u0430\u0432\u0443\u0447\u0430 \u0448\u043a\u043e\u043b\u044b \u0421\u043f\u0438\u0441\u043e\u043a \u0443\u0447\u0435\u043d\u0438\u043a\u043e\u0432: \u0424\u043e\u0440\u043c\u0430 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043d\u043e\u0432\u043e\u0433\u043e \u0443\u0447\u0435\u043d\u0438\u043a\u0430 -> \u043a\u043d\u043e\u043f\u043a\u0430 \"\u0421\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u044c\" \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u0443\u0447\u0435\u043d\u0438\u043a\u0430 \u0432 \u0431\u0430\u0437\u0443. \u041f\u0440\u0438 \u043d\u0430\u0436\u0430\u0442\u0438\u0438 \u043d\u0430 \u0438\u043c\u044f \u0443\u0447\u0435\u043d\u0438\u043a\u0430 \u0432 \u0441\u043f\u0438\u0441\u043a\u0435 \u043f\u0440\u043e\u0438\u0441\u0445\u043e\u0434\u0438\u0442 \u043f\u0435\u0440\u0435\u0445\u043e\u0434 \u043d\u0430 \u0434\u0435\u0442\u0430\u043b\u044c\u043d\u0443\u044e \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 (\u043e\u0431\u0449\u0430\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f, \u043e\u0446\u0435\u043d\u043a\u0438 \u043f\u043e \u0447\u0435\u0442\u0432\u0435\u0440\u0442\u044f\u043c). \u041a\u043d\u043e\u043f\u043a\u0438 \"\u0423\u0434\u0430\u043b\u0438\u0442\u044c\" \u0438 \"\u0420\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c\" \u043b\u0438\u0447\u043d\u0443\u044e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e\u0431 \u0443\u0447\u0435\u043d\u0438\u043a\u0435. \u041f\u043e\u0438\u0441\u043a \u043f\u043e \u0444\u0430\u043c\u0438\u043b\u0438\u0438 \u0444\u0438\u043b\u044c\u0442\u0440\u0443\u0435\u0442 \u0441\u043f\u0438\u0441\u043e\u043a \u0443\u0447\u0435\u043d\u0438\u043a\u043e\u0432. \u0421\u043f\u0438\u0441\u043e\u043a \u0443\u0447\u0438\u0442\u0435\u043b\u0435\u0439: \u0424\u043e\u0440\u043c\u0430 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043d\u043e\u0432\u043e\u0433\u043e \u0443\u0447\u0438\u0442\u0435\u043b\u044f -> \u043a\u043d\u043e\u043f\u043a\u0430 \"\u0421\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u044c\" \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u0443\u0447\u0438\u0442\u0435\u043b\u044f. \u041f\u0440\u0438 \u043d\u0430\u0436\u0430\u0442\u0438\u0438 \u043d\u0430 \u0443\u0447\u0438\u0442\u0435\u043b\u044f \u0432 \u0441\u043f\u0438\u0441\u043a\u0435 \u043f\u0435\u0440\u0435\u0445\u043e\u0434 \u043d\u0430 \u0434\u0435\u0442\u0430\u043b\u044c\u043d\u0443\u044e \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 (\u043e\u0431\u0449\u0430\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f, \u0440\u0430\u0441\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0443\u0440\u043e\u043a\u043e\u0432). \u041a\u043d\u043e\u043f\u043a\u0438 \"\u0423\u0434\u0430\u043b\u0438\u0442\u044c\" \u0438 \"\u0420\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c\" \u043b\u0438\u0447\u043d\u0443\u044e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e. \u041f\u043e\u0438\u0441\u043a \u043f\u043e \u0444\u0430\u043c\u0438\u043b\u0438\u0438. \u041a\u0430\u0431\u0438\u043d\u0435\u0442\u044b: \u0424\u043e\u0440\u043c\u0430 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043d\u043e\u0432\u043e\u0433\u043e \u043a\u0430\u0431\u0438\u043d\u0435\u0442\u0430 -> \u041a\u043d\u043e\u043f\u043a\u0430 \"\u0421\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u044c\" \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u043a\u0430\u0431\u0438\u043d\u0435\u0442. \u041a\u0430\u0440\u0442\u043e\u0447\u043a\u0438 \u043a\u0430\u0431\u0438\u043d\u0435\u0442\u043e\u0432: \u0421\u043e\u0434\u0435\u0440\u0436\u0430\u0442 \u043d\u043e\u043c\u0435\u0440 \u043a\u0430\u0431\u0438\u043d\u0435\u0442\u0430, \u0441\u0442\u0430\u0442\u0443\u0441 (\u043e\u0431\u043e\u0440\u0443\u0434\u043e\u0432\u0430\u043d\u043d\u044b\u0439/\u0431\u0430\u0437\u043e\u0432\u044b\u0439). \u041f\u0440\u0438 \u043d\u0430\u0436\u0430\u0442\u0438\u0438 \u043d\u0430 \u043a\u0430\u0440\u0442\u043e\u0447\u043a\u0443 \u043a\u0430\u0431\u0438\u043d\u0435\u0442\u0430 \u043f\u043e\u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043c\u043e\u0434\u0430\u043b\u044c\u043d\u043e\u0435 \u043e\u043a\u043d\u043e \u0441 \u0434\u0435\u0442\u0430\u043b\u044c\u043d\u043e\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0435\u0439, \u0433\u0434\u0435 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u044e\u0442\u0441\u044f: \u0421\u043f\u0438\u0441\u043e\u043a \u0443\u0440\u043e\u043a\u043e\u0432, \u043f\u0440\u043e\u0445\u043e\u0434\u044f\u0449\u0438\u0445 \u0432 \u044d\u0442\u043e\u043c \u043a\u0430\u0431\u0438\u043d\u0435\u0442\u0435 \u043f\u043e \u0434\u043d\u044f\u043c \u043d\u0435\u0434\u0435\u043b\u0438. \u041a\u043d\u043e\u043f\u043af: \"\u0423\u0434\u0430\u043b\u0438\u0442\u044c\". \u0423\u0440\u043e\u043a\u0438: \u0424\u043e\u0440\u043c\u0430 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043d\u043e\u0432\u043e\u0433\u043e \u0443\u0440\u043e\u043a\u0430 -> \u041a\u043d\u043e\u043f\u043a\u0430 \"\u0421\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u044c\" \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u0443\u0440\u043e\u043a. \u041a\u0430\u0440\u0442\u043e\u0447\u043a\u0438 \u0443\u0440\u043e\u043a\u043e\u0432 \u043f\u043e \u0434\u043d\u044f\u043c \u043d\u0435\u0434\u0435\u043b\u0438: \u041f\u0440\u0438 \u043a\u043b\u0438\u043a\u0435 \u043d\u0430 \u0443\u0440\u043e\u043a \u043f\u0440\u043e\u0438\u0441\u0445\u043e\u0434\u0438\u0442 \u043f\u0435\u0440\u0435\u0445\u043e\u0434 \u043d\u0430 \u043c\u043e\u0434\u0430\u043b\u044c\u043d\u043e\u0435 \u043e\u043a\u043d\u043e: \u043d\u043e\u043c\u0435\u0440 \u0443\u0440\u043e\u043a\u0430, \u043f\u0440\u0435\u0434\u043c\u0435\u0442, \u0443\u0447\u0438\u0442\u0435\u043b\u044c, \u043a\u0430\u0431\u0438\u043d\u0435\u0442, \u0434\u0435\u043d\u044c \u043d\u0435\u0434\u0435\u043b\u0438. \u041a\u043d\u043e\u043f\u043a\u0438: \"\u0420\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c\" \u0438 \"\u0423\u0434\u0430\u043b\u0438\u0442\u044c\" \u041e\u0446\u0435\u043d\u043a\u0438 \u0424\u043e\u0440\u043c\u0430 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043d\u043e\u0432\u043e\u0439 \u043e\u0446\u0435\u043d\u043a\u0438. \u0421\u043f\u0438\u0441\u043e\u043a \u043e\u0446\u0435\u043d\u043e\u043a: \u0423\u0447\u0435\u043d\u0438\u043a, \u041f\u0440\u0435\u0434\u043c\u0435\u0442, \u041e\u0446\u0435\u043d\u043a\u0430, \u0427\u0435\u0442\u0432\u0435\u0440\u0442\u044c. \u0424\u0438\u043b\u044c\u0442\u0440\u044b: \u0423\u0447\u0435\u043d\u0438\u043a (\u043f\u043e\u0438\u0441\u043a/\u0432\u044b\u043f\u0430\u0434\u0430\u044e\u0449\u0438\u0439 \u0441\u043f\u0438\u0441\u043e\u043a), \u041f\u0440\u0435\u0434\u043c\u0435\u0442 (\u0432\u044b\u043f\u0430\u0434\u0430\u044e\u0449\u0438\u0439 \u0441\u043f\u0438\u0441\u043e\u043a). \u041f\u0440\u0438 \u043a\u043b\u0438\u043a\u0435 \u043d\u0430 \u043a\u0430\u0440\u0442\u043e\u0447\u043a\u0443 \u043e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u043e\u043a\u043d\u043e \u0441 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0435\u0439 \u043e\u0431 \u043e\u0446\u0435\u043d\u043a\u0435 \u0438 \u043a\u043d\u043e\u043f\u043a\u0438: \"\u0420\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c\" \u0438 \"\u0423\u0434\u0430\u043b\u0438\u0442\u044c\" \u041e\u0442\u0447\u0435\u0442\u044b \u0412\u044b\u0431\u043e\u0440 \u043a\u043b\u0430\u0441\u0441\u0430 \u0434\u043b\u044f \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u0438 \u043e\u0442\u0447\u0435\u0442\u0430 (\u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043c\u0430\u043b\u044c\u0447\u0438\u043a\u043e\u0432/\u0434\u0435\u0432\u043e\u0447\u0435\u043a, \u0441\u043f\u0438\u0441\u043e\u043a \u0443\u0447\u0435\u043d\u0438\u043a\u043e\u0432, \u0441\u043f\u0438\u0441\u043e\u043a \u0443\u0440\u043e\u043a\u043e\u0432) \u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 CORS \u0432 Django REST framework \u0414\u043b\u044f \u043d\u0430\u0447\u0430\u043b\u0430 \u044f \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u043b\u0430 \u043f\u0430\u043a\u0435\u0442 django-cors-headers. pip install django-cors-headers \u0417\u0430\u0442\u0435\u043c \u043d\u0430\u0441\u0442\u0440\u043e\u0438\u043b\u0430 settings.py \u0420\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u0438\u0435 \u0434\u043b\u044f \u0432\u0441\u0435\u0445 \u0434\u043e\u043c\u0435\u043d\u043e\u0432 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0442\u044c\u0441\u044f \u043a Django-\u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044e. \u0412\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 True \u0447\u0442\u043e\u0431\u044b \u043b\u044e\u0431\u043e\u0439 \u0434\u043e\u043c\u0435\u043d \u043c\u043e\u0433 \u0434\u0435\u043b\u0430\u0442\u044c \u0437\u0430\u043f\u0440\u043e\u0441\u044b \u043a \u0441\u0435\u0440\u0432\u0435\u0440\u0443. \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u044e middleware - CorsMiddleware, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 CORS-\u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0438 \u0434\u043b\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432. \u041e\u043d \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0438 \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b\u0435 CORS-\u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0438 \u0432 \u043e\u0442\u0432\u0435\u0442. CORS_ORIGIN_ALLOW_ALL = True MIDDLEWARE = [ 'corsheaders.middleware.CorsMiddleware', INSTALLED_APPS = [ ... \"corsheaders\" ] \u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u043e\u0432 \u041d\u0430\u0441\u0442\u0440\u043e\u0438\u043b\u0430 \u043c\u0430\u0440\u0448\u0440\u0443\u0442\u0438\u0437\u0430\u0446\u0438\u044e: import { createRouter, createWebHistory } from 'vue-router'; import LoginView from '@/views/LoginView.vue'; import StudentList from '@/views/StudentList.vue'; import StudentDetail from '@/views/StudentDetail.vue'; import TeachersList from '@/views/TeachersList.vue'; import TeacherDetail from '@/views/TeacherDetail.vue'; import RoomsList from '@/views/RoomsList.vue'; import Lessons from '@/views/Lessons.vue'; import Grades from '@/views/Grades.vue'; import RegistrationView from '@/views/RegistrationView.vue'; import HomeView from '@/views/HomeView.vue'; import Report from '@/views/Report.vue'; const routes = [ { path: '/home', name: 'Home', component: HomeView }, { path: '/register', name: 'Registration', component: RegistrationView }, { path: '/login', name: 'Login', component: LoginView }, { path: '/students', name: 'StudentList', component: StudentList, meta: { requiresAuth: true } }, { path: '/students/:id', name: 'StudentDetail', component: StudentDetail, props: true, meta: { requiresAuth: true } }, { path: '/teachers', name: 'TeachersList', component: TeachersList, meta: { requiresAuth: true } }, { path: '/teachers/:id', name: 'TeacherDetail', component: TeacherDetail, props: true, meta: { requiresAuth: true } }, { path: '/rooms', name: 'RoomsList', component: RoomsList, meta: { requiresAuth: true } }, { path: '/lessons', name: 'Lessons', component: Lessons, meta: { requiresAuth: true } }, { path: '/grades', name: 'Grades', component: Grades, meta: { requiresAuth: true } }, { path: '/report', name: 'Report', component: Report, meta: { requiresAuth: true } }, ]; const router = createRouter({ history: createWebHistory(), routes, }); router.beforeEach((to, from, next) => { const isAuthenticated = localStorage.getItem('authToken'); if (to.matched.some(record => record.meta.requiresAuth)) { if (!isAuthenticated) { next({ name: 'Login' }); } else { next(); } } else { next(); } }); export default router; authToken.js - \u0434\u043b\u044f \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f \u0441 \u0441\u0435\u0440\u0432\u0435\u0440\u043e\u043c, \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u0434\u043b\u044f \u043b\u043e\u0433\u0438\u043d\u0430 \u0438 \u043b\u043e\u0433\u0430\u0443\u0442\u0430. import axios from 'axios'; const BASE_URL = 'http://127.0.0.1:8000/auth/token/login/'; export default { login(credentials) { return axios.post(BASE_URL, credentials) .then(response => { const token = response.data.auth_token; console.log('Token:', token); localStorage.setItem('token', token); return token; }) .catch(error => { console.error('\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u043b\u043e\u0433\u0438\u043d\u0435:', error); throw error; }); }, logout() { localStorage.removeItem('token'); }, }; loginView.vue: <template> <div> <Header /> <div class=\"login-container\"> <h1 class=\"page-title\">\u0412\u0445\u043e\u0434</h1> <form @submit.prevent=\"loginUser\"> <div class=\"form-group\"> <label for=\"username\" class=\"form-label\">Username</label> <input v-model=\"form.email\" type=\"username\" id=\"username\" placeholder=\"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 username\" class=\"form-input\" required /> </div> <div class=\"form-group\"> <label for=\"password\" class=\"form-label\">\u041f\u0430\u0440\u043e\u043b\u044c</label> <input v-model=\"form.password\" type=\"password\" id=\"password\" placeholder=\"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u043f\u0430\u0440\u043e\u043b\u044c\" class=\"form-input\" required /> </div> <button type=\"submit\" class=\"login-button\">\u0412\u043e\u0439\u0442\u0438</button> </form> <p v-if=\"error\" class=\"error\">{{ error }}</p> </div> </div> </template> <script> import axios from \"axios\"; import Header from \"@/components/Header.vue\"; export default { components: { Header, }, data() { return { form: { email: \"\", password: \"\", }, error: null, }; }, methods: { async loginUser() { try { const response = await axios.post(\"http://127.0.0.1:8000/auth/token/login/\", { username: this.form.email, password: this.form.password }); const token = response.data.auth_token; localStorage.setItem(\"authToken\", token); alert(\"\u0412\u0445\u043e\u0434 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d \u0443\u0441\u043f\u0435\u0448\u043d\u043e!\"); this.$router.push(\"/home\"); } catch (error) { this.error = \"\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u0432\u0445\u043e\u0434\u0435. \u041f\u0440\u043e\u0432\u0435\u0440\u044c\u0442\u0435 \u0434\u0430\u043d\u043d\u044b\u0435.\"; console.error(error); } }, }, }; </script> \u0417\u0430\u0442\u0435\u043c \u043f\u0440\u0438\u0432\u0435\u0434\u0443 \u043f\u0440\u0438\u043c\u0435\u0440\u044b \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0439 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u043e\u0432. StudentsList.vue <template> <Header /> <div class=\"page-container\"> <div class=\"header-container\"> <h1 class=\"page-title\">\u0421\u043f\u0438\u0441\u043e\u043a \u0443\u0447\u0435\u043d\u0438\u043a\u043e\u0432</h1> <button @click=\"showAddStudentModal = true\" class=\"add-button\">\u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0443\u0447\u0435\u043d\u0438\u043a\u0430</button> </div> <div class=\"search-container\"> <input v-model=\"searchQuery\" type=\"text\" placeholder=\"\u041f\u043e\u0438\u0441\u043a \u043f\u043e \u0444\u0430\u043c\u0438\u043b\u0438\u0438\" class=\"search-input\" /> </div> <div class=\"table-wrapper\"> <table class=\"student-table\"> <thead> <tr> <th>\u0424\u0430\u043c\u0438\u043b\u0438\u044f \u0418\u043c\u044f</th> <th>\u041a\u043b\u0430\u0441\u0441</th> </tr> </thead> <tbody> <tr v-for=\"student in filteredStudents\" :key=\"student.id\"> <td> <router-link :to=\"`/students/${student.id_student}`\" class=\"student-link\"> {{ student.surname }} {{ student.name }} </router-link> </td> <td>{{ student.class_name }}</td> </tr> </tbody> </table> </div> </div> <div v-if=\"showAddStudentModal\" class=\"modal-overlay\"> <div class=\"modal-content\"> <form @submit.prevent=\"addStudent\"> <input v-model=\"newStudent.surname\" type=\"text\" placeholder=\"\u0424\u0430\u043c\u0438\u043b\u0438\u044f\" required /> <input v-model=\"newStudent.name\" type=\"text\" placeholder=\"\u0418\u043c\u044f\" required /> <input v-model=\"newStudent.class_name\" type=\"text\" placeholder=\"\u041a\u043b\u0430\u0441\u0441\" required /> <div class=\"gender-select\"> <span>\u0412\u044b\u0431\u0435\u0440\u0438\u0442\u0435 \u043f\u043e\u043b:</span> <button type=\"button\" class=\"gender-option\" :class=\"{ active: newStudent.gender === '\u041c' }\" @click=\"selectGender('\u041c')\" > \u041c </button> <button type=\"button\" class=\"gender-option\" :class=\"{ active: newStudent.gender === '\u0416' }\" @click=\"selectGender('\u0416')\" > \u0416 </button> </div> <div class=\"modal-actions\"> <button type=\"submit\" class=\"save-button\">\u0421\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u044c</button> <button @click=\"closeModal\" type=\"button\" class=\"cancel-button\">\u041e\u0442\u043c\u0435\u043d\u0430</button> </div> </form> </div> </div> </template> <script> import Header from '@/components/Header.vue'; import apiClient from '@/api/axios'; export default { components: { Header, }, data() { return { students: [], searchQuery: '', newStudent: { surname: '', name: '', class_name: '', gender: '', }, showAddStudentModal: false, }; }, computed: { filteredStudents() { if (!this.searchQuery) { return this.students; } return this.students.filter((student) => student.surname.toLowerCase().includes(this.searchQuery.toLowerCase()) ); }, }, created() { this.fetchStudents(); }, methods: { selectGender(gender) { this.newStudent.gender = gender; }, async fetchStudents() { try { const response = await apiClient.get('students/'); this.students = response.data; } catch (error) { console.error('\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0438 \u0441\u043f\u0438\u0441\u043a\u0430 \u0443\u0447\u0435\u043d\u0438\u043a\u043e\u0432:', error); } }, async addStudent() { try { const response = await apiClient.post('students/', this.newStudent); this.students.push(response.data); this.closeModal(); } catch (error) { console.error('\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0438 \u0443\u0447\u0435\u043d\u0438\u043a\u0430:', error); } }, closeModal() { this.showAddStudentModal = false; }, }, }; </script> StudentDetail.vue <template> <div> <Header /> <div class=\"page-container\"> <h1 class=\"page-title\">\u0414\u0435\u0442\u0430\u043b\u044c\u043d\u0430\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e\u0431 \u0443\u0447\u0435\u043d\u0438\u043a\u0435</h1> <div v-if=\"student\" class=\"student-info\"> <p><strong>\u0424\u0430\u043c\u0438\u043b\u0438\u044f:</strong> {{ student.surname }}</p> <p><strong>\u0418\u043c\u044f:</strong> {{ student.name }}</p> <p><strong>\u041a\u043b\u0430\u0441\u0441:</strong> {{ student.class_name }}</p> <p><strong>\u041f\u043e\u043b:</strong> {{ student.gender }}</p> <div class=\"button-group\"> <button @click=\"toggleEditForm\" class=\"edit-button\">\u0420\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c</button> <button @click=\"deleteStudent\" class=\"delete-button\">\u0423\u0434\u0430\u043b\u0438\u0442\u044c</button> </div> </div> <div v-if=\"showEditForm\" class=\"edit-form\"> <h2>\u0420\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0443\u0447\u0435\u043d\u0438\u043a\u0430</h2> <form @submit.prevent=\"updateStudent\"> <input v-model=\"editedStudent.surname\" type=\"text\" placeholder=\"\u0424\u0430\u043c\u0438\u043b\u0438\u044f\" required /> <input v-model=\"editedStudent.name\" type=\"text\" placeholder=\"\u0418\u043c\u044f\" required /> <input v-model=\"editedStudent.class_name\" type=\"text\" placeholder=\"\u041a\u043b\u0430\u0441\u0441\" required /> <div class=\"gender-buttons\"> <button :class=\"{'active': editedStudent.gender === '\u041c'}\" @click.prevent=\"setGender('\u041c')\" class=\"gender-button\"> \u041c </button> <button :class=\"{'active': editedStudent.gender === '\u0416'}\" @click.prevent=\"setGender('\u0416')\" class=\"gender-button\"> \u0416 </button> </div> <div class=\"form-actions\"> <button type=\"submit\" class=\"save-button\">\u0421\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u044c</button> <button @click=\"cancelEdit\" type=\"button\" class=\"cancel-button\">\u041e\u0442\u043c\u0435\u043d\u0430</button> </div> </form> </div> <div v-else-if=\"grades.length > 0\" class=\"grades-container\"> <h2>\u041e\u0446\u0435\u043d\u043a\u0438</h2> <table class=\"grades-table\"> <thead> <tr> <th>\u041f\u0440\u0435\u0434\u043c\u0435\u0442</th> <th>\u041e\u0446\u0435\u043d\u043a\u0430</th> <th>\u0427\u0435\u0442\u0432\u0435\u0440\u0442\u044c</th> </tr> </thead> <tbody> <tr v-for=\"grade in grades\" :key=\"grade.id\"> <td>{{ grade.subject }}</td> <td>{{ grade.grade }}</td> <td>{{ grade.quarter }}</td> </tr> </tbody> </table> </div> <div v-else> <p>\u041d\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0445 \u043e\u0431 \u043e\u0446\u0435\u043d\u043a\u0430\u0445.</p> </div> </div> </div> </template> <script> import Header from '@/components/Header.vue'; import apiClient from '@/api/axios'; export default { components: { Header, }, props: ['id'], data() { return { student: null, grades: [], showEditForm: false, isLoading: true, editedStudent: { surname: '', name: '', class_name: '', gender: '', }, }; }, created() { if (this.id) { this.fetchStudent(); this.fetchGrades(); } else { console.error('\u041d\u0435 \u043f\u0435\u0440\u0435\u0434\u0430\u043d ID \u0443\u0447\u0435\u043d\u0438\u043a\u0430.'); } }, methods: { async fetchStudent() { try { const response = await apiClient.get(`students/${this.id}/`); this.student = response.data; this.editedStudent = { ...response.data }; } catch (error) { console.error('\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u0443\u0447\u0435\u043d\u0438\u043a\u0430:', error.response || error.message); } }, toggleEditForm() { this.showEditForm = true; }, async fetchGrades() { this.isLoading = true; try { const response = await apiClient.get(`grades/student/${this.id}/`); this.grades = response.data.sort((a, b) => a.quarter - b.quarter); } catch (error) { console.error('\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0435 \u043e\u0446\u0435\u043d\u043e\u043a \u0443\u0447\u0435\u043d\u0438\u043a\u0430:', error.response || error.message); } finally { this.isLoading = false; } }, async updateStudent() { try { const response = await apiClient.put(`students/${this.id}/`, this.editedStudent); this.student = response.data; this.showEditForm = false; } catch (error) { console.error('\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0438 \u0434\u0430\u043d\u043d\u044b\u0445 \u0443\u0447\u0435\u043d\u0438\u043a\u0430:', error.response || error.message); } }, async deleteStudent() { if (confirm('\u0412\u044b \u0443\u0432\u0435\u0440\u0435\u043d\u044b, \u0447\u0442\u043e \u0445\u043e\u0442\u0438\u0442\u0435 \u0443\u0434\u0430\u043b\u0438\u0442\u044c \u044d\u0442\u043e\u0433\u043e \u0443\u0447\u0435\u043d\u0438\u043a\u0430?')) { try { await apiClient.delete(`students/${this.id}/`); alert('\u0423\u0447\u0435\u043d\u0438\u043a \u0443\u0434\u0430\u043b\u0451\u043d \u0443\u0441\u043f\u0435\u0448\u043d\u043e.'); this.$router.push('/students'); } catch (error) { console.error('\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0438 \u0443\u0447\u0435\u043d\u0438\u043a\u0430:', error.response || error.message); } } }, cancelEdit() { this.showEditForm = false; this.editedStudent = { ...this.student }; }, setGender(gender) { this.editedStudent.gender = gender; }, }, }; </script> \u0410\u043d\u0430\u043b\u043e\u0433\u0438\u0447\u043d\u043e \u044f \u043d\u0430\u043f\u0438\u0441\u0430\u043b\u0430 \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044e \u0434\u043b\u044f \u0441\u043f\u0438\u0441\u043a\u0430 \u0443\u0447\u0438\u0442\u0435\u043b\u0435\u0439 \u0438 \u0434\u0435\u0442\u0430\u043b\u044c\u043d\u043e\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0438\u0438 \u043f\u043e \u0443\u0447\u0438\u0442\u0435\u043b\u044f\u043c: RoomsList.vue: <template> <div> <Header /> <div class=\"page-container\"> <div class=\"header-container\"> <h1 class=\"page-title\">\u0421\u043f\u0438\u0441\u043e\u043a \u043a\u043e\u043c\u043d\u0430\u0442</h1> <button @click=\"showAddRoomModal = true\" class=\"add-button\">\u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u043a\u043e\u043c\u043d\u0430\u0442\u0443</button> </div> <div class=\"rooms-grid\"> <div v-for=\"room in rooms\" :key=\"room.id_room\" class=\"room-card\" @click=\"openRoomDetails(room)\" > <h2>\u041a\u043e\u043c\u043d\u0430\u0442\u0430 \u2116{{ room.number }}</h2> <p>\u0421\u0442\u0430\u0442\u0443\u0441: {{ room.status }}</p> </div> </div> <div v-if=\"showAddRoomModal\" class=\"modal-overlay\"> <div class=\"modal-content\"> <form @submit.prevent=\"addRoom\"> <input v-model=\"newRoom.number\" type=\"text\" placeholder=\"\u041d\u043e\u043c\u0435\u0440 \u043a\u043e\u043c\u043d\u0430\u0442\u044b\" required /> <div class=\"status-select\"> <span>\u0412\u044b\u0431\u0435\u0440\u0438\u0442\u0435 \u0441\u0442\u0430\u0442\u0443\u0441:</span> <button type=\"button\" class=\"room-option\" :class=\"{ active: newRoom.status === '\u0411\u0430\u0437\u043e\u0432\u0430\u044f' }\" @click=\"selectStatus('\u0411\u0430\u0437\u043e\u0432\u0430\u044f')\" > \u0411\u0430\u0437\u043e\u0432\u0430\u044f </button> <button type=\"button\" class=\"room-option\" :class=\"{ active: newRoom.status === '\u041e\u0431\u043e\u0440\u0443\u0434\u043e\u0432\u0430\u043d\u043d\u0430\u044f' }\" @click=\"selectStatus('\u041e\u0431\u043e\u0440\u0443\u0434\u043e\u0432\u0430\u043d\u043d\u0430\u044f')\" > \u041e\u0431\u043e\u0440\u0443\u0434\u043e\u0432\u0430\u043d\u043d\u0430\u044f </button> </div> <div class=\"modal-actions\"> <button type=\"submit\" class=\"save-button\">\u0421\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u044c</button> <button @click=\"closeModal\" type=\"button\" class=\"cancel-button\">\u041e\u0442\u043c\u0435\u043d\u0430</button> </div> </form> </div> </div> <div v-if=\"selectedRoom\" class=\"modal-overlay\"> <div class=\"modal-content\"> <h2>\u041a\u043e\u043c\u043d\u0430\u0442\u0430 \u2116{{ selectedRoom.number }}</h2> <p>\u0421\u0442\u0430\u0442\u0443\u0441: {{ selectedRoom.status }}</p> <div class=\"modal-actions\"> <button @click=\"deleteRoom\" class=\"delete-button\">\u0423\u0434\u0430\u043b\u0438\u0442\u044c \u043a\u043e\u043c\u043d\u0430\u0442\u0443</button> <button @click=\"closeDetails\" class=\"cancel-button\">\u0417\u0430\u043a\u0440\u044b\u0442\u044c</button> </div> </div> </div> </div> </div> </template> <script> import Header from '@/components/Header.vue'; import apiClient from '@/api/axios'; export default { components: { Header }, data() { return { rooms: [], showAddRoomModal: false, newRoom: { number: '', status: '', }, selectedRoom: null, }; }, created() { this.fetchRooms(); }, methods: { async fetchRooms() { try { const response = await apiClient.get('rooms/'); this.rooms = response.data.sort((a, b) => a.number - b.number); } catch (error) { console.error('\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0435 \u043a\u043e\u043c\u043d\u0430\u0442:', error); } }, openRoomDetails(room) { this.selectedRoom = room; }, closeDetails() { this.selectedRoom = null; }, async addRoom() { try { const response = await apiClient.post('rooms/', this.newRoom); this.rooms.push(response.data); this.closeModal(); } catch (error) { console.error('\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0438 \u043a\u043e\u043c\u043d\u0430\u0442\u044b:', error); } }, async deleteRoom() { if (confirm(`\u0412\u044b \u0443\u0432\u0435\u0440\u0435\u043d\u044b, \u0447\u0442\u043e \u0445\u043e\u0442\u0438\u0442\u0435 \u0443\u0434\u0430\u043b\u0438\u0442\u044c \u043a\u043e\u043c\u043d\u0430\u0442\u0443 \u2116${this.selectedRoom.number}?`)) { try { await apiClient.delete(`rooms/${this.selectedRoom.id_room}/`); this.rooms = this.rooms.filter((room) => room.id_room !== this.selectedRoom.id_room); this.selectedRoom = null; } catch (error) { console.error('\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0438 \u043a\u043e\u043c\u043d\u0430\u0442\u044b:', error); } } }, selectStatus(status) { this.newRoom.status = status; }, closeModal() { this.showAddRoomModal = false; this.newRoom = { number: '', status: '' }; }, }, }; </script> Lessons.vue: <template> <div> <Header /> <div class=\"page-container\"> <div class=\"header-container\"> <h1 class=\"page-title\">\u0423\u0440\u043e\u043a\u0438</h1> <button @click=\"openAddLessonModal\" class=\"add-button\">\u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u043d\u043e\u0432\u044b\u0439 \u0443\u0440\u043e\u043a</button> </div> <div v-if=\"showAddLessonModal\" class=\"lesson-modal\"> <div class=\"modal-content\"> <form @submit.prevent=\"addLesson\"> <div class=\"form-group\"> <label for=\"subject\">\u041f\u0440\u0435\u0434\u043c\u0435\u0442</label> <input v-model=\"newLesson.subject\" type=\"text\" id=\"subject\" required placeholder=\"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043f\u0440\u0435\u0434\u043c\u0435\u0442\u0430\" /> </div> <div class=\"form-group\"> <label for=\"teacher\">\u0423\u0447\u0438\u0442\u0435\u043b\u044c</label> <select v-model=\"newLesson.id_teacher\" id=\"teacher\" required> <option v-for=\"teacher in teachers\" :key=\"teacher.id_teacher\" :value=\"teacher.id_teacher\"> {{ teacher.surname }} {{ teacher.name }} {{ teacher.room_assigned?.number }} </option> </select> </div> <div class=\"form-group\"> <label for=\"room\">\u041a\u043e\u043c\u043d\u0430\u0442\u0430</label> <select v-model=\"newLesson.room_assigned_id\" id=\"room\" required> <option v-for=\"room in rooms\" :key=\"room.id_room\" :value=\"room.id_room\"> \u041a\u043e\u043c\u043d\u0430\u0442\u0430 \u2116{{ room.number }} - {{ room.status }} </option> </select> </div> <div class=\"form-group\"> <label for=\"class_label\">\u041a\u043b\u0430\u0441\u0441</label> <input v-model=\"newLesson.class_label\" type=\"text\" id=\"class_label\" required placeholder=\"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u043a\u043b\u0430\u0441\u0441\" /> </div> <div class=\"form-group\"> <label for=\"day\">\u0414\u0435\u043d\u044c \u043d\u0435\u0434\u0435\u043b\u0438</label> <select v-model=\"newLesson.day\" id=\"day\" required> <option value=\"\u041f\u043e\u043d\u0435\u0434\u0435\u043b\u044c\u043d\u0438\u043a\">\u041f\u043e\u043d\u0435\u0434\u0435\u043b\u044c\u043d\u0438\u043a</option> <option value=\"\u0412\u0442\u043e\u0440\u043d\u0438\u043a\">\u0412\u0442\u043e\u0440\u043d\u0438\u043a</option> <option value=\"\u0421\u0440\u0435\u0434\u0430\">\u0421\u0440\u0435\u0434\u0430</option> <option value=\"\u0427\u0435\u0442\u0432\u0435\u0440\u0433\">\u0427\u0435\u0442\u0432\u0435\u0440\u0433</option> <option value=\"\u041f\u044f\u0442\u043d\u0438\u0446\u0430\">\u041f\u044f\u0442\u043d\u0438\u0446\u0430</option> <option value=\"\u0421\u0443\u0431\u0431\u043e\u0442\u0430\">\u0421\u0443\u0431\u0431\u043e\u0442\u0430</option> </select> </div> <div class=\"form-group\"> <label for=\"lesson_number\">\u041d\u043e\u043c\u0435\u0440 \u0443\u0440\u043e\u043a\u0430</label> <div class=\"lesson-number-buttons\"> <button v-for=\"n in 8\" :key=\"n\" type=\"button\" :class=\"['lesson-number-button', { selected: newLesson.lesson_number === n }]\" @click=\"newLesson.lesson_number = n\" > {{ n }} </button> </div> </div> <button type=\"submit\" class=\"save-button\">\u0421\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u044c</button> <button @click=\"closeAddLessonModal\" class=\"cancel-button\">\u041e\u0442\u043c\u0435\u043d\u0430</button> </form> </div> </div> <div v-if=\"showEditLessonModal\" class=\"lesson-modal\"> <div class=\"modal-content\"> <form @submit.prevent=\"updateLesson\"> <h2>\u0420\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0443\u0440\u043e\u043a</h2> <div class=\"form-group\"> <label for=\"edit-subject\">\u041f\u0440\u0435\u0434\u043c\u0435\u0442</label> <input v-model=\"editableLesson.subject\" type=\"text\" id=\"edit-subject\" required placeholder=\"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043f\u0440\u0435\u0434\u043c\u0435\u0442\u0430\" /> </div> <div class=\"form-group\"> <label for=\"edit-teacher\">\u0423\u0447\u0438\u0442\u0435\u043b\u044c</label> <select v-model=\"editableLesson.id_teacher\" id=\"edit-teacher\" required> <option v-for=\"teacher in teachers\" :key=\"teacher.id_teacher\" :value=\"teacher.id_teacher\"> {{ teacher.surname }} {{ teacher.name }} {{ teacher.room_assigned?.number }} </option> </select> </div> <div class=\"form-group\"> <label for=\"room\">\u041a\u043e\u043c\u043d\u0430\u0442\u0430</label> <select v-model=\"editableLesson.room_assigned_id\" id=\"room\" required> <option v-for=\"room in rooms\" :key=\"room.id_room\" :value=\"room.id_room\"> \u041a\u043e\u043c\u043d\u0430\u0442\u0430 \u2116{{ room.number }} - {{ room.status }} </option> </select> </div> <div class=\"form-group\"> <label for=\"class_label\">\u041a\u043b\u0430\u0441\u0441</label> <input v-model=\"editableLesson.class_label\" type=\"text\" id=\"class_label\" required placeholder=\"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u043a\u043b\u0430\u0441\u0441\" /> </div> <div class=\"form-group\"> <label for=\"day\">\u0414\u0435\u043d\u044c \u043d\u0435\u0434\u0435\u043b\u0438</label> <select v-model=\"editableLesson.day\" id=\"day\" required> <option value=\"\u041f\u043e\u043d\u0435\u0434\u0435\u043b\u044c\u043d\u0438\u043a\">\u041f\u043e\u043d\u0435\u0434\u0435\u043b\u044c\u043d\u0438\u043a</option> <option value=\"\u0412\u0442\u043e\u0440\u043d\u0438\u043a\">\u0412\u0442\u043e\u0440\u043d\u0438\u043a</option> <option value=\"\u0421\u0440\u0435\u0434\u0430\">\u0421\u0440\u0435\u0434\u0430</option> <option value=\"\u0427\u0435\u0442\u0432\u0435\u0440\u0433\">\u0427\u0435\u0442\u0432\u0435\u0440\u0433</option> <option value=\"\u041f\u044f\u0442\u043d\u0438\u0446\u0430\">\u041f\u044f\u0442\u043d\u0438\u0446\u0430</option> <option value=\"\u0421\u0443\u0431\u0431\u043e\u0442\u0430\">\u0421\u0443\u0431\u0431\u043e\u0442\u0430</option> </select> </div> <div class=\"form-group\"> <label for=\"lesson_number\">\u041d\u043e\u043c\u0435\u0440 \u0443\u0440\u043e\u043a\u0430</label> <div class=\"lesson-number-buttons\"> <button v-for=\"n in 8\" :key=\"n\" type=\"button\" :class=\"['lesson-number-button', { selected: editableLesson.lesson_number === n }]\" @click=\"editableLesson.lesson_number = n\" > {{ n }} </button> </div> </div> <button type=\"submit\" class=\"save-button\">\u0421\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u044c</button> <button @click=\"closeEditLessonModal\" class=\"cancel-button\">\u041e\u0442\u043c\u0435\u043d\u0430</button> </form> </div> </div> <div v-if=\"teachers.length > 0 && rooms.length > 0\"> <div v-for=\"(lessons, day) in lessonsByDay\" :key=\"day\" class=\"lesson-day\"> <h2>{{ day }}</h2> <div v-for=\"lesson in lessons\" :key=\"lesson.id_lesson\" class=\"lesson-card\"> <p><strong> {{lesson.lesson_number }} {{ lesson.subject }}</strong></p> <p>\u0423\u0447\u0438\u0442\u0435\u043b\u044c: {{ lesson.teacher }}</p> <p>\u041a\u043e\u043c\u043d\u0430\u0442\u0430: {{ lesson.room }}</p> <p>\u041a\u043b\u0430\u0441\u0441: {{ lesson.class_label }}</p> <div class=\"lesson-card-actions\"> <button @click=\"openEditLessonModal(lesson)\" class=\"edit-button\">\u0420\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c</button> <button @click.stop=\"deleteLesson(lesson.id_lesson)\" class=\"delete-button\">\u0423\u0434\u0430\u043b\u0438\u0442\u044c</button> </div> </div> </div> </div> </div> </div> </template> <script> import Header from '@/components/Header.vue'; import apiClient from '@/api/axios'; export default { components: { Header, }, data() { return { newLesson: { subject: '', id_teacher: null, room_assigned_id: null, class_label: '', day: '', lesson_number: null, }, editableLesson: {}, teachers: [], rooms: [], lessonsByDay: {}, showModal: false, modalLesson: {}, showAddLessonModal: false, showEditLessonModal: false, }; }, created() { this.fetchData(); }, methods: { async fetchData() { try { const [teachersResponse, roomsResponse] = await Promise.all([ apiClient.get('teachers/'), apiClient.get('rooms/') ]); this.teachers = teachersResponse.data; this.rooms = roomsResponse.data; this.fetchLessons(); } catch (error) { console.error('\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0435 \u0434\u0430\u043d\u043d\u044b\u0445:', error); } }, async fetchLessons() { try { const response = await apiClient.get('lessons/'); const lessons = response.data; console.log('\u0417\u0430\u0433\u0440\u0443\u0436\u0435\u043d\u043d\u044b\u0435 \u0443\u0440\u043e\u043a\u0438:', lessons); lessons.forEach(lesson => { const teacher = this.teachers.find(t => t.id_teacher === lesson.teacher); const room = this.rooms.find(r => r.id_room === lesson.room); lesson.teacher = teacher ? `${teacher.surname} ${teacher.name}` : '\u041d\u0435\u0438\u0437\u0432\u0435\u0441\u0442\u043d\u043e'; lesson.room = room ? `\u2116${room.number}` : '\u041d\u0435 \u0443\u043a\u0430\u0437\u0430\u043d'; lesson.class_label = lesson.class_label || '\u041a\u043b\u0430\u0441\u0441 \u043d\u0435 \u0443\u043a\u0430\u0437\u0430\u043d'; }); this.lessonsByDay = this.organizeLessonsByDay(lessons); } catch (error) { console.error('\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u0443\u0440\u043e\u043a\u043e\u0432:', error); } }, organizeLessonsByDay(lessons) { const lessonsByDay = { \u041f\u043e\u043d\u0435\u0434\u0435\u043b\u044c\u043d\u0438\u043a: [], \u0412\u0442\u043e\u0440\u043d\u0438\u043a: [], \u0421\u0440\u0435\u0434\u0430: [], \u0427\u0435\u0442\u0432\u0435\u0440\u0433: [], \u041f\u044f\u0442\u043d\u0438\u0446\u0430: [], \u0421\u0443\u0431\u0431\u043e\u0442\u0430: [], }; lessons.forEach(lesson => { lessonsByDay[lesson.day].push(lesson); }); for (const day in lessonsByDay) { lessonsByDay[day].sort((a, b) => a.lesson_number - b.lesson_number); } return lessonsByDay; }, async addLesson() { try { if (!this.newLesson.id_teacher || !this.newLesson.room_assigned_id || !this.newLesson.class_label || !this.newLesson.subject) { alert('\u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u0437\u0430\u043f\u043e\u043b\u043d\u0438\u0442\u0435 \u0432\u0441\u0435 \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043f\u043e\u043b\u044f'); return; } const newLesson = { subject: this.newLesson.subject, teacher: this.newLesson.id_teacher, room: this.newLesson.room_assigned_id, class_label: this.newLesson.class_label, day: this.newLesson.day, lesson_number: this.newLesson.lesson_number, }; const response = await apiClient.post('lessons/', newLesson); this.lessonsByDay[response.data.day].push(response.data); this.resetNewLessonForm(); this.closeAddLessonModal(); } catch (error) { console.error('\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0438 \u0443\u0440\u043e\u043a\u0430:', error); if (error.response) { console.error('\u041e\u0442\u0432\u0435\u0442 \u043e\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430:', error.response.data); } } }, resetNewLessonForm() { this.newLesson = { subject: '', id_teacher: null, room_assigned_id: null, class_label: '', day: '\u041f\u043e\u043d\u0435\u0434\u0435\u043b\u044c\u043d\u0438\u043a', lesson_number: 1, }; }, openAddLessonModal() { this.showAddLessonModal = true; }, closeAddLessonModal() { this.showAddLessonModal = false; }, openEditLessonModal(lesson) { this.editableLesson = { id_lesson: lesson.id_lesson, subject: lesson.subject, id_teacher: lesson.id_teacher, room_assigned_id: lesson.room_assigned_id, class_label: lesson.class_label, day: lesson.day, lesson_number: lesson.lesson_number, }; this.showEditLessonModal = true; }, async updateLesson() { try { console.log('\u0414\u0430\u043d\u043d\u044b\u0435 \u0434\u043b\u044f \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f:', this.editableLesson); await apiClient.put(`lessons/${this.editableLesson.id_lesson}/`, { subject: this.editableLesson.subject, teacher: this.editableLesson.id_teacher, room: this.editableLesson.room_assigned_id, class_label: this.editableLesson.class_label, day: this.editableLesson.day, lesson_number: this.editableLesson.lesson_number, }); this.fetchLessons(); this.closeEditLessonModal(); } catch (error) { console.error('\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0438 \u0443\u0440\u043e\u043a\u0430:', error.response?.data || error); alert(`\u041e\u0448\u0438\u0431\u043a\u0430: ${JSON.stringify(error.response?.data || error)}`); } }, closeEditLessonModal() { this.showEditLessonModal = false; }, async deleteLesson(lessonId) { try { await apiClient.delete(`lessons/${lessonId}/`); this.fetchLessons(); this.closeModal(); } catch (error) { console.error('\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0438 \u0443\u0440\u043e\u043a\u0430:', error); } }, }, }; </script> \u0421\u043f\u0438\u0441\u043e\u043a \u043e\u0446\u0435\u043d\u043e\u043a \u0434\u043b\u044f \u0443\u0447\u0435\u043d\u0438\u043a\u043e\u0432 \u043f\u043e \u0447\u0435\u0442\u0432\u0435\u0440\u0442\u044f\u043c, Grades.vue: \u0413\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u044f \u043e\u0442\u0447\u0451\u0442\u0430 \u043f\u043e \u043a\u043b\u0430\u0441\u0441\u0443, Report.Vue: <template> <div> <Header /> <div class=\"page-container\"> <h1>\u0413\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u044f \u043e\u0442\u0447\u0451\u0442\u0430</h1> <div class=\"form-container\"> <label for=\"class-select\" class=\"form-label-inline\">\u0412\u044b\u0431\u0435\u0440\u0438\u0442\u0435 \u043a\u043b\u0430\u0441\u0441:</label> <div class=\"select-container-inline\"> <select v-model=\"selectedClass\" id=\"class-select\" @change=\"fetchReportData\" class=\"custom-select\"> <option value=\"\" disabled selected>\u0412\u044b\u0431\u0435\u0440\u0438\u0442\u0435 \u043a\u043b\u0430\u0441\u0441...</option> <option v-for=\"className in classOptions\" :key=\"className\" :value=\"className\"> {{ className }} </option> </select> </div> </div> <div v-if=\"selectedClass && reportData\" class=\"report-content\"> <h2>{{ selectedClass }} \u041a\u043b\u0430\u0441\u0441</h2> <div class=\"gender-count\"> <p>\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043c\u0430\u043b\u044c\u0447\u0438\u043a\u043e\u0432: {{ reportData.genderCount.boys }}</p> <p>\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0434\u0435\u0432\u043e\u0447\u0435\u043a: {{ reportData.genderCount.girls }}</p> </div> <h3>\u0421\u043f\u0438\u0441\u043e\u043a \u0443\u0447\u0435\u043d\u0438\u043a\u043e\u0432:</h3> <table class=\"students-table\"> <thead> <tr> <th>\u0424\u0430\u043c\u0438\u043b\u0438\u044f</th> <th>\u0418\u043c\u044f</th> </tr> </thead> <tbody> <tr v-for=\"student in reportData.students\" :key=\"student.id_student\"> <td>{{ student.surname }}</td> <td>{{ student.name }}</td> </tr> </tbody> </table> <h3>\u0421\u043f\u0438\u0441\u043e\u043a \u0443\u0440\u043e\u043a\u043e\u0432:</h3> <table class=\"lessons-table\"> <thead> <tr> <th>\u0414\u0435\u043d\u044c</th> <th>\u041d\u043e\u043c\u0435\u0440 \u0443\u0440\u043e\u043a\u0430</th> <th>\u041f\u0440\u0435\u0434\u043c\u0435\u0442</th> <th>\u041a\u0430\u0431\u0438\u043d\u0435\u0442</th> </tr> </thead> <tbody> <tr v-for=\"lesson in enrichedLessons\" :key=\"lesson.id_lesson\"> <td>{{ lesson.day }}</td> <td>{{ lesson.lesson_number }}</td> <td>{{ lesson.subject }}</td> <td>{{ lesson.room_number }}</td> </tr> </tbody> </table> </div> <div v-else-if=\"selectedClass\" class=\"loading-message\"> <p>\u0417\u0430\u0433\u0440\u0443\u0436\u0430\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0435 \u0434\u043b\u044f \u043a\u043b\u0430\u0441\u0441\u0430 {{ selectedClass }}...</p> </div> </div> </div> </template> <script> import Header from \"@/components/Header.vue\"; import apiClient from \"@/api/axios\"; export default { components: { Header }, data() { return { classOptions: [], selectedClass: null, reportData: null, rooms: [], }; }, computed: { enrichedLessons() { if (!this.reportData || !this.reportData.lessons) return []; const daysOfWeek = [\"\u041f\u043e\u043d\u0435\u0434\u0435\u043b\u044c\u043d\u0438\u043a\", \"\u0412\u0442\u043e\u0440\u043d\u0438\u043a\", \"\u0421\u0440\u0435\u0434\u0430\", \"\u0427\u0435\u0442\u0432\u0435\u0440\u0433\", \"\u041f\u044f\u0442\u043d\u0438\u0446\u0430\", \"\u0421\u0443\u0431\u0431\u043e\u0442\u0430\"]; return this.reportData.lessons .map((lesson) => { const room = this.rooms.find((room) => room.id_room === lesson.room); return { ...lesson, room_number: room ? room.number : \"\u041d\u0435\u0438\u0437\u0432\u0435\u0441\u0442\u043d\u043e\", }; }) .sort((a, b) => { const dayA = daysOfWeek.indexOf(a.day); const dayB = daysOfWeek.indexOf(b.day); if (dayA !== dayB) { return dayA - dayB; } return a.lesson_number - b.lesson_number; }); }, }, created() { this.fetchClasses(); this.fetchRooms(); }, methods: { async fetchClasses() { try { const response = await apiClient.get(\"students/\"); const uniqueClasses = [ ...new Set(response.data.map((student) => student.class_name)), ]; this.classOptions = uniqueClasses; } catch (error) { console.error(\"\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0435 \u043a\u043b\u0430\u0441\u0441\u043e\u0432:\", error); } }, async fetchRooms() { try { const response = await apiClient.get(\"rooms/\"); this.rooms = response.data; } catch (error) { console.error(\"\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u043a\u0430\u0431\u0438\u043d\u0435\u0442\u043e\u0432:\", error); } }, async fetchReportData() { if (!this.selectedClass) return; try { const studentsResponse = await apiClient.get(\"students/\"); const students = studentsResponse.data.filter( (student) => student.class_name === this.selectedClass ); const genderCount = { boys: students.filter((student) => student.gender === \"\u041c\").length, girls: students.filter((student) => student.gender === \"\u0416\").length, }; const lessonsResponse = await apiClient.get(\"lessons/\"); const lessons = lessonsResponse.data.filter( (lesson) => lesson.class_label === this.selectedClass ); this.reportData = { students, genderCount, lessons, }; } catch (error) { console.error(\"\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u043e\u0442\u0447\u0451\u0442\u0430:\", error); } }, }, }; </script>","title":"\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430"},{"location":"lab-4/laboratory_work_4/#_1","text":"\u0412\u0430\u0440\u0438\u0430\u043d\u0442: \u0421\u0438\u0441\u0442\u0435\u043c\u0430 \u0434\u043b\u044f \u0437\u0430\u0432\u0443\u0447\u0430 \u0448\u043a\u043e\u043b\u044b \u0421\u043f\u0438\u0441\u043e\u043a \u0443\u0447\u0435\u043d\u0438\u043a\u043e\u0432: \u0424\u043e\u0440\u043c\u0430 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043d\u043e\u0432\u043e\u0433\u043e \u0443\u0447\u0435\u043d\u0438\u043a\u0430 -> \u043a\u043d\u043e\u043f\u043a\u0430 \"\u0421\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u044c\" \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u0443\u0447\u0435\u043d\u0438\u043a\u0430 \u0432 \u0431\u0430\u0437\u0443. \u041f\u0440\u0438 \u043d\u0430\u0436\u0430\u0442\u0438\u0438 \u043d\u0430 \u0438\u043c\u044f \u0443\u0447\u0435\u043d\u0438\u043a\u0430 \u0432 \u0441\u043f\u0438\u0441\u043a\u0435 \u043f\u0440\u043e\u0438\u0441\u0445\u043e\u0434\u0438\u0442 \u043f\u0435\u0440\u0435\u0445\u043e\u0434 \u043d\u0430 \u0434\u0435\u0442\u0430\u043b\u044c\u043d\u0443\u044e \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 (\u043e\u0431\u0449\u0430\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f, \u043e\u0446\u0435\u043d\u043a\u0438 \u043f\u043e \u0447\u0435\u0442\u0432\u0435\u0440\u0442\u044f\u043c). \u041a\u043d\u043e\u043f\u043a\u0438 \"\u0423\u0434\u0430\u043b\u0438\u0442\u044c\" \u0438 \"\u0420\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c\" \u043b\u0438\u0447\u043d\u0443\u044e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e\u0431 \u0443\u0447\u0435\u043d\u0438\u043a\u0435. \u041f\u043e\u0438\u0441\u043a \u043f\u043e \u0444\u0430\u043c\u0438\u043b\u0438\u0438 \u0444\u0438\u043b\u044c\u0442\u0440\u0443\u0435\u0442 \u0441\u043f\u0438\u0441\u043e\u043a \u0443\u0447\u0435\u043d\u0438\u043a\u043e\u0432. \u0421\u043f\u0438\u0441\u043e\u043a \u0443\u0447\u0438\u0442\u0435\u043b\u0435\u0439: \u0424\u043e\u0440\u043c\u0430 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043d\u043e\u0432\u043e\u0433\u043e \u0443\u0447\u0438\u0442\u0435\u043b\u044f -> \u043a\u043d\u043e\u043f\u043a\u0430 \"\u0421\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u044c\" \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u0443\u0447\u0438\u0442\u0435\u043b\u044f. \u041f\u0440\u0438 \u043d\u0430\u0436\u0430\u0442\u0438\u0438 \u043d\u0430 \u0443\u0447\u0438\u0442\u0435\u043b\u044f \u0432 \u0441\u043f\u0438\u0441\u043a\u0435 \u043f\u0435\u0440\u0435\u0445\u043e\u0434 \u043d\u0430 \u0434\u0435\u0442\u0430\u043b\u044c\u043d\u0443\u044e \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 (\u043e\u0431\u0449\u0430\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f, \u0440\u0430\u0441\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0443\u0440\u043e\u043a\u043e\u0432). \u041a\u043d\u043e\u043f\u043a\u0438 \"\u0423\u0434\u0430\u043b\u0438\u0442\u044c\" \u0438 \"\u0420\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c\" \u043b\u0438\u0447\u043d\u0443\u044e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e. \u041f\u043e\u0438\u0441\u043a \u043f\u043e \u0444\u0430\u043c\u0438\u043b\u0438\u0438. \u041a\u0430\u0431\u0438\u043d\u0435\u0442\u044b: \u0424\u043e\u0440\u043c\u0430 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043d\u043e\u0432\u043e\u0433\u043e \u043a\u0430\u0431\u0438\u043d\u0435\u0442\u0430 -> \u041a\u043d\u043e\u043f\u043a\u0430 \"\u0421\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u044c\" \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u043a\u0430\u0431\u0438\u043d\u0435\u0442. \u041a\u0430\u0440\u0442\u043e\u0447\u043a\u0438 \u043a\u0430\u0431\u0438\u043d\u0435\u0442\u043e\u0432: \u0421\u043e\u0434\u0435\u0440\u0436\u0430\u0442 \u043d\u043e\u043c\u0435\u0440 \u043a\u0430\u0431\u0438\u043d\u0435\u0442\u0430, \u0441\u0442\u0430\u0442\u0443\u0441 (\u043e\u0431\u043e\u0440\u0443\u0434\u043e\u0432\u0430\u043d\u043d\u044b\u0439/\u0431\u0430\u0437\u043e\u0432\u044b\u0439). \u041f\u0440\u0438 \u043d\u0430\u0436\u0430\u0442\u0438\u0438 \u043d\u0430 \u043a\u0430\u0440\u0442\u043e\u0447\u043a\u0443 \u043a\u0430\u0431\u0438\u043d\u0435\u0442\u0430 \u043f\u043e\u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043c\u043e\u0434\u0430\u043b\u044c\u043d\u043e\u0435 \u043e\u043a\u043d\u043e \u0441 \u0434\u0435\u0442\u0430\u043b\u044c\u043d\u043e\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0435\u0439, \u0433\u0434\u0435 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u044e\u0442\u0441\u044f: \u0421\u043f\u0438\u0441\u043e\u043a \u0443\u0440\u043e\u043a\u043e\u0432, \u043f\u0440\u043e\u0445\u043e\u0434\u044f\u0449\u0438\u0445 \u0432 \u044d\u0442\u043e\u043c \u043a\u0430\u0431\u0438\u043d\u0435\u0442\u0435 \u043f\u043e \u0434\u043d\u044f\u043c \u043d\u0435\u0434\u0435\u043b\u0438. \u041a\u043d\u043e\u043f\u043af: \"\u0423\u0434\u0430\u043b\u0438\u0442\u044c\". \u0423\u0440\u043e\u043a\u0438: \u0424\u043e\u0440\u043c\u0430 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043d\u043e\u0432\u043e\u0433\u043e \u0443\u0440\u043e\u043a\u0430 -> \u041a\u043d\u043e\u043f\u043a\u0430 \"\u0421\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u044c\" \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u0443\u0440\u043e\u043a. \u041a\u0430\u0440\u0442\u043e\u0447\u043a\u0438 \u0443\u0440\u043e\u043a\u043e\u0432 \u043f\u043e \u0434\u043d\u044f\u043c \u043d\u0435\u0434\u0435\u043b\u0438: \u041f\u0440\u0438 \u043a\u043b\u0438\u043a\u0435 \u043d\u0430 \u0443\u0440\u043e\u043a \u043f\u0440\u043e\u0438\u0441\u0445\u043e\u0434\u0438\u0442 \u043f\u0435\u0440\u0435\u0445\u043e\u0434 \u043d\u0430 \u043c\u043e\u0434\u0430\u043b\u044c\u043d\u043e\u0435 \u043e\u043a\u043d\u043e: \u043d\u043e\u043c\u0435\u0440 \u0443\u0440\u043e\u043a\u0430, \u043f\u0440\u0435\u0434\u043c\u0435\u0442, \u0443\u0447\u0438\u0442\u0435\u043b\u044c, \u043a\u0430\u0431\u0438\u043d\u0435\u0442, \u0434\u0435\u043d\u044c \u043d\u0435\u0434\u0435\u043b\u0438. \u041a\u043d\u043e\u043f\u043a\u0438: \"\u0420\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c\" \u0438 \"\u0423\u0434\u0430\u043b\u0438\u0442\u044c\" \u041e\u0446\u0435\u043d\u043a\u0438 \u0424\u043e\u0440\u043c\u0430 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043d\u043e\u0432\u043e\u0439 \u043e\u0446\u0435\u043d\u043a\u0438. \u0421\u043f\u0438\u0441\u043e\u043a \u043e\u0446\u0435\u043d\u043e\u043a: \u0423\u0447\u0435\u043d\u0438\u043a, \u041f\u0440\u0435\u0434\u043c\u0435\u0442, \u041e\u0446\u0435\u043d\u043a\u0430, \u0427\u0435\u0442\u0432\u0435\u0440\u0442\u044c. \u0424\u0438\u043b\u044c\u0442\u0440\u044b: \u0423\u0447\u0435\u043d\u0438\u043a (\u043f\u043e\u0438\u0441\u043a/\u0432\u044b\u043f\u0430\u0434\u0430\u044e\u0449\u0438\u0439 \u0441\u043f\u0438\u0441\u043e\u043a), \u041f\u0440\u0435\u0434\u043c\u0435\u0442 (\u0432\u044b\u043f\u0430\u0434\u0430\u044e\u0449\u0438\u0439 \u0441\u043f\u0438\u0441\u043e\u043a). \u041f\u0440\u0438 \u043a\u043b\u0438\u043a\u0435 \u043d\u0430 \u043a\u0430\u0440\u0442\u043e\u0447\u043a\u0443 \u043e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u043e\u043a\u043d\u043e \u0441 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0435\u0439 \u043e\u0431 \u043e\u0446\u0435\u043d\u043a\u0435 \u0438 \u043a\u043d\u043e\u043f\u043a\u0438: \"\u0420\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c\" \u0438 \"\u0423\u0434\u0430\u043b\u0438\u0442\u044c\" \u041e\u0442\u0447\u0435\u0442\u044b \u0412\u044b\u0431\u043e\u0440 \u043a\u043b\u0430\u0441\u0441\u0430 \u0434\u043b\u044f \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u0438 \u043e\u0442\u0447\u0435\u0442\u0430 (\u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043c\u0430\u043b\u044c\u0447\u0438\u043a\u043e\u0432/\u0434\u0435\u0432\u043e\u0447\u0435\u043a, \u0441\u043f\u0438\u0441\u043e\u043a \u0443\u0447\u0435\u043d\u0438\u043a\u043e\u0432, \u0441\u043f\u0438\u0441\u043e\u043a \u0443\u0440\u043e\u043a\u043e\u0432)","title":"\u0418\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u044b"},{"location":"lab-4/laboratory_work_4/#_2","text":"","title":"\u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f"},{"location":"lab-4/laboratory_work_4/#cors-django-rest-framework","text":"\u0414\u043b\u044f \u043d\u0430\u0447\u0430\u043b\u0430 \u044f \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u043b\u0430 \u043f\u0430\u043a\u0435\u0442 django-cors-headers. pip install django-cors-headers \u0417\u0430\u0442\u0435\u043c \u043d\u0430\u0441\u0442\u0440\u043e\u0438\u043b\u0430 settings.py \u0420\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u0438\u0435 \u0434\u043b\u044f \u0432\u0441\u0435\u0445 \u0434\u043e\u043c\u0435\u043d\u043e\u0432 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0442\u044c\u0441\u044f \u043a Django-\u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044e. \u0412\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 True \u0447\u0442\u043e\u0431\u044b \u043b\u044e\u0431\u043e\u0439 \u0434\u043e\u043c\u0435\u043d \u043c\u043e\u0433 \u0434\u0435\u043b\u0430\u0442\u044c \u0437\u0430\u043f\u0440\u043e\u0441\u044b \u043a \u0441\u0435\u0440\u0432\u0435\u0440\u0443. \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u044e middleware - CorsMiddleware, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 CORS-\u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0438 \u0434\u043b\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432. \u041e\u043d \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0438 \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b\u0435 CORS-\u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0438 \u0432 \u043e\u0442\u0432\u0435\u0442. CORS_ORIGIN_ALLOW_ALL = True MIDDLEWARE = [ 'corsheaders.middleware.CorsMiddleware', INSTALLED_APPS = [ ... \"corsheaders\" ]","title":"\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 CORS \u0432 Django REST framework"},{"location":"lab-4/laboratory_work_4/#_3","text":"\u041d\u0430\u0441\u0442\u0440\u043e\u0438\u043b\u0430 \u043c\u0430\u0440\u0448\u0440\u0443\u0442\u0438\u0437\u0430\u0446\u0438\u044e: import { createRouter, createWebHistory } from 'vue-router'; import LoginView from '@/views/LoginView.vue'; import StudentList from '@/views/StudentList.vue'; import StudentDetail from '@/views/StudentDetail.vue'; import TeachersList from '@/views/TeachersList.vue'; import TeacherDetail from '@/views/TeacherDetail.vue'; import RoomsList from '@/views/RoomsList.vue'; import Lessons from '@/views/Lessons.vue'; import Grades from '@/views/Grades.vue'; import RegistrationView from '@/views/RegistrationView.vue'; import HomeView from '@/views/HomeView.vue'; import Report from '@/views/Report.vue'; const routes = [ { path: '/home', name: 'Home', component: HomeView }, { path: '/register', name: 'Registration', component: RegistrationView }, { path: '/login', name: 'Login', component: LoginView }, { path: '/students', name: 'StudentList', component: StudentList, meta: { requiresAuth: true } }, { path: '/students/:id', name: 'StudentDetail', component: StudentDetail, props: true, meta: { requiresAuth: true } }, { path: '/teachers', name: 'TeachersList', component: TeachersList, meta: { requiresAuth: true } }, { path: '/teachers/:id', name: 'TeacherDetail', component: TeacherDetail, props: true, meta: { requiresAuth: true } }, { path: '/rooms', name: 'RoomsList', component: RoomsList, meta: { requiresAuth: true } }, { path: '/lessons', name: 'Lessons', component: Lessons, meta: { requiresAuth: true } }, { path: '/grades', name: 'Grades', component: Grades, meta: { requiresAuth: true } }, { path: '/report', name: 'Report', component: Report, meta: { requiresAuth: true } }, ]; const router = createRouter({ history: createWebHistory(), routes, }); router.beforeEach((to, from, next) => { const isAuthenticated = localStorage.getItem('authToken'); if (to.matched.some(record => record.meta.requiresAuth)) { if (!isAuthenticated) { next({ name: 'Login' }); } else { next(); } } else { next(); } }); export default router; authToken.js - \u0434\u043b\u044f \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f \u0441 \u0441\u0435\u0440\u0432\u0435\u0440\u043e\u043c, \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u0434\u043b\u044f \u043b\u043e\u0433\u0438\u043d\u0430 \u0438 \u043b\u043e\u0433\u0430\u0443\u0442\u0430. import axios from 'axios'; const BASE_URL = 'http://127.0.0.1:8000/auth/token/login/'; export default { login(credentials) { return axios.post(BASE_URL, credentials) .then(response => { const token = response.data.auth_token; console.log('Token:', token); localStorage.setItem('token', token); return token; }) .catch(error => { console.error('\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u043b\u043e\u0433\u0438\u043d\u0435:', error); throw error; }); }, logout() { localStorage.removeItem('token'); }, }; loginView.vue: <template> <div> <Header /> <div class=\"login-container\"> <h1 class=\"page-title\">\u0412\u0445\u043e\u0434</h1> <form @submit.prevent=\"loginUser\"> <div class=\"form-group\"> <label for=\"username\" class=\"form-label\">Username</label> <input v-model=\"form.email\" type=\"username\" id=\"username\" placeholder=\"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 username\" class=\"form-input\" required /> </div> <div class=\"form-group\"> <label for=\"password\" class=\"form-label\">\u041f\u0430\u0440\u043e\u043b\u044c</label> <input v-model=\"form.password\" type=\"password\" id=\"password\" placeholder=\"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u043f\u0430\u0440\u043e\u043b\u044c\" class=\"form-input\" required /> </div> <button type=\"submit\" class=\"login-button\">\u0412\u043e\u0439\u0442\u0438</button> </form> <p v-if=\"error\" class=\"error\">{{ error }}</p> </div> </div> </template> <script> import axios from \"axios\"; import Header from \"@/components/Header.vue\"; export default { components: { Header, }, data() { return { form: { email: \"\", password: \"\", }, error: null, }; }, methods: { async loginUser() { try { const response = await axios.post(\"http://127.0.0.1:8000/auth/token/login/\", { username: this.form.email, password: this.form.password }); const token = response.data.auth_token; localStorage.setItem(\"authToken\", token); alert(\"\u0412\u0445\u043e\u0434 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d \u0443\u0441\u043f\u0435\u0448\u043d\u043e!\"); this.$router.push(\"/home\"); } catch (error) { this.error = \"\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u0432\u0445\u043e\u0434\u0435. \u041f\u0440\u043e\u0432\u0435\u0440\u044c\u0442\u0435 \u0434\u0430\u043d\u043d\u044b\u0435.\"; console.error(error); } }, }, }; </script> \u0417\u0430\u0442\u0435\u043c \u043f\u0440\u0438\u0432\u0435\u0434\u0443 \u043f\u0440\u0438\u043c\u0435\u0440\u044b \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0439 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u043e\u0432. StudentsList.vue <template> <Header /> <div class=\"page-container\"> <div class=\"header-container\"> <h1 class=\"page-title\">\u0421\u043f\u0438\u0441\u043e\u043a \u0443\u0447\u0435\u043d\u0438\u043a\u043e\u0432</h1> <button @click=\"showAddStudentModal = true\" class=\"add-button\">\u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0443\u0447\u0435\u043d\u0438\u043a\u0430</button> </div> <div class=\"search-container\"> <input v-model=\"searchQuery\" type=\"text\" placeholder=\"\u041f\u043e\u0438\u0441\u043a \u043f\u043e \u0444\u0430\u043c\u0438\u043b\u0438\u0438\" class=\"search-input\" /> </div> <div class=\"table-wrapper\"> <table class=\"student-table\"> <thead> <tr> <th>\u0424\u0430\u043c\u0438\u043b\u0438\u044f \u0418\u043c\u044f</th> <th>\u041a\u043b\u0430\u0441\u0441</th> </tr> </thead> <tbody> <tr v-for=\"student in filteredStudents\" :key=\"student.id\"> <td> <router-link :to=\"`/students/${student.id_student}`\" class=\"student-link\"> {{ student.surname }} {{ student.name }} </router-link> </td> <td>{{ student.class_name }}</td> </tr> </tbody> </table> </div> </div> <div v-if=\"showAddStudentModal\" class=\"modal-overlay\"> <div class=\"modal-content\"> <form @submit.prevent=\"addStudent\"> <input v-model=\"newStudent.surname\" type=\"text\" placeholder=\"\u0424\u0430\u043c\u0438\u043b\u0438\u044f\" required /> <input v-model=\"newStudent.name\" type=\"text\" placeholder=\"\u0418\u043c\u044f\" required /> <input v-model=\"newStudent.class_name\" type=\"text\" placeholder=\"\u041a\u043b\u0430\u0441\u0441\" required /> <div class=\"gender-select\"> <span>\u0412\u044b\u0431\u0435\u0440\u0438\u0442\u0435 \u043f\u043e\u043b:</span> <button type=\"button\" class=\"gender-option\" :class=\"{ active: newStudent.gender === '\u041c' }\" @click=\"selectGender('\u041c')\" > \u041c </button> <button type=\"button\" class=\"gender-option\" :class=\"{ active: newStudent.gender === '\u0416' }\" @click=\"selectGender('\u0416')\" > \u0416 </button> </div> <div class=\"modal-actions\"> <button type=\"submit\" class=\"save-button\">\u0421\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u044c</button> <button @click=\"closeModal\" type=\"button\" class=\"cancel-button\">\u041e\u0442\u043c\u0435\u043d\u0430</button> </div> </form> </div> </div> </template> <script> import Header from '@/components/Header.vue'; import apiClient from '@/api/axios'; export default { components: { Header, }, data() { return { students: [], searchQuery: '', newStudent: { surname: '', name: '', class_name: '', gender: '', }, showAddStudentModal: false, }; }, computed: { filteredStudents() { if (!this.searchQuery) { return this.students; } return this.students.filter((student) => student.surname.toLowerCase().includes(this.searchQuery.toLowerCase()) ); }, }, created() { this.fetchStudents(); }, methods: { selectGender(gender) { this.newStudent.gender = gender; }, async fetchStudents() { try { const response = await apiClient.get('students/'); this.students = response.data; } catch (error) { console.error('\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0438 \u0441\u043f\u0438\u0441\u043a\u0430 \u0443\u0447\u0435\u043d\u0438\u043a\u043e\u0432:', error); } }, async addStudent() { try { const response = await apiClient.post('students/', this.newStudent); this.students.push(response.data); this.closeModal(); } catch (error) { console.error('\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0438 \u0443\u0447\u0435\u043d\u0438\u043a\u0430:', error); } }, closeModal() { this.showAddStudentModal = false; }, }, }; </script> StudentDetail.vue <template> <div> <Header /> <div class=\"page-container\"> <h1 class=\"page-title\">\u0414\u0435\u0442\u0430\u043b\u044c\u043d\u0430\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e\u0431 \u0443\u0447\u0435\u043d\u0438\u043a\u0435</h1> <div v-if=\"student\" class=\"student-info\"> <p><strong>\u0424\u0430\u043c\u0438\u043b\u0438\u044f:</strong> {{ student.surname }}</p> <p><strong>\u0418\u043c\u044f:</strong> {{ student.name }}</p> <p><strong>\u041a\u043b\u0430\u0441\u0441:</strong> {{ student.class_name }}</p> <p><strong>\u041f\u043e\u043b:</strong> {{ student.gender }}</p> <div class=\"button-group\"> <button @click=\"toggleEditForm\" class=\"edit-button\">\u0420\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c</button> <button @click=\"deleteStudent\" class=\"delete-button\">\u0423\u0434\u0430\u043b\u0438\u0442\u044c</button> </div> </div> <div v-if=\"showEditForm\" class=\"edit-form\"> <h2>\u0420\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0443\u0447\u0435\u043d\u0438\u043a\u0430</h2> <form @submit.prevent=\"updateStudent\"> <input v-model=\"editedStudent.surname\" type=\"text\" placeholder=\"\u0424\u0430\u043c\u0438\u043b\u0438\u044f\" required /> <input v-model=\"editedStudent.name\" type=\"text\" placeholder=\"\u0418\u043c\u044f\" required /> <input v-model=\"editedStudent.class_name\" type=\"text\" placeholder=\"\u041a\u043b\u0430\u0441\u0441\" required /> <div class=\"gender-buttons\"> <button :class=\"{'active': editedStudent.gender === '\u041c'}\" @click.prevent=\"setGender('\u041c')\" class=\"gender-button\"> \u041c </button> <button :class=\"{'active': editedStudent.gender === '\u0416'}\" @click.prevent=\"setGender('\u0416')\" class=\"gender-button\"> \u0416 </button> </div> <div class=\"form-actions\"> <button type=\"submit\" class=\"save-button\">\u0421\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u044c</button> <button @click=\"cancelEdit\" type=\"button\" class=\"cancel-button\">\u041e\u0442\u043c\u0435\u043d\u0430</button> </div> </form> </div> <div v-else-if=\"grades.length > 0\" class=\"grades-container\"> <h2>\u041e\u0446\u0435\u043d\u043a\u0438</h2> <table class=\"grades-table\"> <thead> <tr> <th>\u041f\u0440\u0435\u0434\u043c\u0435\u0442</th> <th>\u041e\u0446\u0435\u043d\u043a\u0430</th> <th>\u0427\u0435\u0442\u0432\u0435\u0440\u0442\u044c</th> </tr> </thead> <tbody> <tr v-for=\"grade in grades\" :key=\"grade.id\"> <td>{{ grade.subject }}</td> <td>{{ grade.grade }}</td> <td>{{ grade.quarter }}</td> </tr> </tbody> </table> </div> <div v-else> <p>\u041d\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0445 \u043e\u0431 \u043e\u0446\u0435\u043d\u043a\u0430\u0445.</p> </div> </div> </div> </template> <script> import Header from '@/components/Header.vue'; import apiClient from '@/api/axios'; export default { components: { Header, }, props: ['id'], data() { return { student: null, grades: [], showEditForm: false, isLoading: true, editedStudent: { surname: '', name: '', class_name: '', gender: '', }, }; }, created() { if (this.id) { this.fetchStudent(); this.fetchGrades(); } else { console.error('\u041d\u0435 \u043f\u0435\u0440\u0435\u0434\u0430\u043d ID \u0443\u0447\u0435\u043d\u0438\u043a\u0430.'); } }, methods: { async fetchStudent() { try { const response = await apiClient.get(`students/${this.id}/`); this.student = response.data; this.editedStudent = { ...response.data }; } catch (error) { console.error('\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u0443\u0447\u0435\u043d\u0438\u043a\u0430:', error.response || error.message); } }, toggleEditForm() { this.showEditForm = true; }, async fetchGrades() { this.isLoading = true; try { const response = await apiClient.get(`grades/student/${this.id}/`); this.grades = response.data.sort((a, b) => a.quarter - b.quarter); } catch (error) { console.error('\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0435 \u043e\u0446\u0435\u043d\u043e\u043a \u0443\u0447\u0435\u043d\u0438\u043a\u0430:', error.response || error.message); } finally { this.isLoading = false; } }, async updateStudent() { try { const response = await apiClient.put(`students/${this.id}/`, this.editedStudent); this.student = response.data; this.showEditForm = false; } catch (error) { console.error('\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0438 \u0434\u0430\u043d\u043d\u044b\u0445 \u0443\u0447\u0435\u043d\u0438\u043a\u0430:', error.response || error.message); } }, async deleteStudent() { if (confirm('\u0412\u044b \u0443\u0432\u0435\u0440\u0435\u043d\u044b, \u0447\u0442\u043e \u0445\u043e\u0442\u0438\u0442\u0435 \u0443\u0434\u0430\u043b\u0438\u0442\u044c \u044d\u0442\u043e\u0433\u043e \u0443\u0447\u0435\u043d\u0438\u043a\u0430?')) { try { await apiClient.delete(`students/${this.id}/`); alert('\u0423\u0447\u0435\u043d\u0438\u043a \u0443\u0434\u0430\u043b\u0451\u043d \u0443\u0441\u043f\u0435\u0448\u043d\u043e.'); this.$router.push('/students'); } catch (error) { console.error('\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0438 \u0443\u0447\u0435\u043d\u0438\u043a\u0430:', error.response || error.message); } } }, cancelEdit() { this.showEditForm = false; this.editedStudent = { ...this.student }; }, setGender(gender) { this.editedStudent.gender = gender; }, }, }; </script> \u0410\u043d\u0430\u043b\u043e\u0433\u0438\u0447\u043d\u043e \u044f \u043d\u0430\u043f\u0438\u0441\u0430\u043b\u0430 \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044e \u0434\u043b\u044f \u0441\u043f\u0438\u0441\u043a\u0430 \u0443\u0447\u0438\u0442\u0435\u043b\u0435\u0439 \u0438 \u0434\u0435\u0442\u0430\u043b\u044c\u043d\u043e\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0438\u0438 \u043f\u043e \u0443\u0447\u0438\u0442\u0435\u043b\u044f\u043c: RoomsList.vue: <template> <div> <Header /> <div class=\"page-container\"> <div class=\"header-container\"> <h1 class=\"page-title\">\u0421\u043f\u0438\u0441\u043e\u043a \u043a\u043e\u043c\u043d\u0430\u0442</h1> <button @click=\"showAddRoomModal = true\" class=\"add-button\">\u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u043a\u043e\u043c\u043d\u0430\u0442\u0443</button> </div> <div class=\"rooms-grid\"> <div v-for=\"room in rooms\" :key=\"room.id_room\" class=\"room-card\" @click=\"openRoomDetails(room)\" > <h2>\u041a\u043e\u043c\u043d\u0430\u0442\u0430 \u2116{{ room.number }}</h2> <p>\u0421\u0442\u0430\u0442\u0443\u0441: {{ room.status }}</p> </div> </div> <div v-if=\"showAddRoomModal\" class=\"modal-overlay\"> <div class=\"modal-content\"> <form @submit.prevent=\"addRoom\"> <input v-model=\"newRoom.number\" type=\"text\" placeholder=\"\u041d\u043e\u043c\u0435\u0440 \u043a\u043e\u043c\u043d\u0430\u0442\u044b\" required /> <div class=\"status-select\"> <span>\u0412\u044b\u0431\u0435\u0440\u0438\u0442\u0435 \u0441\u0442\u0430\u0442\u0443\u0441:</span> <button type=\"button\" class=\"room-option\" :class=\"{ active: newRoom.status === '\u0411\u0430\u0437\u043e\u0432\u0430\u044f' }\" @click=\"selectStatus('\u0411\u0430\u0437\u043e\u0432\u0430\u044f')\" > \u0411\u0430\u0437\u043e\u0432\u0430\u044f </button> <button type=\"button\" class=\"room-option\" :class=\"{ active: newRoom.status === '\u041e\u0431\u043e\u0440\u0443\u0434\u043e\u0432\u0430\u043d\u043d\u0430\u044f' }\" @click=\"selectStatus('\u041e\u0431\u043e\u0440\u0443\u0434\u043e\u0432\u0430\u043d\u043d\u0430\u044f')\" > \u041e\u0431\u043e\u0440\u0443\u0434\u043e\u0432\u0430\u043d\u043d\u0430\u044f </button> </div> <div class=\"modal-actions\"> <button type=\"submit\" class=\"save-button\">\u0421\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u044c</button> <button @click=\"closeModal\" type=\"button\" class=\"cancel-button\">\u041e\u0442\u043c\u0435\u043d\u0430</button> </div> </form> </div> </div> <div v-if=\"selectedRoom\" class=\"modal-overlay\"> <div class=\"modal-content\"> <h2>\u041a\u043e\u043c\u043d\u0430\u0442\u0430 \u2116{{ selectedRoom.number }}</h2> <p>\u0421\u0442\u0430\u0442\u0443\u0441: {{ selectedRoom.status }}</p> <div class=\"modal-actions\"> <button @click=\"deleteRoom\" class=\"delete-button\">\u0423\u0434\u0430\u043b\u0438\u0442\u044c \u043a\u043e\u043c\u043d\u0430\u0442\u0443</button> <button @click=\"closeDetails\" class=\"cancel-button\">\u0417\u0430\u043a\u0440\u044b\u0442\u044c</button> </div> </div> </div> </div> </div> </template> <script> import Header from '@/components/Header.vue'; import apiClient from '@/api/axios'; export default { components: { Header }, data() { return { rooms: [], showAddRoomModal: false, newRoom: { number: '', status: '', }, selectedRoom: null, }; }, created() { this.fetchRooms(); }, methods: { async fetchRooms() { try { const response = await apiClient.get('rooms/'); this.rooms = response.data.sort((a, b) => a.number - b.number); } catch (error) { console.error('\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0435 \u043a\u043e\u043c\u043d\u0430\u0442:', error); } }, openRoomDetails(room) { this.selectedRoom = room; }, closeDetails() { this.selectedRoom = null; }, async addRoom() { try { const response = await apiClient.post('rooms/', this.newRoom); this.rooms.push(response.data); this.closeModal(); } catch (error) { console.error('\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0438 \u043a\u043e\u043c\u043d\u0430\u0442\u044b:', error); } }, async deleteRoom() { if (confirm(`\u0412\u044b \u0443\u0432\u0435\u0440\u0435\u043d\u044b, \u0447\u0442\u043e \u0445\u043e\u0442\u0438\u0442\u0435 \u0443\u0434\u0430\u043b\u0438\u0442\u044c \u043a\u043e\u043c\u043d\u0430\u0442\u0443 \u2116${this.selectedRoom.number}?`)) { try { await apiClient.delete(`rooms/${this.selectedRoom.id_room}/`); this.rooms = this.rooms.filter((room) => room.id_room !== this.selectedRoom.id_room); this.selectedRoom = null; } catch (error) { console.error('\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0438 \u043a\u043e\u043c\u043d\u0430\u0442\u044b:', error); } } }, selectStatus(status) { this.newRoom.status = status; }, closeModal() { this.showAddRoomModal = false; this.newRoom = { number: '', status: '' }; }, }, }; </script> Lessons.vue: <template> <div> <Header /> <div class=\"page-container\"> <div class=\"header-container\"> <h1 class=\"page-title\">\u0423\u0440\u043e\u043a\u0438</h1> <button @click=\"openAddLessonModal\" class=\"add-button\">\u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u043d\u043e\u0432\u044b\u0439 \u0443\u0440\u043e\u043a</button> </div> <div v-if=\"showAddLessonModal\" class=\"lesson-modal\"> <div class=\"modal-content\"> <form @submit.prevent=\"addLesson\"> <div class=\"form-group\"> <label for=\"subject\">\u041f\u0440\u0435\u0434\u043c\u0435\u0442</label> <input v-model=\"newLesson.subject\" type=\"text\" id=\"subject\" required placeholder=\"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043f\u0440\u0435\u0434\u043c\u0435\u0442\u0430\" /> </div> <div class=\"form-group\"> <label for=\"teacher\">\u0423\u0447\u0438\u0442\u0435\u043b\u044c</label> <select v-model=\"newLesson.id_teacher\" id=\"teacher\" required> <option v-for=\"teacher in teachers\" :key=\"teacher.id_teacher\" :value=\"teacher.id_teacher\"> {{ teacher.surname }} {{ teacher.name }} {{ teacher.room_assigned?.number }} </option> </select> </div> <div class=\"form-group\"> <label for=\"room\">\u041a\u043e\u043c\u043d\u0430\u0442\u0430</label> <select v-model=\"newLesson.room_assigned_id\" id=\"room\" required> <option v-for=\"room in rooms\" :key=\"room.id_room\" :value=\"room.id_room\"> \u041a\u043e\u043c\u043d\u0430\u0442\u0430 \u2116{{ room.number }} - {{ room.status }} </option> </select> </div> <div class=\"form-group\"> <label for=\"class_label\">\u041a\u043b\u0430\u0441\u0441</label> <input v-model=\"newLesson.class_label\" type=\"text\" id=\"class_label\" required placeholder=\"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u043a\u043b\u0430\u0441\u0441\" /> </div> <div class=\"form-group\"> <label for=\"day\">\u0414\u0435\u043d\u044c \u043d\u0435\u0434\u0435\u043b\u0438</label> <select v-model=\"newLesson.day\" id=\"day\" required> <option value=\"\u041f\u043e\u043d\u0435\u0434\u0435\u043b\u044c\u043d\u0438\u043a\">\u041f\u043e\u043d\u0435\u0434\u0435\u043b\u044c\u043d\u0438\u043a</option> <option value=\"\u0412\u0442\u043e\u0440\u043d\u0438\u043a\">\u0412\u0442\u043e\u0440\u043d\u0438\u043a</option> <option value=\"\u0421\u0440\u0435\u0434\u0430\">\u0421\u0440\u0435\u0434\u0430</option> <option value=\"\u0427\u0435\u0442\u0432\u0435\u0440\u0433\">\u0427\u0435\u0442\u0432\u0435\u0440\u0433</option> <option value=\"\u041f\u044f\u0442\u043d\u0438\u0446\u0430\">\u041f\u044f\u0442\u043d\u0438\u0446\u0430</option> <option value=\"\u0421\u0443\u0431\u0431\u043e\u0442\u0430\">\u0421\u0443\u0431\u0431\u043e\u0442\u0430</option> </select> </div> <div class=\"form-group\"> <label for=\"lesson_number\">\u041d\u043e\u043c\u0435\u0440 \u0443\u0440\u043e\u043a\u0430</label> <div class=\"lesson-number-buttons\"> <button v-for=\"n in 8\" :key=\"n\" type=\"button\" :class=\"['lesson-number-button', { selected: newLesson.lesson_number === n }]\" @click=\"newLesson.lesson_number = n\" > {{ n }} </button> </div> </div> <button type=\"submit\" class=\"save-button\">\u0421\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u044c</button> <button @click=\"closeAddLessonModal\" class=\"cancel-button\">\u041e\u0442\u043c\u0435\u043d\u0430</button> </form> </div> </div> <div v-if=\"showEditLessonModal\" class=\"lesson-modal\"> <div class=\"modal-content\"> <form @submit.prevent=\"updateLesson\"> <h2>\u0420\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0443\u0440\u043e\u043a</h2> <div class=\"form-group\"> <label for=\"edit-subject\">\u041f\u0440\u0435\u0434\u043c\u0435\u0442</label> <input v-model=\"editableLesson.subject\" type=\"text\" id=\"edit-subject\" required placeholder=\"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043f\u0440\u0435\u0434\u043c\u0435\u0442\u0430\" /> </div> <div class=\"form-group\"> <label for=\"edit-teacher\">\u0423\u0447\u0438\u0442\u0435\u043b\u044c</label> <select v-model=\"editableLesson.id_teacher\" id=\"edit-teacher\" required> <option v-for=\"teacher in teachers\" :key=\"teacher.id_teacher\" :value=\"teacher.id_teacher\"> {{ teacher.surname }} {{ teacher.name }} {{ teacher.room_assigned?.number }} </option> </select> </div> <div class=\"form-group\"> <label for=\"room\">\u041a\u043e\u043c\u043d\u0430\u0442\u0430</label> <select v-model=\"editableLesson.room_assigned_id\" id=\"room\" required> <option v-for=\"room in rooms\" :key=\"room.id_room\" :value=\"room.id_room\"> \u041a\u043e\u043c\u043d\u0430\u0442\u0430 \u2116{{ room.number }} - {{ room.status }} </option> </select> </div> <div class=\"form-group\"> <label for=\"class_label\">\u041a\u043b\u0430\u0441\u0441</label> <input v-model=\"editableLesson.class_label\" type=\"text\" id=\"class_label\" required placeholder=\"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u043a\u043b\u0430\u0441\u0441\" /> </div> <div class=\"form-group\"> <label for=\"day\">\u0414\u0435\u043d\u044c \u043d\u0435\u0434\u0435\u043b\u0438</label> <select v-model=\"editableLesson.day\" id=\"day\" required> <option value=\"\u041f\u043e\u043d\u0435\u0434\u0435\u043b\u044c\u043d\u0438\u043a\">\u041f\u043e\u043d\u0435\u0434\u0435\u043b\u044c\u043d\u0438\u043a</option> <option value=\"\u0412\u0442\u043e\u0440\u043d\u0438\u043a\">\u0412\u0442\u043e\u0440\u043d\u0438\u043a</option> <option value=\"\u0421\u0440\u0435\u0434\u0430\">\u0421\u0440\u0435\u0434\u0430</option> <option value=\"\u0427\u0435\u0442\u0432\u0435\u0440\u0433\">\u0427\u0435\u0442\u0432\u0435\u0440\u0433</option> <option value=\"\u041f\u044f\u0442\u043d\u0438\u0446\u0430\">\u041f\u044f\u0442\u043d\u0438\u0446\u0430</option> <option value=\"\u0421\u0443\u0431\u0431\u043e\u0442\u0430\">\u0421\u0443\u0431\u0431\u043e\u0442\u0430</option> </select> </div> <div class=\"form-group\"> <label for=\"lesson_number\">\u041d\u043e\u043c\u0435\u0440 \u0443\u0440\u043e\u043a\u0430</label> <div class=\"lesson-number-buttons\"> <button v-for=\"n in 8\" :key=\"n\" type=\"button\" :class=\"['lesson-number-button', { selected: editableLesson.lesson_number === n }]\" @click=\"editableLesson.lesson_number = n\" > {{ n }} </button> </div> </div> <button type=\"submit\" class=\"save-button\">\u0421\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u044c</button> <button @click=\"closeEditLessonModal\" class=\"cancel-button\">\u041e\u0442\u043c\u0435\u043d\u0430</button> </form> </div> </div> <div v-if=\"teachers.length > 0 && rooms.length > 0\"> <div v-for=\"(lessons, day) in lessonsByDay\" :key=\"day\" class=\"lesson-day\"> <h2>{{ day }}</h2> <div v-for=\"lesson in lessons\" :key=\"lesson.id_lesson\" class=\"lesson-card\"> <p><strong> {{lesson.lesson_number }} {{ lesson.subject }}</strong></p> <p>\u0423\u0447\u0438\u0442\u0435\u043b\u044c: {{ lesson.teacher }}</p> <p>\u041a\u043e\u043c\u043d\u0430\u0442\u0430: {{ lesson.room }}</p> <p>\u041a\u043b\u0430\u0441\u0441: {{ lesson.class_label }}</p> <div class=\"lesson-card-actions\"> <button @click=\"openEditLessonModal(lesson)\" class=\"edit-button\">\u0420\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c</button> <button @click.stop=\"deleteLesson(lesson.id_lesson)\" class=\"delete-button\">\u0423\u0434\u0430\u043b\u0438\u0442\u044c</button> </div> </div> </div> </div> </div> </div> </template> <script> import Header from '@/components/Header.vue'; import apiClient from '@/api/axios'; export default { components: { Header, }, data() { return { newLesson: { subject: '', id_teacher: null, room_assigned_id: null, class_label: '', day: '', lesson_number: null, }, editableLesson: {}, teachers: [], rooms: [], lessonsByDay: {}, showModal: false, modalLesson: {}, showAddLessonModal: false, showEditLessonModal: false, }; }, created() { this.fetchData(); }, methods: { async fetchData() { try { const [teachersResponse, roomsResponse] = await Promise.all([ apiClient.get('teachers/'), apiClient.get('rooms/') ]); this.teachers = teachersResponse.data; this.rooms = roomsResponse.data; this.fetchLessons(); } catch (error) { console.error('\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0435 \u0434\u0430\u043d\u043d\u044b\u0445:', error); } }, async fetchLessons() { try { const response = await apiClient.get('lessons/'); const lessons = response.data; console.log('\u0417\u0430\u0433\u0440\u0443\u0436\u0435\u043d\u043d\u044b\u0435 \u0443\u0440\u043e\u043a\u0438:', lessons); lessons.forEach(lesson => { const teacher = this.teachers.find(t => t.id_teacher === lesson.teacher); const room = this.rooms.find(r => r.id_room === lesson.room); lesson.teacher = teacher ? `${teacher.surname} ${teacher.name}` : '\u041d\u0435\u0438\u0437\u0432\u0435\u0441\u0442\u043d\u043e'; lesson.room = room ? `\u2116${room.number}` : '\u041d\u0435 \u0443\u043a\u0430\u0437\u0430\u043d'; lesson.class_label = lesson.class_label || '\u041a\u043b\u0430\u0441\u0441 \u043d\u0435 \u0443\u043a\u0430\u0437\u0430\u043d'; }); this.lessonsByDay = this.organizeLessonsByDay(lessons); } catch (error) { console.error('\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u0443\u0440\u043e\u043a\u043e\u0432:', error); } }, organizeLessonsByDay(lessons) { const lessonsByDay = { \u041f\u043e\u043d\u0435\u0434\u0435\u043b\u044c\u043d\u0438\u043a: [], \u0412\u0442\u043e\u0440\u043d\u0438\u043a: [], \u0421\u0440\u0435\u0434\u0430: [], \u0427\u0435\u0442\u0432\u0435\u0440\u0433: [], \u041f\u044f\u0442\u043d\u0438\u0446\u0430: [], \u0421\u0443\u0431\u0431\u043e\u0442\u0430: [], }; lessons.forEach(lesson => { lessonsByDay[lesson.day].push(lesson); }); for (const day in lessonsByDay) { lessonsByDay[day].sort((a, b) => a.lesson_number - b.lesson_number); } return lessonsByDay; }, async addLesson() { try { if (!this.newLesson.id_teacher || !this.newLesson.room_assigned_id || !this.newLesson.class_label || !this.newLesson.subject) { alert('\u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u0437\u0430\u043f\u043e\u043b\u043d\u0438\u0442\u0435 \u0432\u0441\u0435 \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043f\u043e\u043b\u044f'); return; } const newLesson = { subject: this.newLesson.subject, teacher: this.newLesson.id_teacher, room: this.newLesson.room_assigned_id, class_label: this.newLesson.class_label, day: this.newLesson.day, lesson_number: this.newLesson.lesson_number, }; const response = await apiClient.post('lessons/', newLesson); this.lessonsByDay[response.data.day].push(response.data); this.resetNewLessonForm(); this.closeAddLessonModal(); } catch (error) { console.error('\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0438 \u0443\u0440\u043e\u043a\u0430:', error); if (error.response) { console.error('\u041e\u0442\u0432\u0435\u0442 \u043e\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430:', error.response.data); } } }, resetNewLessonForm() { this.newLesson = { subject: '', id_teacher: null, room_assigned_id: null, class_label: '', day: '\u041f\u043e\u043d\u0435\u0434\u0435\u043b\u044c\u043d\u0438\u043a', lesson_number: 1, }; }, openAddLessonModal() { this.showAddLessonModal = true; }, closeAddLessonModal() { this.showAddLessonModal = false; }, openEditLessonModal(lesson) { this.editableLesson = { id_lesson: lesson.id_lesson, subject: lesson.subject, id_teacher: lesson.id_teacher, room_assigned_id: lesson.room_assigned_id, class_label: lesson.class_label, day: lesson.day, lesson_number: lesson.lesson_number, }; this.showEditLessonModal = true; }, async updateLesson() { try { console.log('\u0414\u0430\u043d\u043d\u044b\u0435 \u0434\u043b\u044f \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f:', this.editableLesson); await apiClient.put(`lessons/${this.editableLesson.id_lesson}/`, { subject: this.editableLesson.subject, teacher: this.editableLesson.id_teacher, room: this.editableLesson.room_assigned_id, class_label: this.editableLesson.class_label, day: this.editableLesson.day, lesson_number: this.editableLesson.lesson_number, }); this.fetchLessons(); this.closeEditLessonModal(); } catch (error) { console.error('\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0438 \u0443\u0440\u043e\u043a\u0430:', error.response?.data || error); alert(`\u041e\u0448\u0438\u0431\u043a\u0430: ${JSON.stringify(error.response?.data || error)}`); } }, closeEditLessonModal() { this.showEditLessonModal = false; }, async deleteLesson(lessonId) { try { await apiClient.delete(`lessons/${lessonId}/`); this.fetchLessons(); this.closeModal(); } catch (error) { console.error('\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0438 \u0443\u0440\u043e\u043a\u0430:', error); } }, }, }; </script> \u0421\u043f\u0438\u0441\u043e\u043a \u043e\u0446\u0435\u043d\u043e\u043a \u0434\u043b\u044f \u0443\u0447\u0435\u043d\u0438\u043a\u043e\u0432 \u043f\u043e \u0447\u0435\u0442\u0432\u0435\u0440\u0442\u044f\u043c, Grades.vue: \u0413\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u044f \u043e\u0442\u0447\u0451\u0442\u0430 \u043f\u043e \u043a\u043b\u0430\u0441\u0441\u0443, Report.Vue: <template> <div> <Header /> <div class=\"page-container\"> <h1>\u0413\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u044f \u043e\u0442\u0447\u0451\u0442\u0430</h1> <div class=\"form-container\"> <label for=\"class-select\" class=\"form-label-inline\">\u0412\u044b\u0431\u0435\u0440\u0438\u0442\u0435 \u043a\u043b\u0430\u0441\u0441:</label> <div class=\"select-container-inline\"> <select v-model=\"selectedClass\" id=\"class-select\" @change=\"fetchReportData\" class=\"custom-select\"> <option value=\"\" disabled selected>\u0412\u044b\u0431\u0435\u0440\u0438\u0442\u0435 \u043a\u043b\u0430\u0441\u0441...</option> <option v-for=\"className in classOptions\" :key=\"className\" :value=\"className\"> {{ className }} </option> </select> </div> </div> <div v-if=\"selectedClass && reportData\" class=\"report-content\"> <h2>{{ selectedClass }} \u041a\u043b\u0430\u0441\u0441</h2> <div class=\"gender-count\"> <p>\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043c\u0430\u043b\u044c\u0447\u0438\u043a\u043e\u0432: {{ reportData.genderCount.boys }}</p> <p>\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0434\u0435\u0432\u043e\u0447\u0435\u043a: {{ reportData.genderCount.girls }}</p> </div> <h3>\u0421\u043f\u0438\u0441\u043e\u043a \u0443\u0447\u0435\u043d\u0438\u043a\u043e\u0432:</h3> <table class=\"students-table\"> <thead> <tr> <th>\u0424\u0430\u043c\u0438\u043b\u0438\u044f</th> <th>\u0418\u043c\u044f</th> </tr> </thead> <tbody> <tr v-for=\"student in reportData.students\" :key=\"student.id_student\"> <td>{{ student.surname }}</td> <td>{{ student.name }}</td> </tr> </tbody> </table> <h3>\u0421\u043f\u0438\u0441\u043e\u043a \u0443\u0440\u043e\u043a\u043e\u0432:</h3> <table class=\"lessons-table\"> <thead> <tr> <th>\u0414\u0435\u043d\u044c</th> <th>\u041d\u043e\u043c\u0435\u0440 \u0443\u0440\u043e\u043a\u0430</th> <th>\u041f\u0440\u0435\u0434\u043c\u0435\u0442</th> <th>\u041a\u0430\u0431\u0438\u043d\u0435\u0442</th> </tr> </thead> <tbody> <tr v-for=\"lesson in enrichedLessons\" :key=\"lesson.id_lesson\"> <td>{{ lesson.day }}</td> <td>{{ lesson.lesson_number }}</td> <td>{{ lesson.subject }}</td> <td>{{ lesson.room_number }}</td> </tr> </tbody> </table> </div> <div v-else-if=\"selectedClass\" class=\"loading-message\"> <p>\u0417\u0430\u0433\u0440\u0443\u0436\u0430\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0435 \u0434\u043b\u044f \u043a\u043b\u0430\u0441\u0441\u0430 {{ selectedClass }}...</p> </div> </div> </div> </template> <script> import Header from \"@/components/Header.vue\"; import apiClient from \"@/api/axios\"; export default { components: { Header }, data() { return { classOptions: [], selectedClass: null, reportData: null, rooms: [], }; }, computed: { enrichedLessons() { if (!this.reportData || !this.reportData.lessons) return []; const daysOfWeek = [\"\u041f\u043e\u043d\u0435\u0434\u0435\u043b\u044c\u043d\u0438\u043a\", \"\u0412\u0442\u043e\u0440\u043d\u0438\u043a\", \"\u0421\u0440\u0435\u0434\u0430\", \"\u0427\u0435\u0442\u0432\u0435\u0440\u0433\", \"\u041f\u044f\u0442\u043d\u0438\u0446\u0430\", \"\u0421\u0443\u0431\u0431\u043e\u0442\u0430\"]; return this.reportData.lessons .map((lesson) => { const room = this.rooms.find((room) => room.id_room === lesson.room); return { ...lesson, room_number: room ? room.number : \"\u041d\u0435\u0438\u0437\u0432\u0435\u0441\u0442\u043d\u043e\", }; }) .sort((a, b) => { const dayA = daysOfWeek.indexOf(a.day); const dayB = daysOfWeek.indexOf(b.day); if (dayA !== dayB) { return dayA - dayB; } return a.lesson_number - b.lesson_number; }); }, }, created() { this.fetchClasses(); this.fetchRooms(); }, methods: { async fetchClasses() { try { const response = await apiClient.get(\"students/\"); const uniqueClasses = [ ...new Set(response.data.map((student) => student.class_name)), ]; this.classOptions = uniqueClasses; } catch (error) { console.error(\"\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0435 \u043a\u043b\u0430\u0441\u0441\u043e\u0432:\", error); } }, async fetchRooms() { try { const response = await apiClient.get(\"rooms/\"); this.rooms = response.data; } catch (error) { console.error(\"\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u043a\u0430\u0431\u0438\u043d\u0435\u0442\u043e\u0432:\", error); } }, async fetchReportData() { if (!this.selectedClass) return; try { const studentsResponse = await apiClient.get(\"students/\"); const students = studentsResponse.data.filter( (student) => student.class_name === this.selectedClass ); const genderCount = { boys: students.filter((student) => student.gender === \"\u041c\").length, girls: students.filter((student) => student.gender === \"\u0416\").length, }; const lessonsResponse = await apiClient.get(\"lessons/\"); const lessons = lessonsResponse.data.filter( (lesson) => lesson.class_label === this.selectedClass ); this.reportData = { students, genderCount, lessons, }; } catch (error) { console.error(\"\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u043e\u0442\u0447\u0451\u0442\u0430:\", error); } }, }, }; </script>","title":"\u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u043e\u0432"}]}